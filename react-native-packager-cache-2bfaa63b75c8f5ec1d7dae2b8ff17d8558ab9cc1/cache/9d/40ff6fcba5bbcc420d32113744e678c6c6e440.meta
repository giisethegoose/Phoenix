["511972544877ac1f7886da262b1c27cba504b11a","447a3965d9a6c049fc6b13ad2e18ec5c177d787a",["@firebase/util","./Repo","./util/util","./util/libs/parser","./util/validation","./Repo_transaction"],[99,139,171,210,260,290],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/RepoManager.js"],"names":["Object","defineProperty","exports","value","util_1","require","Repo_1","util_2","parser_1","validation_1","DATABASE_URL_OPTION","_staticInstance","RepoManager","repos_","useRestClient_","getInstance","prototype","interrupt","appName","dbUrl","resume","databaseFromApp","app","url","options","undefined","fatal","parsedUrl","parseRepoInfo","repoInfo","validateUrl","path","isEmpty","repo","createRepo","database","deleteRepo","appRepos","safeGet","name","repoInfo_","toURLString","Repo","forceRestClient"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Repo_1 = require(\"./Repo\");\nvar util_2 = require(\"./util/util\");\nvar parser_1 = require(\"./util/libs/parser\");\nvar validation_1 = require(\"./util/validation\");\nrequire(\"./Repo_transaction\");\n/** @const {string} */\nvar DATABASE_URL_OPTION = 'databaseURL';\nvar _staticInstance;\n/**\n * Creates and caches Repo instances.\n */\nvar RepoManager = /** @class */ (function () {\n    function RepoManager() {\n        /**\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\n         */\n        this.repos_ = {};\n        /**\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\n         * @private {boolean}\n         */\n        this.useRestClient_ = false;\n    }\n    RepoManager.getInstance = function () {\n        if (!_staticInstance) {\n            _staticInstance = new RepoManager();\n        }\n        return _staticInstance;\n    };\n    // TODO(koss): Remove these functions unless used in tests?\n    RepoManager.prototype.interrupt = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].interrupt();\n            }\n        }\n    };\n    RepoManager.prototype.resume = function () {\n        for (var appName in this.repos_) {\n            for (var dbUrl in this.repos_[appName]) {\n                this.repos_[appName][dbUrl].resume();\n            }\n        }\n    };\n    /**\n     * This function should only ever be called to CREATE a new database instance.\n     *\n     * @param {!FirebaseApp} app\n     * @return {!Database}\n     */\n    RepoManager.prototype.databaseFromApp = function (app, url) {\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\n        if (dbUrl === undefined) {\n            util_2.fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\n                DATABASE_URL_OPTION +\n                ' option when calling firebase.intializeApp().');\n        }\n        var parsedUrl = parser_1.parseRepoInfo(dbUrl);\n        var repoInfo = parsedUrl.repoInfo;\n        validation_1.validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\n        if (!parsedUrl.path.isEmpty()) {\n            util_2.fatal('Database URL must point to the root of a Firebase Database ' +\n                '(not including a child path).');\n        }\n        var repo = this.createRepo(repoInfo, app);\n        return repo.database;\n    };\n    /**\n     * Remove the repo and make sure it is disconnected.\n     *\n     * @param {!Repo} repo\n     */\n    RepoManager.prototype.deleteRepo = function (repo) {\n        var appRepos = util_1.safeGet(this.repos_, repo.app.name);\n        // This should never happen...\n        if (!appRepos || util_1.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\n            util_2.fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\n        }\n        repo.interrupt();\n        delete appRepos[repo.repoInfo_.toURLString()];\n    };\n    /**\n     * Ensures a repo doesn't already exist and then creates one using the\n     * provided app.\n     *\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\n     * @param {!FirebaseApp} app\n     * @return {!Repo} The Repo object for the specified server / repoName.\n     */\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\n        var appRepos = util_1.safeGet(this.repos_, app.name);\n        if (!appRepos) {\n            appRepos = {};\n            this.repos_[app.name] = appRepos;\n        }\n        var repo = util_1.safeGet(appRepos, repoInfo.toURLString());\n        if (repo) {\n            util_2.fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\n        }\n        repo = new Repo_1.Repo(repoInfo, this.useRestClient_, app);\n        appRepos[repoInfo.toURLString()] = repo;\n        return repo;\n    };\n    /**\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n     * @param {boolean} forceRestClient\n     */\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\n        this.useRestClient_ = forceRestClient;\n    };\n    return RepoManager;\n}());\nexports.RepoManager = RepoManager;\n\n//# sourceMappingURL=RepoManager.js.map\n"]}]