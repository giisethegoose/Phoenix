["cac434a5607f6fc70abad9cd9a46431fd1902867","a9a3e9529f19be0d3bc5d50f9206bd6c3b0ba257",["./promise_external"],[105],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/storage/dist/cjs/src/implementation/async.js"],"names":["Object","defineProperty","exports","value","promiseimpl","require","async","f","argsToForward","_i","arguments","length","resolve","then","apply"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;;AAIA,IAAIC,cAAcC,QAAQ,oBAAR,CAAlB;;AAMA,SAASC,KAAT,CAAeC,CAAf,EAAkB;AACd,WAAO,YAAY;AACf,YAAIC,gBAAgB,EAApB;AACA,aAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKC,UAAUC,MAAhC,EAAwCF,IAAxC,EAA8C;AAC1CD,0BAAcC,EAAd,IAAoBC,UAAUD,EAAV,CAApB;AACH;AACDL,oBAAYQ,OAAZ,CAAoB,IAApB,EAA0BC,IAA1B,CAA+B,YAAY;AACvCN,cAAEO,KAAF,CAAQ,IAAR,EAAcN,aAAd;AACH,SAFD;AAGH,KARD;AASH;AACDN,QAAQI,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview Method for invoking a callback asynchronously.\n */\nvar promiseimpl = require(\"./promise_external\");\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\nfunction async(f) {\n    return function () {\n        var argsToForward = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            argsToForward[_i] = arguments[_i];\n        }\n        promiseimpl.resolve(true).then(function () {\n            f.apply(null, argsToForward);\n        });\n    };\n}\nexports.async = async;\n\n//# sourceMappingURL=async.js.map\n"]}]