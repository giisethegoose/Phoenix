["5639ab7aa7eb2cdc938382a8d53b5f3fc886873f","ed407b35e7a62d7952687e7ea49accd0c4d31bd8",["./util","@firebase/util"],[99,131],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/util/Path.js"],"names":["Object","defineProperty","exports","value","util_1","require","util_2","Path","pathOrString","pieceNum","pieces_","split","copyTo","i","length","pieceNum_","get","enumerable","configurable","prototype","getFront","getLength","popFront","getBack","toString","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","push","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","Error","comparePaths","left","right","leftKeys","rightKeys","cmp","nameCompare","equals","other","j","contains","ValidationPath","path","errorPrefix_","parts_","byteLength_","Math","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","join"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\nvar Path = /** @class */ (function () {\n    /**\n     * @param {string|Array.<string>} pathOrString Path string to parse,\n     *      or another path, or the raw tokens array\n     * @param {number=} pieceNum\n     */\n    function Path(pathOrString, pieceNum) {\n        if (pieceNum === void 0) {\n            this.pieces_ = pathOrString.split('/');\n            // Remove empty pieces.\n            var copyTo = 0;\n            for (var i = 0; i < this.pieces_.length; i++) {\n                if (this.pieces_[i].length > 0) {\n                    this.pieces_[copyTo] = this.pieces_[i];\n                    copyTo++;\n                }\n            }\n            this.pieces_.length = copyTo;\n            this.pieceNum_ = 0;\n        }\n        else {\n            this.pieces_ = pathOrString;\n            this.pieceNum_ = pieceNum;\n        }\n    }\n    Object.defineProperty(Path, \"Empty\", {\n        /**\n         * Singleton to represent an empty path\n         *\n         * @const\n         */\n        get: function () {\n            return new Path('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Path.prototype.getFront = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        return this.pieces_[this.pieceNum_];\n    };\n    /**\n     * @return {number} The number of segments in this path\n     */\n    Path.prototype.getLength = function () {\n        return this.pieces_.length - this.pieceNum_;\n    };\n    /**\n     * @return {!Path}\n     */\n    Path.prototype.popFront = function () {\n        var pieceNum = this.pieceNum_;\n        if (pieceNum < this.pieces_.length) {\n            pieceNum++;\n        }\n        return new Path(this.pieces_, pieceNum);\n    };\n    /**\n     * @return {?string}\n     */\n    Path.prototype.getBack = function () {\n        if (this.pieceNum_ < this.pieces_.length)\n            return this.pieces_[this.pieces_.length - 1];\n        return null;\n    };\n    Path.prototype.toString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + this.pieces_[i];\n        }\n        return pathString || '/';\n    };\n    Path.prototype.toUrlEncodedString = function () {\n        var pathString = '';\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\n            if (this.pieces_[i] !== '')\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\n        }\n        return pathString || '/';\n    };\n    /**\n     * Shallow copy of the parts of the path.\n     *\n     * @param {number=} begin\n     * @return {!Array<string>}\n     */\n    Path.prototype.slice = function (begin) {\n        if (begin === void 0) { begin = 0; }\n        return this.pieces_.slice(this.pieceNum_ + begin);\n    };\n    /**\n     * @return {?Path}\n     */\n    Path.prototype.parent = function () {\n        if (this.pieceNum_ >= this.pieces_.length)\n            return null;\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\n            pieces.push(this.pieces_[i]);\n        return new Path(pieces, 0);\n    };\n    /**\n     * @param {string|!Path} childPathObj\n     * @return {!Path}\n     */\n    Path.prototype.child = function (childPathObj) {\n        var pieces = [];\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\n            pieces.push(this.pieces_[i]);\n        if (childPathObj instanceof Path) {\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n                pieces.push(childPathObj.pieces_[i]);\n            }\n        }\n        else {\n            var childPieces = childPathObj.split('/');\n            for (var i = 0; i < childPieces.length; i++) {\n                if (childPieces[i].length > 0)\n                    pieces.push(childPieces[i]);\n            }\n        }\n        return new Path(pieces, 0);\n    };\n    /**\n     * @return {boolean} True if there are no segments in this path\n     */\n    Path.prototype.isEmpty = function () {\n        return this.pieceNum_ >= this.pieces_.length;\n    };\n    /**\n     * @param {!Path} outerPath\n     * @param {!Path} innerPath\n     * @return {!Path} The path from outerPath to innerPath\n     */\n    Path.relativePath = function (outerPath, innerPath) {\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\n        if (outer === null) {\n            return innerPath;\n        }\n        else if (outer === inner) {\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\n        }\n        else {\n            throw new Error('INTERNAL ERROR: innerPath (' +\n                innerPath +\n                ') is not within ' +\n                'outerPath (' +\n                outerPath +\n                ')');\n        }\n    };\n    /**\n     * @param {!Path} left\n     * @param {!Path} right\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\n     */\n    Path.comparePaths = function (left, right) {\n        var leftKeys = left.slice();\n        var rightKeys = right.slice();\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n            var cmp = util_1.nameCompare(leftKeys[i], rightKeys[i]);\n            if (cmp !== 0)\n                return cmp;\n        }\n        if (leftKeys.length === rightKeys.length)\n            return 0;\n        return leftKeys.length < rightKeys.length ? -1 : 1;\n    };\n    /**\n     *\n     * @param {Path} other\n     * @return {boolean} true if paths are the same.\n     */\n    Path.prototype.equals = function (other) {\n        if (this.getLength() !== other.getLength()) {\n            return false;\n        }\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     *\n     * @param {!Path} other\n     * @return {boolean} True if this path is a parent (or the same as) other\n     */\n    Path.prototype.contains = function (other) {\n        var i = this.pieceNum_;\n        var j = other.pieceNum_;\n        if (this.getLength() > other.getLength()) {\n            return false;\n        }\n        while (i < this.pieces_.length) {\n            if (this.pieces_[i] !== other.pieces_[j]) {\n                return false;\n            }\n            ++i;\n            ++j;\n        }\n        return true;\n    };\n    return Path;\n}()); // end Path\nexports.Path = Path;\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nvar ValidationPath = /** @class */ (function () {\n    /**\n     * @param {!Path} path Initial Path.\n     * @param {string} errorPrefix_ Prefix for any error messages.\n     */\n    function ValidationPath(path, errorPrefix_) {\n        this.errorPrefix_ = errorPrefix_;\n        /** @type {!Array<string>} */\n        this.parts_ = path.slice();\n        /** @type {number} Initialize to number of '/' chars needed in path. */\n        this.byteLength_ = Math.max(1, this.parts_.length);\n        for (var i = 0; i < this.parts_.length; i++) {\n            this.byteLength_ += util_2.stringLength(this.parts_[i]);\n        }\n        this.checkValid_();\n    }\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\n        /** @const {number} Maximum key depth. */\n        get: function () {\n            return 32;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\n        get: function () {\n            return 768;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @param {string} child */\n    ValidationPath.prototype.push = function (child) {\n        // Count the needed '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ += 1;\n        }\n        this.parts_.push(child);\n        this.byteLength_ += util_2.stringLength(child);\n        this.checkValid_();\n    };\n    ValidationPath.prototype.pop = function () {\n        var last = this.parts_.pop();\n        this.byteLength_ -= util_2.stringLength(last);\n        // Un-count the previous '/'\n        if (this.parts_.length > 0) {\n            this.byteLength_ -= 1;\n        }\n    };\n    ValidationPath.prototype.checkValid_ = function () {\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\n            throw new Error(this.errorPrefix_ +\n                'has a key path longer than ' +\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\n                ' bytes (' +\n                this.byteLength_ +\n                ').');\n        }\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\n            throw new Error(this.errorPrefix_ +\n                'path specified exceeds the maximum depth that can be written (' +\n                ValidationPath.MAX_PATH_DEPTH +\n                ') or object contains a cycle ' +\n                this.toErrorString());\n        }\n    };\n    /**\n     * String for use in error messages - uses '.' notation for path.\n     *\n     * @return {string}\n     */\n    ValidationPath.prototype.toErrorString = function () {\n        if (this.parts_.length == 0) {\n            return '';\n        }\n        return \"in property '\" + this.parts_.join('.') + \"'\";\n    };\n    return ValidationPath;\n}());\nexports.ValidationPath = ValidationPath;\n\n//# sourceMappingURL=Path.js.map\n"]}]