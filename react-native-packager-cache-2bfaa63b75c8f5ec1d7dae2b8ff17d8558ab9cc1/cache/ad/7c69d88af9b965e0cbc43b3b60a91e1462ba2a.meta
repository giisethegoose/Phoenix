["6fe62d102d69272dc0f4177de3ee9af034fc838b","30df12f4fa734e5d20e780b907eabc95b2e662e5",["@firebase/app","./array","./backoff","./error","./object","./promise_external","./type","./url","./xhrio"],[99,137,171,213,246,285,327,361,398],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/storage/dist/cjs/src/implementation/request.js"],"names":["Object","defineProperty","exports","value","app_1","require","array","backoff","errorsExports","object","promiseimpl","type","UrlUtils","XhrIoExports","NetworkRequest","url","method","headers","body","successCodes","additionalRetryCodes","callback","errorCallback","timeout","progressCallback","pool","pendingXhr_","backoffId_","resolve_","reject_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","slice","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","self","promise_","make","resolve","reject","start_","prototype","doTheRequest","backoffCallback","canceled","RequestEndStatus","xhr","createXhrIo","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","then","removeUploadProgressListener","hitServer","getErrorCode","ErrorCode","NO_ERROR","status","getStatus","isRetryStatusCode_","wasCanceled","ABORT","successCode","contains","backoffDone","requestWentThrough","wasSuccessCode","result","getResponseText","isJustDef","e","err","unknown","setServerResponseProp","appDeleted","retryLimitExceeded","start","getPromise","cancel","appDelete","stop","abort","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","opt_canceled","addAuthHeader_","authToken","length","addVersionHeader_","number","default","SDK_VERSION","makeRequest","requestInfo","queryPart","makeQueryString","urlParams","clone","handler","errorHandler"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\nvar app_1 = require(\"@firebase/app\");\nvar array = require(\"./array\");\nvar backoff = require(\"./backoff\");\nvar errorsExports = require(\"./error\");\nvar object = require(\"./object\");\nvar promiseimpl = require(\"./promise_external\");\nvar type = require(\"./type\");\nvar UrlUtils = require(\"./url\");\nvar XhrIoExports = require(\"./xhrio\");\n/**\n * @struct\n * @template T\n */\nvar NetworkRequest = /** @class */ (function () {\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n        this.pendingXhr_ = null;\n        this.backoffId_ = null;\n        this.resolve_ = null;\n        this.reject_ = null;\n        this.canceled_ = false;\n        this.appDelete_ = false;\n        this.url_ = url;\n        this.method_ = method;\n        this.headers_ = headers;\n        this.body_ = body;\n        this.successCodes_ = successCodes.slice();\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\n        this.callback_ = callback;\n        this.errorCallback_ = errorCallback;\n        this.progressCallback_ = progressCallback;\n        this.timeout_ = timeout;\n        this.pool_ = pool;\n        var self = this;\n        this.promise_ = promiseimpl.make(function (resolve, reject) {\n            self.resolve_ = resolve;\n            self.reject_ = reject;\n            self.start_();\n        });\n    }\n    /**\n     * Actually starts the retry loop.\n     */\n    NetworkRequest.prototype.start_ = function () {\n        var self = this;\n        function doTheRequest(backoffCallback, canceled) {\n            if (canceled) {\n                backoffCallback(false, new RequestEndStatus(false, null, true));\n                return;\n            }\n            var xhr = self.pool_.createXhrIo();\n            self.pendingXhr_ = xhr;\n            function progressListener(progressEvent) {\n                var loaded = progressEvent.loaded;\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n                if (self.progressCallback_ !== null) {\n                    self.progressCallback_(loaded, total);\n                }\n            }\n            if (self.progressCallback_ !== null) {\n                xhr.addUploadProgressListener(progressListener);\n            }\n            xhr\n                .send(self.url_, self.method_, self.body_, self.headers_)\n                .then(function (xhr) {\n                if (self.progressCallback_ !== null) {\n                    xhr.removeUploadProgressListener(progressListener);\n                }\n                self.pendingXhr_ = null;\n                xhr = xhr;\n                var hitServer = xhr.getErrorCode() === XhrIoExports.ErrorCode.NO_ERROR;\n                var status = xhr.getStatus();\n                if (!hitServer || self.isRetryStatusCode_(status)) {\n                    var wasCanceled = xhr.getErrorCode() === XhrIoExports.ErrorCode.ABORT;\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n                    return;\n                }\n                var successCode = array.contains(self.successCodes_, status);\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\n            });\n        }\n        /**\n         * @param requestWentThrough True if the request eventually went\n         *     through, false if it hit the retry limit or was canceled.\n         */\n        function backoffDone(requestWentThrough, status) {\n            var resolve = self.resolve_;\n            var reject = self.reject_;\n            var xhr = status.xhr;\n            if (status.wasSuccessCode) {\n                try {\n                    var result = self.callback_(xhr, xhr.getResponseText());\n                    if (type.isJustDef(result)) {\n                        resolve(result);\n                    }\n                    else {\n                        resolve();\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else {\n                if (xhr !== null) {\n                    var err = errorsExports.unknown();\n                    err.setServerResponseProp(xhr.getResponseText());\n                    if (self.errorCallback_) {\n                        reject(self.errorCallback_(xhr, err));\n                    }\n                    else {\n                        reject(err);\n                    }\n                }\n                else {\n                    if (status.canceled) {\n                        var err = self.appDelete_\n                            ? errorsExports.appDeleted()\n                            : errorsExports.canceled();\n                        reject(err);\n                    }\n                    else {\n                        var err = errorsExports.retryLimitExceeded();\n                        reject(err);\n                    }\n                }\n            }\n        }\n        if (this.canceled_) {\n            backoffDone(false, new RequestEndStatus(false, null, true));\n        }\n        else {\n            this.backoffId_ = backoff.start(doTheRequest, backoffDone, this.timeout_);\n        }\n    };\n    /** @inheritDoc */\n    NetworkRequest.prototype.getPromise = function () {\n        return this.promise_;\n    };\n    /** @inheritDoc */\n    NetworkRequest.prototype.cancel = function (appDelete) {\n        this.canceled_ = true;\n        this.appDelete_ = appDelete || false;\n        if (this.backoffId_ !== null) {\n            backoff.stop(this.backoffId_);\n        }\n        if (this.pendingXhr_ !== null) {\n            this.pendingXhr_.abort();\n        }\n    };\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n        // The codes for which to retry came from this page:\n        // https://cloud.google.com/storage/docs/exponential-backoff\n        var isFiveHundredCode = status >= 500 && status < 600;\n        var extraRetryCodes = [\n            // Request Timeout: web server didn't receive full request in time.\n            408,\n            // Too Many Requests: you're getting rate-limited, basically.\n            429\n        ];\n        var isExtraRetryCode = array.contains(extraRetryCodes, status);\n        var isRequestSpecificRetryCode = array.contains(this.additionalRetryCodes_, status);\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n    };\n    return NetworkRequest;\n}());\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled Defaults to false.\n * @struct\n */\nvar RequestEndStatus = /** @class */ (function () {\n    function RequestEndStatus(wasSuccessCode, xhr, opt_canceled) {\n        this.wasSuccessCode = wasSuccessCode;\n        this.xhr = xhr;\n        this.canceled = !!opt_canceled;\n    }\n    return RequestEndStatus;\n}());\nexports.RequestEndStatus = RequestEndStatus;\nfunction addAuthHeader_(headers, authToken) {\n    if (authToken !== null && authToken.length > 0) {\n        headers['Authorization'] = 'Firebase ' + authToken;\n    }\n}\nexports.addAuthHeader_ = addAuthHeader_;\nfunction addVersionHeader_(headers) {\n    var number = typeof app_1.default !== 'undefined' ? app_1.default.SDK_VERSION : 'AppManager';\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + number;\n}\nexports.addVersionHeader_ = addVersionHeader_;\n/**\n * @template T\n */\nfunction makeRequest(requestInfo, authToken, pool) {\n    var queryPart = UrlUtils.makeQueryString(requestInfo.urlParams);\n    var url = requestInfo.url + queryPart;\n    var headers = object.clone(requestInfo.headers);\n    addAuthHeader_(headers, authToken);\n    addVersionHeader_(headers);\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\nexports.makeRequest = makeRequest;\n\n//# sourceMappingURL=request.js.map\n"]}]