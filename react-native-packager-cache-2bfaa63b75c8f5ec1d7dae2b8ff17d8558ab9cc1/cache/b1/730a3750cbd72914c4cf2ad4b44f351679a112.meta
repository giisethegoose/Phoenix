["47f01f3f18b5e5af057deacc32fa93fba7409db6","aa58cb0e7648163da024edd25f64f49bc2f5e981",["@firebase/util","../util/Path","./Operation"],[99,139,182],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/operation/AckUserWrite.js"],"names":["Object","defineProperty","exports","value","util_1","require","Path_1","Operation_1","AckUserWrite","path","affectedTree","revert","type","OperationType","ACK_USER_WRITE","source","OperationSource","User","prototype","operationForChild","childName","isEmpty","assert","getFront","popFront","children","childTree","subtree","Path","Empty"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,SAASC,OAAT,kBAAJ;AACA,IAAIC,SAASD,QAAQ,cAAR,CAAb;AACA,IAAIE,cAAcF,QAAQ,aAAR,CAAlB;AACA,IAAIG,eAA8B,YAAY;AAO1C,aAASA,YAAT,CACsBC,IADtB,EAEsBC,YAFtB,EAGsBC,MAHtB,EAG8B;AAC1B,aAAKF,IAAL,GAAYA,IAAZ;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,MAAL,GAAcA,MAAd;;AAEA,aAAKC,IAAL,GAAYL,YAAYM,aAAZ,CAA0BC,cAAtC;;AAEA,aAAKC,MAAL,GAAcR,YAAYS,eAAZ,CAA4BC,IAA1C;AACH;;AAIDT,iBAAaU,SAAb,CAAuBC,iBAAvB,GAA2C,UAAUC,SAAV,EAAqB;AAC5D,YAAI,CAAC,KAAKX,IAAL,CAAUY,OAAV,EAAL,EAA0B;AACtBjB,mBAAOkB,MAAP,CAAc,KAAKb,IAAL,CAAUc,QAAV,OAAyBH,SAAvC,EAAkD,+CAAlD;AACA,mBAAO,IAAIZ,YAAJ,CAAiB,KAAKC,IAAL,CAAUe,QAAV,EAAjB,EAAuC,KAAKd,YAA5C,EAA0D,KAAKC,MAA/D,CAAP;AACH,SAHD,MAIK,IAAI,KAAKD,YAAL,CAAkBP,KAAlB,IAA2B,IAA/B,EAAqC;AACtCC,mBAAOkB,MAAP,CAAc,KAAKZ,YAAL,CAAkBe,QAAlB,CAA2BJ,OAA3B,EAAd,EAAoD,0DAApD;;AAEA,mBAAO,IAAP;AACH,SAJI,MAKA;AACD,gBAAIK,YAAY,KAAKhB,YAAL,CAAkBiB,OAAlB,CAA0B,IAAIrB,OAAOsB,IAAX,CAAgBR,SAAhB,CAA1B,CAAhB;AACA,mBAAO,IAAIZ,YAAJ,CAAiBF,OAAOsB,IAAP,CAAYC,KAA7B,EAAoCH,SAApC,EAA+C,KAAKf,MAApD,CAAP;AACH;AACJ,KAdD;AAeA,WAAOH,YAAP;AACH,CAtCiC,EAAlC;AAuCAN,QAAQM,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar Path_1 = require(\"../util/Path\");\nvar Operation_1 = require(\"./Operation\");\nvar AckUserWrite = /** @class */ (function () {\n    /**\n     *\n     * @param {!Path} path\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\n     * @param {!boolean} revert\n     */\n    function AckUserWrite(\n        /**@inheritDoc */ path, \n        /**@inheritDoc */ affectedTree, \n        /**@inheritDoc */ revert) {\n        this.path = path;\n        this.affectedTree = affectedTree;\n        this.revert = revert;\n        /** @inheritDoc */\n        this.type = Operation_1.OperationType.ACK_USER_WRITE;\n        /** @inheritDoc */\n        this.source = Operation_1.OperationSource.User;\n    }\n    /**\n     * @inheritDoc\n     */\n    AckUserWrite.prototype.operationForChild = function (childName) {\n        if (!this.path.isEmpty()) {\n            util_1.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\n        }\n        else if (this.affectedTree.value != null) {\n            util_1.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\n            // All child locations are affected as well; just return same operation.\n            return this;\n        }\n        else {\n            var childTree = this.affectedTree.subtree(new Path_1.Path(childName));\n            return new AckUserWrite(Path_1.Path.Empty, childTree, this.revert);\n        }\n    };\n    return AckUserWrite;\n}());\nexports.AckUserWrite = AckUserWrite;\n\n//# sourceMappingURL=AckUserWrite.js.map\n"]}]