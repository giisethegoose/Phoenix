["dad7ed71b3e1f4d96a783164880728dd4a4a4020","97078a59c5eda55c676528845eeed45e9e1c86c5",[],[],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-navigation/src/NavigationActions.js"],"names":["BACK","INIT","NAVIGATE","RESET","SET_PARAMS","URI","back","payload","type","key","init","action","params","navigate","routeName","reset","index","actions","setParams","uri","mapDeprecatedNavigateAction","mapDeprecatedAction","map","mapDeprecatedActionAndWarn","newAction","oldType","newType","console","warn","join"],"mappings":"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","sourcesContent":["/**\n * @flow\n */\n\nimport type {\n  NavigationAction,\n  PossiblyDeprecatedNavigationAction,\n  DeprecatedNavigationNavigateAction,\n  NavigationInitAction,\n  NavigationNavigateAction,\n  NavigationBackAction,\n  NavigationSetParamsAction,\n  NavigationResetAction,\n  NavigationUriAction,\n  NavigationParams,\n} from './TypeDefinition';\n\nconst BACK = 'Navigation/BACK';\nconst INIT = 'Navigation/INIT';\nconst NAVIGATE = 'Navigation/NAVIGATE';\nconst RESET = 'Navigation/RESET';\nconst SET_PARAMS = 'Navigation/SET_PARAMS';\nconst URI = 'Navigation/URI';\n\nconst back = (payload: { key?: ?string } = {}): NavigationBackAction => ({\n  type: BACK,\n  key: payload.key,\n});\nconst init = (\n  payload: { params?: NavigationParams } = {}\n): NavigationInitAction => {\n  const action: NavigationInitAction = {\n    type: INIT,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  return action;\n};\nconst navigate = (payload: {\n  routeName: string,\n  params?: ?NavigationParams,\n  action?: ?NavigationNavigateAction,\n}): NavigationNavigateAction => {\n  const action: NavigationNavigateAction = {\n    type: NAVIGATE,\n    routeName: payload.routeName,\n  };\n  if (payload.params) {\n    action.params = payload.params;\n  }\n  if (payload.action) {\n    action.action = payload.action;\n  }\n  return action;\n};\nconst reset = (payload: {\n  index: number,\n  key?: ?string,\n  actions: Array<NavigationNavigateAction>,\n}): NavigationResetAction => ({\n  type: RESET,\n  index: payload.index,\n  key: payload.key,\n  actions: payload.actions,\n});\nconst setParams = (payload: {\n  key: string,\n  params: NavigationParams,\n}): NavigationSetParamsAction => ({\n  type: SET_PARAMS,\n  key: payload.key,\n  params: payload.params,\n});\nconst uri = (payload: { uri: string }): NavigationUriAction => ({\n  type: URI,\n  uri: payload.uri,\n});\n\nconst mapDeprecatedNavigateAction = (\n  action: NavigationNavigateAction | DeprecatedNavigationNavigateAction\n): NavigationNavigateAction => {\n  if (action.type === 'Navigate') {\n    const payload: Object = {\n      routeName: action.routeName,\n      params: action.params,\n    };\n    if (action.action) {\n      payload.action = mapDeprecatedNavigateAction(action.action);\n    }\n    return navigate(payload);\n  }\n  return action;\n};\n\nconst mapDeprecatedAction = (\n  action: PossiblyDeprecatedNavigationAction\n): NavigationAction => {\n  if (action.type === 'Back') {\n    return back(action);\n  } else if (action.type === 'Init') {\n    return init(action);\n  } else if (action.type === 'Navigate') {\n    return mapDeprecatedNavigateAction(action);\n  } else if (action.type === 'Reset') {\n    return reset({\n      index: action.index,\n      key: action.key,\n      actions: action.actions.map(mapDeprecatedNavigateAction),\n    });\n  } else if (action.type === 'SetParams') {\n    return setParams(action);\n  }\n  return action;\n};\n\nconst mapDeprecatedActionAndWarn = (\n  action: PossiblyDeprecatedNavigationAction\n): NavigationAction => {\n  const newAction = mapDeprecatedAction(action);\n  if (newAction !== action) {\n    const oldType = action.type;\n    const newType = newAction.type;\n    console.warn(\n      [\n        `The action type '${oldType}' has been renamed to '${newType}'.`,\n        `'${oldType}' will continue to work while in beta but will be removed`,\n        'in the first major release. Moving forward, you should use the',\n        'action constants and action creators exported by this library in',\n        \"the 'actions' object.\",\n        'See https://github.com/react-community/react-navigation/pull/120 for',\n        'more details.',\n      ].join(' ')\n    );\n  }\n  return newAction;\n};\n\nexport default {\n  // Action constants\n  BACK,\n  INIT,\n  NAVIGATE,\n  RESET,\n  SET_PARAMS,\n  URI,\n\n  // Action creators\n  back,\n  init,\n  navigate,\n  reset,\n  setParams,\n  uri,\n\n  // TODO: Remove once old actions are deprecated\n  mapDeprecatedActionAndWarn,\n};\n"]}]