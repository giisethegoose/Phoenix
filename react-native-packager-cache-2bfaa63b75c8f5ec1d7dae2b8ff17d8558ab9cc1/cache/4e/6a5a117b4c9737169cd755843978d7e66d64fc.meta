["393a5b174ad122d1398e06aeebdc6bf3f5f36a83","bb167f0e56fd8898642265fe7d8452668d20d6c6",["./memoize"],[22],{"version":3,"sources":["/home/giise/candidtwo/node_modules/lodash/_memoizeCapped.js"],"names":["memoize","require","MAX_MEMOIZE_SIZE","memoizeCapped","func","result","key","cache","size","clear","module","exports"],"mappings":"AAAA,IAAIA,UAAUC,QAAQ,WAAR,CAAd;;AAGA,IAAIC,mBAAmB,GAAvB;;AAUA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAIC,SAASL,QAAQI,IAAR,EAAc,UAASE,GAAT,EAAc;AACvC,QAAIC,MAAMC,IAAN,KAAeN,gBAAnB,EAAqC;AACnCK,YAAME,KAAN;AACD;AACD,WAAOH,GAAP;AACD,GALY,CAAb;;AAOA,MAAIC,QAAQF,OAAOE,KAAnB;AACA,SAAOF,MAAP;AACD;;AAEDK,OAAOC,OAAP,GAAiBR,aAAjB","sourcesContent":["var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n"]}]