["315cbbdf6671d6f0d42432141d4d75bc58584484","f970f969969339e2a19049532aaf153a3cbd48fe",["../util/util"],[99],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/view/EventQueue.js"],"names":["Object","defineProperty","exports","value","util_1","require","EventQueue","eventLists_","recursionDepth_","prototype","queueEvents","eventDataList","currList","i","length","eventData","eventPath","getPath","equals","push","EventList","add","raiseEventsAtPath","path","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","contains","predicate","sentAll","eventList","raise","path_","events_","eventFn","getEventRunner","logger","log","toString","exceptionGuard"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n * @constructor\n */\nvar EventQueue = /** @class */ (function () {\n    function EventQueue() {\n        /**\n         * @private\n         * @type {!Array.<EventList>}\n         */\n        this.eventLists_ = [];\n        /**\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n         * @private\n         * @type {!number}\n         */\n        this.recursionDepth_ = 0;\n    }\n    /**\n     * @param {!Array.<Event>} eventDataList The new events to queue.\n     */\n    EventQueue.prototype.queueEvents = function (eventDataList) {\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n        var currList = null;\n        for (var i = 0; i < eventDataList.length; i++) {\n            var eventData = eventDataList[i];\n            var eventPath = eventData.getPath();\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\n                this.eventLists_.push(currList);\n                currList = null;\n            }\n            if (currList === null) {\n                currList = new EventList(eventPath);\n            }\n            currList.add(eventData);\n        }\n        if (currList) {\n            this.eventLists_.push(currList);\n        }\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\n     * for the specified path.\n     *\n     * It is assumed that the new events are all for the specified path.\n     *\n     * @param {!Path} path The path to raise events for.\n     * @param {!Array.<Event>} eventDataList The new events to raise.\n     */\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.equals(path);\n        });\n    };\n    /**\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\n     * locations related to the specified change path (i.e. all ancestors and descendants).\n     *\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n     *\n     * @param {!Path} changedPath The path to raise events for.\n     * @param {!Array.<!Event>} eventDataList The events to raise\n     */\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\n        this.queueEvents(eventDataList);\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\n        });\n    };\n    /**\n     * @param {!function(!Path):boolean} predicate\n     * @private\n     */\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\n        this.recursionDepth_++;\n        var sentAll = true;\n        for (var i = 0; i < this.eventLists_.length; i++) {\n            var eventList = this.eventLists_[i];\n            if (eventList) {\n                var eventPath = eventList.getPath();\n                if (predicate(eventPath)) {\n                    this.eventLists_[i].raise();\n                    this.eventLists_[i] = null;\n                }\n                else {\n                    sentAll = false;\n                }\n            }\n        }\n        if (sentAll) {\n            this.eventLists_ = [];\n        }\n        this.recursionDepth_--;\n    };\n    return EventQueue;\n}());\nexports.EventQueue = EventQueue;\n/**\n * @param {!Path} path\n * @constructor\n */\nvar EventList = /** @class */ (function () {\n    function EventList(path_) {\n        this.path_ = path_;\n        /**\n         * @type {!Array.<Event>}\n         * @private\n         */\n        this.events_ = [];\n    }\n    /**\n     * @param {!Event} eventData\n     */\n    EventList.prototype.add = function (eventData) {\n        this.events_.push(eventData);\n    };\n    /**\n     * Iterates through the list and raises each event\n     */\n    EventList.prototype.raise = function () {\n        for (var i = 0; i < this.events_.length; i++) {\n            var eventData = this.events_[i];\n            if (eventData !== null) {\n                this.events_[i] = null;\n                var eventFn = eventData.getEventRunner();\n                if (util_1.logger) {\n                    util_1.log('event: ' + eventData.toString());\n                }\n                util_1.exceptionGuard(eventFn);\n            }\n        }\n    };\n    /**\n     * @return {!Path}\n     */\n    EventList.prototype.getPath = function () {\n        return this.path_;\n    };\n    return EventList;\n}());\nexports.EventList = EventList;\n\n//# sourceMappingURL=EventQueue.js.map\n"]}]