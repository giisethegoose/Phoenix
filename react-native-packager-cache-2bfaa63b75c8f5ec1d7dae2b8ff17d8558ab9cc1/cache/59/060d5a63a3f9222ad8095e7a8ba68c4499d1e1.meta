["12fe4c83f54f90110f3a39097231110bbe37e747","587b6117f8d596c094798b556d44300c1ac2b26e",["ColorPropType","NativeMethodsMixin","prop-types","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin","Touchable","TouchableWithoutFeedback","View","ViewPropTypes","create-react-class","ensureComponentIsNative","ensurePositiveDelayProps","fbjs/lib/keyOf","merge"],[303,354,401,436,486,541,581,627,680,728,765,815,876,943,992,1031],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js"],"names":["ColorPropType","require","NativeMethodsMixin","PropTypes","React","ReactNativeViewAttributes","StyleSheet","TimerMixin","Touchable","TouchableWithoutFeedback","View","ViewPropTypes","createReactClass","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","DEFAULT_PROPS","activeOpacity","underlayColor","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableHighlight","displayName","propTypes","number","style","onShowUnderlay","func","onHideUnderlay","hasTVPreferredFocus","bool","tvParallaxProperties","object","mixins","Mixin","getDefaultProps","_computeSyntheticState","props","activeProps","opacity","activeUnderlayProps","backgroundColor","underlayStyle","INACTIVE_UNDERLAY_PROPS","getInitialState","_isMounted","touchableGetInitialState","componentDidMount","refs","CHILD_REF","componentWillUnmount","componentDidUpdate","componentWillReceiveProps","nextProps","setState","viewConfig","uiViewClassName","validAttributes","RCTView","touchableHandleActivePressIn","e","clearTimeout","_hideTimeout","_showUnderlay","onPressIn","touchableHandleActivePressOut","_hideUnderlay","onPressOut","touchableHandlePress","setTimeout","delayPressOut","onPress","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","_hasPressHandler","UNDERLAY_REF","setNativeProps","state","INACTIVE_CHILD_PROPS","render","accessible","accessibilityLabel","accessibilityComponentType","accessibilityTraits","onLayout","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","nativeID","testID","cloneElement","Children","only","children","ref","renderDebugView","color","childRef","underlayRef","create","x","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TouchableHighlight\n * @flow\n */\n'use strict';\n\nconst ColorPropType = require('ColorPropType');\nconst NativeMethodsMixin = require('NativeMethodsMixin');\nconst PropTypes = require('prop-types');\nconst React = require('React');\nconst ReactNativeViewAttributes = require('ReactNativeViewAttributes');\nconst StyleSheet = require('StyleSheet');\nconst TimerMixin = require('react-timer-mixin');\nconst Touchable = require('Touchable');\nconst TouchableWithoutFeedback = require('TouchableWithoutFeedback');\nconst View = require('View');\nconst ViewPropTypes = require('ViewPropTypes');\n\nconst createReactClass = require('create-react-class');\nconst ensureComponentIsNative = require('ensureComponentIsNative');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\nconst keyOf = require('fbjs/lib/keyOf');\nconst merge = require('merge');\n\nimport type {Event} from 'TouchableWithoutFeedback';\n\nconst DEFAULT_PROPS = {\n  activeOpacity: 0.85,\n  underlayColor: 'black',\n};\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, which allows\n * the underlay color to show through, darkening or tinting the view.\n *\n * The underlay comes from wrapping the child in a new View, which can affect\n * layout, and sometimes cause unwanted visual artifacts if not used correctly,\n * for example if the backgroundColor of the wrapped view isn't explicitly set\n * to an opaque color.\n *\n * TouchableHighlight must have one child (not zero or more than one).\n * If you wish to have several child components, wrap them in a View.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableHighlight onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableHighlight>\n *   );\n * },\n * ```\n */\n\nvar TouchableHighlight = createReactClass({\n  displayName: 'TouchableHighlight',\n  propTypes: {\n    ...TouchableWithoutFeedback.propTypes,\n    /**\n     * Determines what the opacity of the wrapped view should be when touch is\n     * active.\n     */\n    activeOpacity: PropTypes.number,\n    /**\n     * The color of the underlay that will show through when the touch is\n     * active.\n     */\n    underlayColor: ColorPropType,\n    style: ViewPropTypes.style,\n    /**\n     * Called immediately after the underlay is shown\n     */\n    onShowUnderlay: PropTypes.func,\n    /**\n     * Called immediately after the underlay is hidden\n     */\n    onHideUnderlay: PropTypes.func,\n    /**\n     * *(Apple TV only)* TV preferred focus (see documentation for the View component).\n     *\n     * @platform ios\n     */\n    hasTVPreferredFocus: PropTypes.bool,\n    /**\n     * *(Apple TV only)* Object with properties to control Apple TV parallax effects.\n     *\n     * enabled: If true, parallax effects are enabled.  Defaults to true.\n     * shiftDistanceX: Defaults to 2.0.\n     * shiftDistanceY: Defaults to 2.0.\n     * tiltAngle: Defaults to 0.05.\n     * magnification: Defaults to 1.0.\n     *\n     * @platform ios\n     */\n    tvParallaxProperties: PropTypes.object,\n  },\n\n  mixins: [NativeMethodsMixin, TimerMixin, Touchable.Mixin],\n\n  getDefaultProps: () => DEFAULT_PROPS,\n\n  // Performance optimization to avoid constantly re-generating these objects.\n  _computeSyntheticState: function(props) {\n    return {\n      activeProps: {\n        style: {\n          opacity: props.activeOpacity,\n        }\n      },\n      activeUnderlayProps: {\n        style: {\n          backgroundColor: props.underlayColor,\n        }\n      },\n      underlayStyle: [\n        INACTIVE_UNDERLAY_PROPS.style,\n        props.style,\n      ],\n      hasTVPreferredFocus: props.hasTVPreferredFocus\n    };\n  },\n\n  getInitialState: function() {\n    this._isMounted = false;\n    return merge(\n      this.touchableGetInitialState(), this._computeSyntheticState(this.props)\n    );\n  },\n\n  componentDidMount: function() {\n    this._isMounted = true;\n    ensurePositiveDelayProps(this.props);\n    ensureComponentIsNative(this.refs[CHILD_REF]);\n  },\n\n  componentWillUnmount: function() {\n    this._isMounted = false;\n  },\n\n  componentDidUpdate: function() {\n    ensureComponentIsNative(this.refs[CHILD_REF]);\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    ensurePositiveDelayProps(nextProps);\n    if (nextProps.activeOpacity !== this.props.activeOpacity ||\n        nextProps.underlayColor !== this.props.underlayColor ||\n        nextProps.style !== this.props.style) {\n      this.setState(this._computeSyntheticState(nextProps));\n    }\n  },\n\n  viewConfig: {\n    uiViewClassName: 'RCTView',\n    validAttributes: ReactNativeViewAttributes.RCTView\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandleActivePressIn: function(e: Event) {\n    this.clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    this._showUnderlay();\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: Event) {\n    if (!this._hideTimeout) {\n      this._hideUnderlay();\n    }\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandlePress: function(e: Event) {\n    this.clearTimeout(this._hideTimeout);\n    this._showUnderlay();\n    this._hideTimeout = this.setTimeout(this._hideUnderlay,\n      this.props.delayPressOut || 100);\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleLongPress: function(e: Event) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function() {\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function() {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function() {\n    return this.props.delayPressIn;\n  },\n\n  touchableGetLongPressDelayMS: function() {\n    return this.props.delayLongPress;\n  },\n\n  touchableGetPressOutDelayMS: function() {\n    return this.props.delayPressOut;\n  },\n\n  _showUnderlay: function() {\n    if (!this._isMounted || !this._hasPressHandler()) {\n      return;\n    }\n\n    this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);\n    this.refs[CHILD_REF].setNativeProps(this.state.activeProps);\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  },\n\n  _hideUnderlay: function() {\n    this.clearTimeout(this._hideTimeout);\n    this._hideTimeout = null;\n    if (this._hasPressHandler() && this.refs[UNDERLAY_REF]) {\n      this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);\n      this.refs[UNDERLAY_REF].setNativeProps({\n        ...INACTIVE_UNDERLAY_PROPS,\n        style: this.state.underlayStyle,\n      });\n      this.props.onHideUnderlay && this.props.onHideUnderlay();\n    }\n  },\n\n  _hasPressHandler: function() {\n    return !!(\n      this.props.onPress ||\n      this.props.onPressIn ||\n      this.props.onPressOut ||\n      this.props.onLongPress\n    );\n  },\n\n  render: function() {\n    return (\n      <View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={this.props.accessibilityLabel}\n        accessibilityComponentType={this.props.accessibilityComponentType}\n        accessibilityTraits={this.props.accessibilityTraits}\n        ref={UNDERLAY_REF}\n        style={this.state.underlayStyle}\n        onLayout={this.props.onLayout}\n        hitSlop={this.props.hitSlop}\n        isTVSelectable={true}\n        tvParallaxProperties={this.props.tvParallaxProperties}\n        hasTVPreferredFocus={this.state.hasTVPreferredFocus}\n        onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n        onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n        onResponderGrant={this.touchableHandleResponderGrant}\n        onResponderMove={this.touchableHandleResponderMove}\n        onResponderRelease={this.touchableHandleResponderRelease}\n        onResponderTerminate={this.touchableHandleResponderTerminate}\n        nativeID={this.props.nativeID}\n        testID={this.props.testID}>\n        {React.cloneElement(\n          React.Children.only(this.props.children),\n          {\n            ref: CHILD_REF,\n          }\n        )}\n        {Touchable.renderDebugView({color: 'green', hitSlop: this.props.hitSlop})}\n      </View>\n    );\n  }\n});\n\nvar CHILD_REF = keyOf({childRef: null});\nvar UNDERLAY_REF = keyOf({underlayRef: null});\nvar INACTIVE_CHILD_PROPS = {\n  style: StyleSheet.create({x: {opacity: 1.0}}).x,\n};\nvar INACTIVE_UNDERLAY_PROPS = {\n  style: StyleSheet.create({x: {backgroundColor: 'transparent'}}).x,\n};\n\nmodule.exports = TouchableHighlight;\n"]}]