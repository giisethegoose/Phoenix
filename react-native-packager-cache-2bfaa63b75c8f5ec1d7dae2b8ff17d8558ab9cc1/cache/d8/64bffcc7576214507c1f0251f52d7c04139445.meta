["664e06e64c210a6087593b0cac9aebc443e0e890","e561c719d9c5529d109a200acc3fbb9a6a885b81",["react-native"],[93],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native-fetch-blob/ios.js"],"names":["RNFetchBlob","previewDocument","path","scheme","OS","Promise","reject","openDocument","excludeFromBackupKey","url"],"mappings":";;;;AAIA;;AAOA,IAAMA,cAAgC,2BAAcA,WAApD;;AAQA,SAASC,eAAT,CAAyBC,IAAzB,EAAsCC,MAAtC,EAAqD;AACnD,MAAG,sBAASC,EAAT,KAAgB,KAAnB,EACE,OAAOJ,YAAYC,eAAZ,CAA4B,YAAYC,IAAxC,EAA8CC,MAA9C,CAAP,CADF,KAGE,OAAOE,QAAQC,MAAR,CAAe,6CAAf,CAAP;AACH;;AAQD,SAASC,YAAT,CAAsBL,IAAtB,EAAmCC,MAAnC,EAAkD;AAChD,MAAG,sBAASC,EAAT,KAAgB,KAAnB,EACE,OAAOJ,YAAYO,YAAZ,CAAyB,YAAYL,IAArC,EAA2CC,MAA3C,CAAP,CADF,KAGE,OAAOE,QAAQC,MAAR,CAAe,gDAAf,CAAP;AACH;;AAQD,SAASE,oBAAT,CAA8BC,GAA9B,EAA0C;AACxC,SAAOT,YAAYQ,oBAAZ,CAAiC,YAAYN,IAA7C,CAAP;AACD;;kBAEc;AACbK,4BADa;AAEbN,kCAFa;AAGbO;AAHa,C","sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport {\n  NativeModules,\n  DeviceEventEmitter,\n  Platform,\n  NativeAppEventEmitter,\n} from 'react-native'\n\nconst RNFetchBlob:RNFetchBlobNative = NativeModules.RNFetchBlob\n\n/**\n * Open a file using UIDocumentInteractionController\n * @param  {string]} path Path of the file to be open.\n * @param  {string} scheme URI scheme that needs to support, optional\n * @return {Promise}\n */\nfunction previewDocument(path:string, scheme:string) {\n  if(Platform.OS === 'ios')\n    return RNFetchBlob.previewDocument('file://' + path, scheme)\n  else\n    return Promise.reject('RNFetchBlob.openDocument only supports IOS.')\n}\n\n/**\n * Preview a file using UIDocumentInteractionController\n * @param  {string]} path Path of the file to be open.\n * @param  {string} scheme URI scheme that needs to support, optional\n * @return {Promise}\n */\nfunction openDocument(path:string, scheme:string) {\n  if(Platform.OS === 'ios')\n    return RNFetchBlob.openDocument('file://' + path, scheme)\n  else\n    return Promise.reject('RNFetchBlob.previewDocument only supports IOS.')\n}\n\n/**\n * Set excludeFromBackupKey to a URL to prevent the resource to be backuped to\n * iCloud.\n * @param  {string} url URL of the resource, only file URL is supported\n * @return {Promise}\n */\nfunction excludeFromBackupKey(url:string) {\n  return RNFetchBlob.excludeFromBackupKey('file://' + path);\n}\n\nexport default {\n  openDocument,\n  previewDocument,\n  excludeFromBackupKey\n}\n"]}]