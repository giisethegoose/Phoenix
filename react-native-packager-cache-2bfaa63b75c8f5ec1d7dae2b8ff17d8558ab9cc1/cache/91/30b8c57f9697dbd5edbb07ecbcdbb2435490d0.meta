["53d0965336d8bf5d653c4a585553b99eb0cd04d2","4e99c67fa37ee1741c6043171fce8b20de368928",["react","./../../../react-transform-hmr/lib/index.js","Dimensions","ElementBox","prop-types","React","StyleSheet","UIManager","View"],[38,118,2272,2312,2351,2386,2421,2460,2493],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"names":["Dimensions","require","ElementBox","PropTypes","React","StyleSheet","UIManager","View","findViewForTouchEvent","e","nativeEvent","touches","locationX","locationY","findSubviewIn","props","inspectedViewTag","nativeViewTag","left","top","width","height","onTouchViewTag","shouldSetResponser","content","inspected","frame","style","styles","inspector","get","Component","propTypes","shape","object","any","number","func","isRequired","create","backgroundColor","position","right","module","exports","InspectorOverlay"],"mappings":";AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,aAAaC,OAAb,cAAJ;AACA,IAAIC,aAAaD,OAAb,cAAJ;AACA,IAAIE,YAAYF,OAAZ,cAAJ;AACA,IAAIG,QAAQH,OAAR,SAAJ;AACA,IAAII,aAAaJ,OAAb,cAAJ;AACA,IAAIK,YAAYL,OAAZ,aAAJ;AACA,IAAIM,OAAON,OAAP,QAAJ;;;;;;;;;;;;;;;;0MAyBEO,qB,GAAwB,UAACC,CAAD,EAAkB;AAAA,kCACXA,EAAEC,WAAF,CAAcC,OAAd,CAAsB,CAAtB,CADW;AAAA,UACnCC,SADmC,yBACnCA,SADmC;AAAA,UACxBC,SADwB,yBACxBA,SADwB;;AAExCP,gBAAUQ,aAAV,CACE,MAAKC,KAAL,CAAWC,gBADb,EAEE,CAACJ,SAAD,EAAYC,SAAZ,CAFF,EAGE,UAACI,aAAD,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkCC,MAAlC,EAA6C;AAC3C,cAAKN,KAAL,CAAWO,cAAX,CAA0BL,aAA1B,EAAyC,EAACC,UAAD,EAAOC,QAAP,EAAYC,YAAZ,EAAmBC,cAAnB,EAAzC,EAAqER,SAArE;AACD,OALH;AAOD,K,QAEDU,kB,GAAqB,UAACd,CAAD,EAAwB;AAC3C,YAAKD,qBAAL,CAA2BC,CAA3B;AACA,aAAO,IAAP;AACD,K;;;;;6BAEQ;AACP,UAAIe,UAAU,IAAd;AACA,UAAI,KAAKT,KAAL,CAAWU,SAAf,EAA0B;AACxBD,kBAAU,oBAAC,UAAD,IAAY,OAAO,KAAKT,KAAL,CAAWU,SAAX,CAAqBC,KAAxC,EAA+C,OAAO,KAAKX,KAAL,CAAWU,SAAX,CAAqBE,KAA3E,GAAV;AACD;;AAED,aACE;AAAC,YAAD;AAAA;AACE,qCAA2B,KAAKJ,kBADlC;AAEE,2BAAiB,KAAKf,qBAFxB;AAGE,iBAAO,CAACoB,OAAOC,SAAR,EAAmB,EAACR,QAAQrB,WAAW8B,GAAX,CAAe,QAAf,EAAyBT,MAAlC,EAAnB,CAHT;AAIGG;AAJH,OADF;AAQD;;;;EAjD4BpB,MAAM2B,S,UAU5BC,S,GAAY;AACjBP,aAAWtB,UAAU8B,KAAV,CAAgB;AACzBP,WAAOvB,UAAU+B,MADQ;AAEzBP,WAAOxB,UAAUgC;AAFQ,GAAhB,CADM;AAKjBnB,oBAAkBb,UAAUiC,MALX;AAMjBd,kBAAgBnB,UAAUkC,IAAV,CAAeC;AANd,C;;AA0CrB,IAAIV,SAASvB,WAAWkC,MAAX,CAAkB;AAC7BV,aAAW;AACTW,qBAAiB,aADR;AAETC,cAAU,UAFD;AAGTvB,UAAM,CAHG;AAITC,SAAK,CAJI;AAKTuB,WAAO;AALE;AADkB,CAAlB,CAAb;;AAUAC,OAAOC,OAAP,GAAiBC,gBAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule InspectorOverlay\n * @flow\n */\n'use strict';\n\nvar Dimensions = require('Dimensions');\nvar ElementBox = require('ElementBox');\nvar PropTypes = require('prop-types');\nvar React = require('React');\nvar StyleSheet = require('StyleSheet');\nvar UIManager = require('UIManager');\nvar View = require('View');\n\ntype EventLike = {\n  nativeEvent: Object,\n};\n\nclass InspectorOverlay extends React.Component {\n  props: {\n    inspected?: {\n      frame?: Object,\n      style?: any,\n    },\n    inspectedViewTag?: number,\n    onTouchViewTag: (tag: number, frame: Object, pointerY: number) => void,\n  };\n\n  static propTypes = {\n    inspected: PropTypes.shape({\n      frame: PropTypes.object,\n      style: PropTypes.any,\n    }),\n    inspectedViewTag: PropTypes.number,\n    onTouchViewTag: PropTypes.func.isRequired,\n  };\n\n  findViewForTouchEvent = (e: EventLike) => {\n    var {locationX, locationY} = e.nativeEvent.touches[0];\n    UIManager.findSubviewIn(\n      this.props.inspectedViewTag,\n      [locationX, locationY],\n      (nativeViewTag, left, top, width, height) => {\n        this.props.onTouchViewTag(nativeViewTag, {left, top, width, height}, locationY);\n      }\n    );\n  };\n\n  shouldSetResponser = (e: EventLike): bool => {\n    this.findViewForTouchEvent(e);\n    return true;\n  };\n\n  render() {\n    var content = null;\n    if (this.props.inspected) {\n      content = <ElementBox frame={this.props.inspected.frame} style={this.props.inspected.style} />;\n    }\n\n    return (\n      <View\n        onStartShouldSetResponder={this.shouldSetResponser}\n        onResponderMove={this.findViewForTouchEvent}\n        style={[styles.inspector, {height: Dimensions.get('window').height}]}>\n        {content}\n      </View>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"]}]