["b8d72b18f05c1b46d4697c938d0dc273048d8fa2","74f70137b8266948afd3caa965d1bcfa856eaf7c",["@firebase/util"],[99,139],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/stats/StatsCollection.js"],"names":["Object","defineProperty","exports","value","util_1","require","util_2","StatsCollection","counters_","prototype","incrementCounter","name","amount","contains","get","deepCopy"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,SAASC,OAAT,kBAAJ;AACA,IAAIC,SAASD,OAAT,kBAAJ;;AAMA,IAAIE,kBAAiC,YAAY;AAC7C,aAASA,eAAT,GAA2B;AACvB,aAAKC,SAAL,GAAiB,EAAjB;AACH;AACDD,oBAAgBE,SAAhB,CAA0BC,gBAA1B,GAA6C,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AACjE,YAAIA,WAAW,KAAK,CAApB,EAAuB;AAAEA,qBAAS,CAAT;AAAa;AACtC,YAAI,CAACN,OAAOO,QAAP,CAAgB,KAAKL,SAArB,EAAgCG,IAAhC,CAAL,EACI,KAAKH,SAAL,CAAeG,IAAf,IAAuB,CAAvB;AACJ,aAAKH,SAAL,CAAeG,IAAf,KAAwBC,MAAxB;AACH,KALD;AAMAL,oBAAgBE,SAAhB,CAA0BK,GAA1B,GAAgC,YAAY;AACxC,eAAOV,OAAOW,QAAP,CAAgB,KAAKP,SAArB,CAAP;AACH,KAFD;AAGA,WAAOD,eAAP;AACH,CAdoC,EAArC;AAeAL,QAAQK,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\n/**\n * Tracks a collection of stats.\n *\n * @constructor\n */\nvar StatsCollection = /** @class */ (function () {\n    function StatsCollection() {\n        this.counters_ = {};\n    }\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\n        if (amount === void 0) { amount = 1; }\n        if (!util_2.contains(this.counters_, name))\n            this.counters_[name] = 0;\n        this.counters_[name] += amount;\n    };\n    StatsCollection.prototype.get = function () {\n        return util_1.deepCopy(this.counters_);\n    };\n    return StatsCollection;\n}());\nexports.StatsCollection = StatsCollection;\n\n//# sourceMappingURL=StatsCollection.js.map\n"]}]