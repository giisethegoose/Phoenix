["8abc2f4a7ced3a6b953b4328105cc8e8bece332d","3cbdff0121643487a11caa384aa9fe5cba45c627",[],[],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/ServerActions.js"],"names":["Object","defineProperty","exports","value","ServerActions","prototype","put","pathString","data","onComplete","hash","merge","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;;AAOA,IAAIC,gBAA+B,YAAY;AAC3C,WAASA,aAAT,GAAyB,CACxB;;AAODA,gBAAcC,SAAd,CAAwBC,GAAxB,GAA8B,UAAUC,UAAV,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8C,CAAG,CAA/E;;AAOAN,gBAAcC,SAAd,CAAwBM,KAAxB,GAAgC,UAAUJ,UAAV,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8C,CAAG,CAAjF;;AAKAN,gBAAcC,SAAd,CAAwBO,gBAAxB,GAA2C,UAAUC,KAAV,EAAiB,CAAG,CAA/D;;AAMAT,gBAAcC,SAAd,CAAwBS,eAAxB,GAA0C,UAAUP,UAAV,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwC,CAAG,CAArF;;AAMAL,gBAAcC,SAAd,CAAwBU,iBAAxB,GAA4C,UAAUR,UAAV,EAAsBC,IAAtB,EAA4BC,UAA5B,EAAwC,CAAG,CAAvF;;AAKAL,gBAAcC,SAAd,CAAwBW,kBAAxB,GAA6C,UAAUT,UAAV,EAAsBE,UAAtB,EAAkC,CAAG,CAAlF;;AAIAL,gBAAcC,SAAd,CAAwBY,WAAxB,GAAsC,UAAUC,KAAV,EAAiB,CAAG,CAA1D;AACA,SAAOd,aAAP;AACH,CA5CkC,EAAnC;AA6CAF,QAAQE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nvar ServerActions = /** @class */ (function () {\n    function ServerActions() {\n    }\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, ?string)} onComplete\n     * @param {string=} hash\n     */\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\n    /**\n     * Refreshes the auth token for the current connection.\n     * @param {string} token The authentication token\n     */\n    ServerActions.prototype.refreshAuthToken = function (token) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {*} data\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\n    /**\n     * @param {string} pathString\n     * @param {function(string, string)=} onComplete\n     */\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\n    /**\n     * @param {Object.<string, *>} stats\n     */\n    ServerActions.prototype.reportStats = function (stats) { };\n    return ServerActions;\n}());\nexports.ServerActions = ServerActions;\n\n//# sourceMappingURL=ServerActions.js.map\n"]}]