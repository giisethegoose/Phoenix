["ba071b3851cbe05495572a9116e3b3b6aed82ea3","1cdc2532e8755b1c1efa946e03cb5518190e3dc9",["@firebase/app","@firebase/util","./util/util","./util/Path","./util/VisibilityMonitor","./util/OnlineMonitor","../realtime/Connection","./ServerActions"],[637,676,716,756,796,833,883,942,988,1034,1082,1122,1171],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/PersistentConnection.js"],"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","app_1","require","util_1","util_2","util_3","util_4","Path_1","VisibilityMonitor_1","OnlineMonitor_1","util_5","Connection_1","util_6","util_7","ServerActions_1","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","_super","repoInfo_","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","_this","call","id","nextPersistentConnectionId_","log_","logWrapper","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","lastSessionId","establishConnectionTimer_","visible_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","isNodeSdk","Error","scheduleConnect_","VisibilityMonitor","getInstance","on","onVisible_","host","indexOf","OnlineMonitor","onOnline_","sendRequest","action","body","onResponse","curReqNum","msg","r","a","stringify","assert","listen","query","currentHashFn","tag","onComplete","queryId","queryIdentifier","pathString","path","toString","getQueryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","queryObject","message","payload","status","warnOnListenWarnings_","currentListenSpec","removeListen_","contains","warnings","safeGet","isArray","indexSpec","getIndex","indexPath","warn","refreshAuthToken","token","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","length","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","data","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","onDisconnectPut","sendOnDisconnect_","push","onDisconnectMerge","onDisconnectCancel","request","response","setTimeout","Math","floor","put","hash","putInternal","merge","undefined","index","sendPut_","queued","reportStats","stats","c","result","errorReason","onDataMessage_","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","error","onReady_","timestamp","sessionId","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","timeout","clearTimeout","establishConnection_","visible","online","close","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","max","random","min","onDataMessage_1","bind","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","self_1","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","then","log","accessToken","Connection","reason","interrupt","CONSTANTS","NODE_ADMIN","resume","isEmpty","delta","serverTimeOffset","i","map","q","ObjectToUniqueKey","join","normalizedPathString","Path","getCount","statusCode","explanation","notifyForInvalidToken","console","replace","forEach","queries","key","shift","clientName","NODE_CLIENT","default","SDK_VERSION","isMobileCordova","isReactNative","currentlyOnline","ServerActions"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"./util/util\");\nvar Path_1 = require(\"./util/Path\");\nvar VisibilityMonitor_1 = require(\"./util/VisibilityMonitor\");\nvar OnlineMonitor_1 = require(\"./util/OnlineMonitor\");\nvar util_5 = require(\"@firebase/util\");\nvar Connection_1 = require(\"../realtime/Connection\");\nvar util_6 = require(\"@firebase/util\");\nvar util_7 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\nvar RECONNECT_MIN_DELAY = 1000;\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nvar PersistentConnection = /** @class */ (function (_super) {\n    __extends(PersistentConnection, _super);\n    /**\n     * @implements {ServerActions}\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param onConnectStatus_\n     * @param onServerInfoUpdate_\n     * @param authTokenProvider_\n     * @param authOverride_\n     */\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.onConnectStatus_ = onConnectStatus_;\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        _this.authOverride_ = authOverride_;\n        // Used for diagnostic logging.\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\n        _this.log_ = util_4.logWrapper('p:' + _this.id + ':');\n        /** @private {Object} */\n        _this.interruptReasons_ = {};\n        _this.listens_ = {};\n        _this.outstandingPuts_ = [];\n        _this.outstandingPutCount_ = 0;\n        _this.onDisconnectRequestQueue_ = [];\n        _this.connected_ = false;\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n        _this.securityDebugCallback_ = null;\n        _this.lastSessionId = null;\n        /** @private {number|null} */\n        _this.establishConnectionTimer_ = null;\n        /** @private {boolean} */\n        _this.visible_ = false;\n        // Before we get connected, we keep a queue of pending messages to send.\n        _this.requestCBHash_ = {};\n        _this.requestNumber_ = 0;\n        /** @private {?{\n         *   sendRequest(Object),\n         *   close()\n         * }} */\n        _this.realtime_ = null;\n        /** @private {string|null} */\n        _this.authToken_ = null;\n        _this.forceTokenRefresh_ = false;\n        _this.invalidAuthTokenCount_ = 0;\n        _this.firstConnection_ = true;\n        _this.lastConnectionAttemptTime_ = null;\n        _this.lastConnectionEstablishedTime_ = null;\n        if (authOverride_ && !util_7.isNodeSdk()) {\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\n        }\n        _this.scheduleConnect_(0);\n        VisibilityMonitor_1.VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\n            OnlineMonitor_1.OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\n        }\n        return _this;\n    }\n    /**\n     * @param {!string} action\n     * @param {*} body\n     * @param {function(*)=} onResponse\n     * @protected\n     */\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\n        var curReqNum = ++this.requestNumber_;\n        var msg = { r: curReqNum, a: action, b: body };\n        this.log_(util_2.stringify(msg));\n        util_3.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\n        this.realtime_.sendRequest(msg);\n        if (onResponse) {\n            this.requestCBHash_[curReqNum] = onResponse;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var queryId = query.queryIdentifier();\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\n        this.listens_[pathString] = this.listens_[pathString] || {};\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\n        util_3.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\n        var listenSpec = {\n            onComplete: onComplete,\n            hashFn: currentHashFn,\n            query: query,\n            tag: tag\n        };\n        this.listens_[pathString][queryId] = listenSpec;\n        if (this.connected_) {\n            this.sendListen_(listenSpec);\n        }\n    };\n    /**\n     * @param {!{onComplete(),\n     *           hashFn():!string,\n     *           query: !Query,\n     *           tag: ?number}} listenSpec\n     * @private\n     */\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\n        var _this = this;\n        var query = listenSpec.query;\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'q';\n        // Only bother to send query if it's non-default.\n        if (listenSpec.tag) {\n            req['q'] = query.queryObject();\n            req['t'] = listenSpec.tag;\n        }\n        req['h'] = listenSpec.hashFn();\n        this.sendRequest(action, req, function (message) {\n            var payload = message['d'];\n            var status = message['s'];\n            // print warnings in any case...\n            PersistentConnection.warnOnListenWarnings_(payload, query);\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\n            // only trigger actions if the listen hasn't been removed and readded\n            if (currentListenSpec === listenSpec) {\n                _this.log_('listen response', message);\n                if (status !== 'ok') {\n                    _this.removeListen_(pathString, queryId);\n                }\n                if (listenSpec.onComplete) {\n                    listenSpec.onComplete(status, payload);\n                }\n            }\n        });\n    };\n    /**\n     * @param {*} payload\n     * @param {!Query} query\n     * @private\n     */\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\n        if (payload && typeof payload === 'object' && util_1.contains(payload, 'w')) {\n            var warnings = util_1.safeGet(payload, 'w');\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n                var indexSpec = '\".indexOn\": \"' +\n                    query\n                        .getQueryParams()\n                        .getIndex()\n                        .toString() +\n                    '\"';\n                var indexPath = query.path.toString();\n                util_4.warn(\"Using an unspecified index. Your data will be downloaded and \" +\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\n                    (indexPath + \" to your security rules for better performance.\"));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\n        this.authToken_ = token;\n        this.log_('Auth token refreshed');\n        if (this.authToken_) {\n            this.tryAuth();\n        }\n        else {\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n            //the credential so we dont become authenticated next time we connect.\n            if (this.connected_) {\n                this.sendRequest('unauth', {}, function () { });\n            }\n        }\n        this.reduceReconnectDelayIfAdminCredential_(token);\n    };\n    /**\n     * @param {!string} credential\n     * @private\n     */\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n        var isFirebaseSecret = credential && credential.length === 40;\n        if (isFirebaseSecret || util_5.isAdmin(credential)) {\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n        }\n    };\n    /**\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n     * a auth revoked (the connection is closed).\n     */\n    PersistentConnection.prototype.tryAuth = function () {\n        var _this = this;\n        if (this.connected_ && this.authToken_) {\n            var token_1 = this.authToken_;\n            var authMethod = util_5.isValidFormat(token_1) ? 'auth' : 'gauth';\n            var requestData = { cred: token_1 };\n            if (this.authOverride_ === null) {\n                requestData['noauth'] = true;\n            }\n            else if (typeof this.authOverride_ === 'object') {\n                requestData['authvar'] = this.authOverride_;\n            }\n            this.sendRequest(authMethod, requestData, function (res) {\n                var status = res['s'];\n                var data = res['d'] || 'error';\n                if (_this.authToken_ === token_1) {\n                    if (status === 'ok') {\n                        _this.invalidAuthTokenCount_ = 0;\n                    }\n                    else {\n                        // Triggers reconnect and force refresh for auth token\n                        _this.onAuthRevoked_(status, data);\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.unlisten = function (query, tag) {\n        var pathString = query.path.toString();\n        var queryId = query.queryIdentifier();\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n        util_3.assert(query.getQueryParams().isDefault() ||\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && this.connected_) {\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\n        }\n    };\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n        var req = { /*path*/ p: pathString };\n        var action = 'n';\n        // Only bother sending queryId if it's non-default.\n        if (tag) {\n            req['q'] = queryObj;\n            req['t'] = tag;\n        }\n        this.sendRequest(action, req);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'o',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'om',\n                data: data,\n                onComplete: onComplete\n            });\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\n        if (this.connected_) {\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\n        }\n        else {\n            this.onDisconnectRequestQueue_.push({\n                pathString: pathString,\n                action: 'oc',\n                data: null,\n                onComplete: onComplete\n            });\n        }\n    };\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\n        this.log_('onDisconnect ' + action, request);\n        this.sendRequest(action, request, function (response) {\n            if (onComplete) {\n                setTimeout(function () {\n                    onComplete(response['s'], response['d']);\n                }, Math.floor(0));\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\n        this.putInternal('p', pathString, data, onComplete, hash);\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\n        this.putInternal('m', pathString, data, onComplete, hash);\n    };\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\n        var request = {\n            /*path*/ p: pathString,\n            /*data*/ d: data\n        };\n        if (hash !== undefined)\n            request['h'] = hash;\n        // TODO: Only keep track of the most recent put for a given path?\n        this.outstandingPuts_.push({\n            action: action,\n            request: request,\n            onComplete: onComplete\n        });\n        this.outstandingPutCount_++;\n        var index = this.outstandingPuts_.length - 1;\n        if (this.connected_) {\n            this.sendPut_(index);\n        }\n        else {\n            this.log_('Buffering put: ' + pathString);\n        }\n    };\n    PersistentConnection.prototype.sendPut_ = function (index) {\n        var _this = this;\n        var action = this.outstandingPuts_[index].action;\n        var request = this.outstandingPuts_[index].request;\n        var onComplete = this.outstandingPuts_[index].onComplete;\n        this.outstandingPuts_[index].queued = this.connected_;\n        this.sendRequest(action, request, function (message) {\n            _this.log_(action + ' response', message);\n            delete _this.outstandingPuts_[index];\n            _this.outstandingPutCount_--;\n            // Clean up array occasionally.\n            if (_this.outstandingPutCount_ === 0) {\n                _this.outstandingPuts_ = [];\n            }\n            if (onComplete)\n                onComplete(message['s'], message['d']);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    PersistentConnection.prototype.reportStats = function (stats) {\n        var _this = this;\n        // If we're not connected, we just drop the stats.\n        if (this.connected_) {\n            var request = { /*counters*/ c: stats };\n            this.log_('reportStats', request);\n            this.sendRequest(/*stats*/ 's', request, function (result) {\n                var status = result['s'];\n                if (status !== 'ok') {\n                    var errorReason = result['d'];\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\n                }\n            });\n        }\n    };\n    /**\n     * @param {*} message\n     * @private\n     */\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\n        if ('r' in message) {\n            // this is a response\n            this.log_('from server: ' + util_2.stringify(message));\n            var reqNum = message['r'];\n            var onResponse = this.requestCBHash_[reqNum];\n            if (onResponse) {\n                delete this.requestCBHash_[reqNum];\n                onResponse(message['b']);\n            }\n        }\n        else if ('error' in message) {\n            throw 'A server-side error has occurred: ' + message['error'];\n        }\n        else if ('a' in message) {\n            // a and b are action and body, respectively\n            this.onDataPush_(message['a'], message['b']);\n        }\n    };\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\n        this.log_('handleServerMessage', action, body);\n        if (action === 'd')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge*/ false, body['t']);\n        else if (action === 'm')\n            this.onDataUpdate_(body['p'], body['d'], \n            /*isMerge=*/ true, body['t']);\n        else if (action === 'c')\n            this.onListenRevoked_(body['p'], body['q']);\n        else if (action === 'ac')\n            this.onAuthRevoked_(body['s'], body['d']);\n        else if (action === 'sd')\n            this.onSecurityDebugPacket_(body);\n        else\n            util_4.error('Unrecognized action received from server: ' +\n                util_2.stringify(action) +\n                '\\nAre you using the latest client?');\n    };\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\n        this.log_('connection ready');\n        this.connected_ = true;\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\n        this.handleTimestamp_(timestamp);\n        this.lastSessionId = sessionId;\n        if (this.firstConnection_) {\n            this.sendConnectStats_();\n        }\n        this.restoreState_();\n        this.firstConnection_ = false;\n        this.onConnectStatus_(true);\n    };\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\n        var _this = this;\n        util_3.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\n        if (this.establishConnectionTimer_) {\n            clearTimeout(this.establishConnectionTimer_);\n        }\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n        this.establishConnectionTimer_ = setTimeout(function () {\n            _this.establishConnectionTimer_ = null;\n            _this.establishConnection_();\n        }, Math.floor(timeout));\n    };\n    /**\n     * @param {boolean} visible\n     * @private\n     */\n    PersistentConnection.prototype.onVisible_ = function (visible) {\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n        if (visible &&\n            !this.visible_ &&\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\n            this.log_('Window became visible.  Reducing delay.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        this.visible_ = visible;\n    };\n    PersistentConnection.prototype.onOnline_ = function (online) {\n        if (online) {\n            this.log_('Browser went online.');\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n        else {\n            this.log_('Browser went offline.  Killing connection.');\n            if (this.realtime_) {\n                this.realtime_.close();\n            }\n        }\n    };\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\n        this.log_('data client disconnected');\n        this.connected_ = false;\n        this.realtime_ = null;\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n        this.cancelSentTransactions_();\n        // Clear out the pending requests.\n        this.requestCBHash_ = {};\n        if (this.shouldReconnect_()) {\n            if (!this.visible_) {\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\n                this.reconnectDelay_ = this.maxReconnectDelay_;\n                this.lastConnectionAttemptTime_ = new Date().getTime();\n            }\n            else if (this.lastConnectionEstablishedTime_) {\n                // If we've been connected long enough, reset reconnect delay to minimum.\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n                this.lastConnectionEstablishedTime_ = null;\n            }\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\n            reconnectDelay = Math.random() * reconnectDelay;\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n            this.scheduleConnect_(reconnectDelay);\n            // Adjust reconnect delay for next time.\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\n        }\n        this.onConnectStatus_(false);\n    };\n    PersistentConnection.prototype.establishConnection_ = function () {\n        if (this.shouldReconnect_()) {\n            this.log_('Making a connection attempt');\n            this.lastConnectionAttemptTime_ = new Date().getTime();\n            this.lastConnectionEstablishedTime_ = null;\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\n            var onReady_1 = this.onReady_.bind(this);\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\n            var self_1 = this;\n            var lastSessionId_1 = this.lastSessionId;\n            var canceled_1 = false;\n            var connection_1 = null;\n            var closeFn_1 = function () {\n                if (connection_1) {\n                    connection_1.close();\n                }\n                else {\n                    canceled_1 = true;\n                    onDisconnect_1();\n                }\n            };\n            var sendRequestFn = function (msg) {\n                util_3.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\n                connection_1.sendRequest(msg);\n            };\n            this.realtime_ = {\n                close: closeFn_1,\n                sendRequest: sendRequestFn\n            };\n            var forceRefresh = this.forceTokenRefresh_;\n            this.forceTokenRefresh_ = false;\n            // First fetch auth token, and establish connection after fetching the token was successful\n            this.authTokenProvider_\n                .getToken(forceRefresh)\n                .then(function (result) {\n                if (!canceled_1) {\n                    util_4.log('getToken() completed. Creating connection.');\n                    self_1.authToken_ = result && result.accessToken;\n                    connection_1 = new Connection_1.Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \n                    /* onKill= */ function (reason) {\n                        util_4.warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\n                    }, lastSessionId_1);\n                }\n                else {\n                    util_4.log('getToken() completed but was canceled');\n                }\n            })\n                .then(null, function (error) {\n                self_1.log_('Failed to get token: ' + error);\n                if (!canceled_1) {\n                    if (util_6.CONSTANTS.NODE_ADMIN) {\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\n                        // But getToken() may also just have temporarily failed, so we still want to\n                        // continue retrying.\n                        util_4.warn(error);\n                    }\n                    closeFn_1();\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.interrupt = function (reason) {\n        util_4.log('Interrupting connection for reason: ' + reason);\n        this.interruptReasons_[reason] = true;\n        if (this.realtime_) {\n            this.realtime_.close();\n        }\n        else {\n            if (this.establishConnectionTimer_) {\n                clearTimeout(this.establishConnectionTimer_);\n                this.establishConnectionTimer_ = null;\n            }\n            if (this.connected_) {\n                this.onRealtimeDisconnect_();\n            }\n        }\n    };\n    /**\n     * @param {string} reason\n     */\n    PersistentConnection.prototype.resume = function (reason) {\n        util_4.log('Resuming connection for reason: ' + reason);\n        delete this.interruptReasons_[reason];\n        if (util_1.isEmpty(this.interruptReasons_)) {\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n            if (!this.realtime_) {\n                this.scheduleConnect_(0);\n            }\n        }\n    };\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\n        var delta = timestamp - new Date().getTime();\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\n    };\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            var put = this.outstandingPuts_[i];\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\n                if (put.onComplete)\n                    put.onComplete('disconnect');\n                delete this.outstandingPuts_[i];\n                this.outstandingPutCount_--;\n            }\n        }\n        // Clean up array occasionally.\n        if (this.outstandingPutCount_ === 0)\n            this.outstandingPuts_ = [];\n    };\n    /**\n     * @param {!string} pathString\n     * @param {Array.<*>=} query\n     * @private\n     */\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n        var queryId;\n        if (!query) {\n            queryId = 'default';\n        }\n        else {\n            queryId = query.map(function (q) { return util_4.ObjectToUniqueKey(q); }).join('$');\n        }\n        var listen = this.removeListen_(pathString, queryId);\n        if (listen && listen.onComplete)\n            listen.onComplete('permission_denied');\n    };\n    /**\n     * @param {!string} pathString\n     * @param {!string} queryId\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\n     * @private\n     */\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\n        var normalizedPathString = new Path_1.Path(pathString).toString(); // normalize path.\n        var listen;\n        if (this.listens_[normalizedPathString] !== undefined) {\n            listen = this.listens_[normalizedPathString][queryId];\n            delete this.listens_[normalizedPathString][queryId];\n            if (util_1.getCount(this.listens_[normalizedPathString]) === 0) {\n                delete this.listens_[normalizedPathString];\n            }\n        }\n        else {\n            // all listens for this path has already been removed\n            listen = undefined;\n        }\n        return listen;\n    };\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\n        util_4.log('Auth token revoked: ' + statusCode + '/' + explanation);\n        this.authToken_ = null;\n        this.forceTokenRefresh_ = true;\n        this.realtime_.close();\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n            // We'll wait a couple times before logging the warning / increasing the\n            // retry period since oauth tokens will report as \"invalid\" if they're\n            // just expired. Plus there may be transient issues that resolve themselves.\n            this.invalidAuthTokenCount_++;\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\n                // Set a long reconnect delay because recovery is unlikely\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n                // Notify the auth token provider that the token is invalid, which will log\n                // a warning\n                this.authTokenProvider_.notifyForInvalidToken();\n            }\n        }\n    };\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\n        if (this.securityDebugCallback_) {\n            this.securityDebugCallback_(body);\n        }\n        else {\n            if ('msg' in body && typeof console !== 'undefined') {\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\n            }\n        }\n    };\n    PersistentConnection.prototype.restoreState_ = function () {\n        var _this = this;\n        //Re-authenticate ourselves if we have a credential stored.\n        this.tryAuth();\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\n        // make sure to send listens before puts.\n        util_1.forEach(this.listens_, function (pathString, queries) {\n            util_1.forEach(queries, function (key, listenSpec) {\n                _this.sendListen_(listenSpec);\n            });\n        });\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\n            if (this.outstandingPuts_[i])\n                this.sendPut_(i);\n        }\n        while (this.onDisconnectRequestQueue_.length) {\n            var request = this.onDisconnectRequestQueue_.shift();\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\n        }\n    };\n    /**\n     * Sends client stats for first connection\n     * @private\n     */\n    PersistentConnection.prototype.sendConnectStats_ = function () {\n        var stats = {};\n        var clientName = 'js';\n        if (util_6.CONSTANTS.NODE_ADMIN) {\n            clientName = 'admin_node';\n        }\n        else if (util_6.CONSTANTS.NODE_CLIENT) {\n            clientName = 'node';\n        }\n        stats['sdk.' + clientName + '.' + app_1.default.SDK_VERSION.replace(/\\./g, '-')] = 1;\n        if (util_7.isMobileCordova()) {\n            stats['framework.cordova'] = 1;\n        }\n        else if (util_7.isReactNative()) {\n            stats['framework.reactnative'] = 1;\n        }\n        this.reportStats(stats);\n    };\n    /**\n     * @return {boolean}\n     * @private\n     */\n    PersistentConnection.prototype.shouldReconnect_ = function () {\n        var online = OnlineMonitor_1.OnlineMonitor.getInstance().currentlyOnline();\n        return util_1.isEmpty(this.interruptReasons_) && online;\n    };\n    /**\n     * @private\n     */\n    PersistentConnection.nextPersistentConnectionId_ = 0;\n    /**\n     * Counter for number of connections created. Mainly used for tagging in the logs\n     * @type {number}\n     * @private\n     */\n    PersistentConnection.nextConnectionId_ = 0;\n    return PersistentConnection;\n}(ServerActions_1.ServerActions));\nexports.PersistentConnection = PersistentConnection;\n\n//# sourceMappingURL=PersistentConnection.js.map\n"]}]