["b94f27c37b68009acdaeed45f52d3bd858e25a9d","2ae1a14580d97866a70b8429338b09eb37d9c0c5",["@firebase/util","../core/util/validation","../core/util/Path","../core/snap/indexes/PriorityIndex"],[99,145,194,246],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/api/DataSnapshot.js"],"names":["Object","defineProperty","exports","value","util_1","require","validation_1","Path_1","PriorityIndex_1","DataSnapshot","node_","ref_","index_","prototype","val","validateArgCount","arguments","length","exportVal","toJSON","exists","isEmpty","child","childPathString","String","validatePathString","childPath","Path","childRef","getChild","PRIORITY_INDEX","hasChild","getPriority","forEach","action","_this","validateCallback","isLeafNode","childrenNode","forEachChild","key","node","hasChildren","get","getKey","enumerable","configurable","numChildren","getRef"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\nvar Path_1 = require(\"../core/util/Path\");\nvar PriorityIndex_1 = require(\"../core/snap/indexes/PriorityIndex\");\n/**\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\n * surfaces the public methods (val, forEach, etc.) we want to expose.\n */\nvar DataSnapshot = /** @class */ (function () {\n    /**\n     * @param {!Node} node_ A SnapshotNode to wrap.\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\n     * @param {!Index} index_ The iteration order for this snapshot\n     */\n    function DataSnapshot(node_, ref_, index_) {\n        this.node_ = node_;\n        this.ref_ = ref_;\n        this.index_ = index_;\n    }\n    /**\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\n     * empty.\n     *\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.val = function () {\n        util_1.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\n        return this.node_.val();\n    };\n    /**\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\n     * the entire node contents.\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\n     */\n    DataSnapshot.prototype.exportVal = function () {\n        util_1.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\n        return this.node_.val(true);\n    };\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\n    // for end-users\n    DataSnapshot.prototype.toJSON = function () {\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\n        util_1.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\n        return this.exportVal();\n    };\n    /**\n     * Returns whether the snapshot contains a non-null value.\n     *\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\n     */\n    DataSnapshot.prototype.exists = function () {\n        util_1.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\n        return !this.node_.isEmpty();\n    };\n    /**\n     * Returns a DataSnapshot of the specified child node's contents.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {!DataSnapshot} DataSnapshot for child node.\n     */\n    DataSnapshot.prototype.child = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\n        // Ensure the childPath is a string (can be a number)\n        childPathString = String(childPathString);\n        validation_1.validatePathString('DataSnapshot.child', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        var childRef = this.ref_.child(childPath);\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PriorityIndex_1.PRIORITY_INDEX);\n    };\n    /**\n     * Returns whether the snapshot contains a child at the specified path.\n     *\n     * @param {!string} childPathString Path to a child.\n     * @return {boolean} Whether the child exists.\n     */\n    DataSnapshot.prototype.hasChild = function (childPathString) {\n        util_1.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\n        validation_1.validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\n        var childPath = new Path_1.Path(childPathString);\n        return !this.node_.getChild(childPath).isEmpty();\n    };\n    /**\n     * Returns the priority of the object, or null if no priority was set.\n     *\n     * @return {string|number|null} The priority.\n     */\n    DataSnapshot.prototype.getPriority = function () {\n        util_1.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n        return this.node_.getPriority().val();\n    };\n    /**\n     * Iterates through child nodes and calls the specified action for each one.\n     *\n     * @param {function(!DataSnapshot)} action Callback function to be called\n     * for each child.\n     * @return {boolean} True if forEach was canceled by action returning true for\n     * one of the child nodes.\n     */\n    DataSnapshot.prototype.forEach = function (action) {\n        var _this = this;\n        util_1.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\n        util_1.validateCallback('DataSnapshot.forEach', 1, action, false);\n        if (this.node_.isLeafNode())\n            return false;\n        var childrenNode = this.node_;\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\n            return action(new DataSnapshot(node, _this.ref_.child(key), PriorityIndex_1.PRIORITY_INDEX));\n        });\n    };\n    /**\n     * Returns whether this DataSnapshot has children.\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\n     */\n    DataSnapshot.prototype.hasChildren = function () {\n        util_1.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\n        if (this.node_.isLeafNode())\n            return false;\n        else\n            return !this.node_.isEmpty();\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\n        get: function () {\n            return this.ref_.getKey();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the number of children for this DataSnapshot.\n     * @return {number} The number of children that this DataSnapshot contains.\n     */\n    DataSnapshot.prototype.numChildren = function () {\n        util_1.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\n        return this.node_.numChildren();\n    };\n    /**\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\n     */\n    DataSnapshot.prototype.getRef = function () {\n        util_1.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\n        return this.ref_;\n    };\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\n        get: function () {\n            return this.getRef();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DataSnapshot;\n}());\nexports.DataSnapshot = DataSnapshot;\n\n//# sourceMappingURL=DataSnapshot.js.map\n"]}]