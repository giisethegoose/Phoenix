["49d77d27a52950ff43d13d56d6b25f2255d72b9f","73101de54cdc2965e2ae4e40fe3681730a873f32",["./util/util"],[99],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/AuthTokenProvider.js"],"names":["Object","defineProperty","exports","value","util_1","require","AuthTokenProvider","app_","prototype","getToken","forceRefresh","then","error","code","log","Promise","reject","addTokenChangeListener","listener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","name","options","warn"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,SAASC,QAAQ,aAAR,CAAb;;AAIA,IAAIC,oBAAmC,YAAY;AAI/C,aAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AAC7B,aAAKA,IAAL,GAAYA,IAAZ;AACH;;AAKDD,sBAAkBE,SAAlB,CAA4BC,QAA5B,GAAuC,UAAUC,YAAV,EAAwB;AAC3D,eAAO,KAAKH,IAAL,CAAU,UAAV,EAAsB,UAAtB,EAAkCG,YAAlC,EAAgDC,IAAhD,CAAqD,IAArD,EAEP,UAAUC,KAAV,EAAiB;AAGb,gBAAIA,SAASA,MAAMC,IAAN,KAAe,4BAA5B,EAA0D;AACtDT,uBAAOU,GAAP,CAAW,gEAAX;AACA,uBAAO,IAAP;AACH,aAHD,MAIK;AACD,uBAAOC,QAAQC,MAAR,CAAeJ,KAAf,CAAP;AACH;AACJ,SAZM,CAAP;AAaH,KAdD;AAeAN,sBAAkBE,SAAlB,CAA4BS,sBAA5B,GAAqD,UAAUC,QAAV,EAAoB;AAGrE,aAAKX,IAAL,CAAU,UAAV,EAAsB,sBAAtB,EAA8CW,QAA9C;AACH,KAJD;AAKAZ,sBAAkBE,SAAlB,CAA4BW,yBAA5B,GAAwD,UAAUD,QAAV,EAAoB;AACxE,aAAKX,IAAL,CAAU,UAAV,EAAsB,yBAAtB,EAAiDW,QAAjD;AACH,KAFD;AAGAZ,sBAAkBE,SAAlB,CAA4BY,qBAA5B,GAAoD,YAAY;AAC5D,YAAIC,eAAe,4DACf,KAAKd,IAAL,CAAUe,IADK,GAEf,yDAFe,GAGf,yBAHJ;AAIA,YAAI,gBAAgB,KAAKf,IAAL,CAAUgB,OAA9B,EAAuC;AACnCF,4BACI,qEACI,8EADJ,GAEI,UAHR;AAIH,SALD,MAMK,IAAI,oBAAoB,KAAKd,IAAL,CAAUgB,OAAlC,EAA2C;AAC5CF,4BACI,yEACI,8EADJ,GAEI,UAHR;AAIH,SALI,MAMA;AACDA,4BACI,qEACI,4DADJ,GAEI,uCAHR;AAIH;AACDjB,eAAOoB,IAAP,CAAYH,YAAZ;AACH,KAxBD;AAyBA,WAAOf,iBAAP;AACH,CA5DsC,EAAvC;AA6DAJ,QAAQI,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util/util\");\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nvar AuthTokenProvider = /** @class */ (function () {\n    /**\n     * @param {!FirebaseApp} app_\n     */\n    function AuthTokenProvider(app_) {\n        this.app_ = app_;\n    }\n    /**\n     * @param {boolean} forceRefresh\n     * @return {!Promise<FirebaseAuthTokenData>}\n     */\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \n        // .catch\n        function (error) {\n            // TODO: Need to figure out all the cases this is raised and whether\n            // this makes sense.\n            if (error && error.code === 'auth/token-not-initialized') {\n                util_1.log('Got auth/token-not-initialized error.  Treating as null token.');\n                return null;\n            }\n            else {\n                return Promise.reject(error);\n            }\n        });\n    };\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\n        // TODO: We might want to wrap the listener and call it with no args to\n        // avoid a leaky abstraction, but that makes removing the listener harder.\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\n    };\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\n            this.app_.name +\n            '\" are invalid. This usually indicates your app was not ' +\n            'initialized correctly. ';\n        if ('credential' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"credential\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else if ('serviceAccount' in this.app_.options) {\n            errorMessage +=\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n                    'project.';\n        }\n        else {\n            errorMessage +=\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n                    'initializeApp() match the values provided for your app at ' +\n                    'https://console.firebase.google.com/.';\n        }\n        util_1.warn(errorMessage);\n    };\n    return AuthTokenProvider;\n}());\nexports.AuthTokenProvider = AuthTokenProvider;\n\n//# sourceMappingURL=AuthTokenProvider.js.map\n"]}]