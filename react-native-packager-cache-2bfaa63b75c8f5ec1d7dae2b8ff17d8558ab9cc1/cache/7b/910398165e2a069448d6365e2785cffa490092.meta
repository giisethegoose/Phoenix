["fad2ca62a2936c327d7946336cc60d421ed74772","7e78c6a322b748c4cb4b2185f62c3bf608eedbac",["./EventTarget.js","../utils/log.js"],[123,236],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native-fetch-blob/polyfill/XMLHttpRequestEventTarget.js"],"names":["log","disable","XMLHttpRequestEventTarget","_onabort","_onerror","_onload","_onloadstart","_onprogress","_ontimeout","_onloadend","info","event","e","debug","fn"],"mappings":";;;;;AAIA;;;;AACA;;;;AAEA,IAAMA,MAAM,kBAAQ,2BAAR,CAAZ;;AAEAA,IAAIC,OAAJ;;IAGqBC,yB;;;AAUnB,uCAAc;AAAA;;AAAA;;AAAA,UARdC,QAQc,GARiB,YAAM,CAAE,CAQzB;;AAAA,UAPdC,QAOc,GAPiB,YAAM,CAAE,CAOzB;;AAAA,UANdC,OAMc,GANgB,YAAM,CAAE,CAMxB;;AAAA,UALdC,YAKc,GALqB,YAAM,CAAE,CAK7B;;AAAA,UAJdC,WAIc,GAJoB,YAAM,CAAE,CAI5B;;AAAA,UAHdC,UAGc,GAHmB,YAAM,CAAE,CAG3B;;AAAA,UAFdC,UAEc,GAFmB,YAAM,CAAE,CAE3B;;AAEZT,QAAIU,IAAJ,CAAS,oBAAT;AAFY;AAGb;;;;kCAEaC,K,EAAcC,C,EAAS;AACnCZ,UAAIa,KAAJ,CAAU,gBAAV,EAA4BF,KAA5B,EAAmCC,CAAnC;AACA,sKAAoBD,KAApB,EAA2BC,CAA3B;AACA,cAAOD,KAAP;AACE,aAAK,OAAL;AACE,eAAKR,QAAL,CAAcS,CAAd;AACF;AACA,aAAK,OAAL;AACE,eAAKR,QAAL,CAAcQ,CAAd;AACF;AACA,aAAK,MAAL;AACE,eAAKP,OAAL,CAAaO,CAAb;AACF;AACA,aAAK,WAAL;AACE,eAAKN,YAAL,CAAkBM,CAAlB;AACF;AACA,aAAK,SAAL;AACE,eAAKH,UAAL,CAAgBG,CAAhB;AACF;AACA,aAAK,UAAL;AACE,eAAKL,WAAL,CAAiBK,CAAjB;AACF;AACA,aAAK,SAAL;AACE,eAAKJ,UAAL,CAAgBI,CAAhB;AACF;AArBF;AAuBD;;;sBAEWE,E,EAAsB;AAChCd,UAAIU,IAAJ,CAAS,aAAT;AACA,WAAKP,QAAL,GAAgBW,EAAhB;AACD,K;wBAEa;AACZ,aAAO,KAAKX,QAAZ;AACD;;;sBACWW,E,EAAsB;AAChCd,UAAIU,IAAJ,CAAS,aAAT;AACA,WAAKN,QAAL,GAAgBU,EAAhB;AACD,K;wBAEa;AACZ,aAAO,KAAKV,QAAZ;AACD;;;sBAEUU,E,EAAsB;AAC/Bd,UAAIU,IAAJ,CAAS,YAAT,EAAuBI,EAAvB;AACA,WAAKT,OAAL,GAAeS,EAAf;AACD,K;wBAEY;AACX,aAAO,KAAKT,OAAZ;AACD;;;sBAEeS,E,EAAsB;AACpCd,UAAIU,IAAJ,CAAS,iBAAT;AACA,WAAKJ,YAAL,GAAoBQ,EAApB;AACD,K;wBAEiB;AAChB,aAAO,KAAKR,YAAZ;AACD;;;sBAEcQ,E,EAAsB;AACnCd,UAAIU,IAAJ,CAAS,gBAAT;AACA,WAAKH,WAAL,GAAmBO,EAAnB;AACD,K;wBAEgB;AACf,aAAO,KAAKP,WAAZ;AACD;;;sBAEaO,E,EAAsB;AAClCd,UAAIU,IAAJ,CAAS,eAAT;AACA,WAAKF,UAAL,GAAkBM,EAAlB;AACD,K;wBAEe;AACd,aAAO,KAAKN,UAAZ;AACD;;;sBAEaM,E,EAAsB;AAClCd,UAAIU,IAAJ,CAAS,eAAT;AACA,WAAKD,UAAL,GAAkBK,EAAlB;AACD,K;wBAEe;AACd,aAAO,KAAKL,UAAZ;AACD;;;;;kBAvGkBP,yB","sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport EventTarget from './EventTarget.js'\nimport Log from '../utils/log.js'\n\nconst log = new Log('XMLHttpRequestEventTarget')\n\nlog.disable()\n// log.level(3)\n\nexport default class XMLHttpRequestEventTarget extends EventTarget {\n\n  _onabort : (e:Event) => void = () => {};\n  _onerror : (e:Event) => void = () => {};\n  _onload : (e:Event) => void = () => {};\n  _onloadstart : (e:Event) => void = () => {};\n  _onprogress : (e:Event) => void = () => {};\n  _ontimeout : (e:Event) => void = () => {};\n  _onloadend : (e:Event) => void = () => {};\n\n  constructor() {\n    super()\n    log.info('constructor called')\n  }\n\n  dispatchEvent(event:string, e:Event) {\n    log.debug('dispatch event', event, e)\n    super.dispatchEvent(event, e)\n    switch(event) {\n      case 'abort' :\n        this._onabort(e)\n      break;\n      case 'error' :\n        this._onerror(e)\n      break;\n      case 'load' :\n        this._onload(e)\n      break;\n      case 'loadstart' :\n        this._onloadstart(e)\n      break;\n      case 'loadend' :\n        this._onloadend(e)\n      break;\n      case 'progress' :\n        this._onprogress(e)\n      break;\n      case 'timeout' :\n        this._ontimeout(e)\n      break;\n    }\n  }\n\n  set onabort(fn:(e:Event) => void) {\n    log.info('set onabort')\n    this._onabort = fn\n  }\n\n  get onabort() {\n    return this._onabort\n  }\n  set onerror(fn:(e:Event) => void) {\n    log.info('set onerror')\n    this._onerror = fn\n  }\n\n  get onerror() {\n    return this._onerror\n  }\n\n  set onload(fn:(e:Event) => void) {\n    log.info('set onload', fn)\n    this._onload = fn\n  }\n\n  get onload() {\n    return this._onload\n  }\n\n  set onloadstart(fn:(e:Event) => void) {\n    log.info('set onloadstart')\n    this._onloadstart = fn\n  }\n\n  get onloadstart() {\n    return this._onloadstart\n  }\n\n  set onprogress(fn:(e:Event) => void) {\n    log.info('set onprogress')\n    this._onprogress = fn\n  }\n\n  get onprogress() {\n    return this._onprogress\n  }\n\n  set ontimeout(fn:(e:Event) => void) {\n    log.info('set ontimeout')\n    this._ontimeout = fn\n  }\n\n  get ontimeout() {\n    return this._ontimeout\n  }\n\n  set onloadend(fn:(e:Event) => void) {\n    log.info('set onloadend')\n    this._onloadend = fn\n  }\n\n  get onloadend() {\n    return this._onloadend\n  }\n\n}\n"]}]