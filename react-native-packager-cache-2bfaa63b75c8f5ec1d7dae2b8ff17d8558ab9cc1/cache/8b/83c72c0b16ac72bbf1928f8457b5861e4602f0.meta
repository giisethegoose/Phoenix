["dd85196574053de02f07af4707d62b28a42b03df","6d15a325dd35adff89a84ead3607b090442d9967",["@firebase/util","../util/util","../snap/indexes/KeyIndex","../snap/indexes/PriorityIndex","../snap/indexes/ValueIndex","../snap/indexes/PathIndex","./filter/IndexedFilter","./filter/LimitedFilter","./filter/RangedFilter"],[99,139,181,240,301,358,418,475,531,578],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/view/QueryParams.js"],"names":["Object","defineProperty","exports","value","util_1","require","util_2","KeyIndex_1","PriorityIndex_1","ValueIndex_1","PathIndex_1","IndexedFilter_1","LimitedFilter_1","RangedFilter_1","util_3","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","limit_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","index_","PRIORITY_INDEX","prototype","hasStart","isViewFromLeft","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","getIndexStartValue","assert","getIndexStartName","MIN_NAME","hasEnd","getIndexEndValue","getIndexEndName","MAX_NAME","hasLimit","hasAnchoredLimit","getLimit","getIndex","copy_","copy","limit","newLimit","newParams","limitToFirst","limitToLast","VIEW_FROM_RIGHT","startAt","indexValue","key","undefined","endAt","orderBy","index","getQueryObject","WIRE_PROTOCOL_CONSTANTS","obj","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","toString","loadsAllData","isDefault","getNodeFilter","IndexedFilter","LimitedFilter","RangedFilter","toRestQueryStringParameters","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","VALUE_INDEX","KEY_INDEX","PathIndex","ORDER_BY","stringify","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../util/util\");\nvar KeyIndex_1 = require(\"../snap/indexes/KeyIndex\");\nvar PriorityIndex_1 = require(\"../snap/indexes/PriorityIndex\");\nvar ValueIndex_1 = require(\"../snap/indexes/ValueIndex\");\nvar PathIndex_1 = require(\"../snap/indexes/PathIndex\");\nvar IndexedFilter_1 = require(\"./filter/IndexedFilter\");\nvar LimitedFilter_1 = require(\"./filter/LimitedFilter\");\nvar RangedFilter_1 = require(\"./filter/RangedFilter\");\nvar util_3 = require(\"@firebase/util\");\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n * @constructor\n */\nvar QueryParams = /** @class */ (function () {\n    function QueryParams() {\n        this.limitSet_ = false;\n        this.startSet_ = false;\n        this.startNameSet_ = false;\n        this.endSet_ = false;\n        this.endNameSet_ = false;\n        this.limit_ = 0;\n        this.viewFrom_ = '';\n        this.indexStartValue_ = null;\n        this.indexStartName_ = '';\n        this.indexEndValue_ = null;\n        this.indexEndName_ = '';\n        this.index_ = PriorityIndex_1.PRIORITY_INDEX;\n    }\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasStart = function () {\n        return this.startSet_;\n    };\n    /**\n     * @return {boolean} True if it would return from left.\n     */\n    QueryParams.prototype.isViewFromLeft = function () {\n        if (this.viewFrom_ === '') {\n            // limit(), rather than limitToFirst or limitToLast was called.\n            // This means that only one of startSet_ and endSet_ is true. Use them\n            // to calculate which side of the view to anchor to. If neither is set,\n            // anchor to the end.\n            return this.startSet_;\n        }\n        else {\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\n        }\n    };\n    /**\n     * Only valid to call if hasStart() returns true\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexStartValue = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        return this.indexStartValue_;\n    };\n    /**\n     * Only valid to call if hasStart() returns true.\n     * Returns the starting key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexStartName = function () {\n        util_1.assert(this.startSet_, 'Only valid if start has been set');\n        if (this.startNameSet_) {\n            return this.indexStartName_;\n        }\n        else {\n            return util_2.MIN_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasEnd = function () {\n        return this.endSet_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * @return {*}\n     */\n    QueryParams.prototype.getIndexEndValue = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        return this.indexEndValue_;\n    };\n    /**\n     * Only valid to call if hasEnd() returns true.\n     * Returns the end key name for the range defined by these query parameters\n     * @return {!string}\n     */\n    QueryParams.prototype.getIndexEndName = function () {\n        util_1.assert(this.endSet_, 'Only valid if end has been set');\n        if (this.endNameSet_) {\n            return this.indexEndName_;\n        }\n        else {\n            return util_2.MAX_NAME;\n        }\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.hasLimit = function () {\n        return this.limitSet_;\n    };\n    /**\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\n     */\n    QueryParams.prototype.hasAnchoredLimit = function () {\n        return this.limitSet_ && this.viewFrom_ !== '';\n    };\n    /**\n     * Only valid to call if hasLimit() returns true\n     * @return {!number}\n     */\n    QueryParams.prototype.getLimit = function () {\n        util_1.assert(this.limitSet_, 'Only valid if limit has been set');\n        return this.limit_;\n    };\n    /**\n     * @return {!Index}\n     */\n    QueryParams.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @return {!QueryParams}\n     * @private\n     */\n    QueryParams.prototype.copy_ = function () {\n        var copy = new QueryParams();\n        copy.limitSet_ = this.limitSet_;\n        copy.limit_ = this.limit_;\n        copy.startSet_ = this.startSet_;\n        copy.indexStartValue_ = this.indexStartValue_;\n        copy.startNameSet_ = this.startNameSet_;\n        copy.indexStartName_ = this.indexStartName_;\n        copy.endSet_ = this.endSet_;\n        copy.indexEndValue_ = this.indexEndValue_;\n        copy.endNameSet_ = this.endNameSet_;\n        copy.indexEndName_ = this.indexEndName_;\n        copy.index_ = this.index_;\n        copy.viewFrom_ = this.viewFrom_;\n        return copy;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limit = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = '';\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToFirst = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\n        return newParams;\n    };\n    /**\n     * @param {!number} newLimit\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.limitToLast = function (newLimit) {\n        var newParams = this.copy_();\n        newParams.limitSet_ = true;\n        newParams.limit_ = newLimit;\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.startAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.startSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexStartValue_ = indexValue;\n        if (key != null) {\n            newParams.startNameSet_ = true;\n            newParams.indexStartName_ = key;\n        }\n        else {\n            newParams.startNameSet_ = false;\n            newParams.indexStartName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {*} indexValue\n     * @param {?string=} key\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.endAt = function (indexValue, key) {\n        var newParams = this.copy_();\n        newParams.endSet_ = true;\n        if (!(indexValue !== undefined)) {\n            indexValue = null;\n        }\n        newParams.indexEndValue_ = indexValue;\n        if (key !== undefined) {\n            newParams.endNameSet_ = true;\n            newParams.indexEndName_ = key;\n        }\n        else {\n            newParams.endNameSet_ = false;\n            newParams.indexEndName_ = '';\n        }\n        return newParams;\n    };\n    /**\n     * @param {!Index} index\n     * @return {!QueryParams}\n     */\n    QueryParams.prototype.orderBy = function (index) {\n        var newParams = this.copy_();\n        newParams.index_ = index;\n        return newParams;\n    };\n    /**\n     * @return {!Object}\n     */\n    QueryParams.prototype.getQueryObject = function () {\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\n        var obj = {};\n        if (this.startSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\n            if (this.startNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\n            }\n        }\n        if (this.endSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\n            if (this.endNameSet_) {\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\n            }\n        }\n        if (this.limitSet_) {\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\n            var viewFrom = this.viewFrom_;\n            if (viewFrom === '') {\n                if (this.isViewFromLeft()) {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n                }\n                else {\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n                }\n            }\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n        }\n        // For now, priority index is the default, so we only specify if it's some other index\n        if (this.index_ !== PriorityIndex_1.PRIORITY_INDEX) {\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\n        }\n        return obj;\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.loadsAllData = function () {\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\n    };\n    /**\n     * @return {boolean}\n     */\n    QueryParams.prototype.isDefault = function () {\n        return this.loadsAllData() && this.index_ == PriorityIndex_1.PRIORITY_INDEX;\n    };\n    /**\n     * @return {!NodeFilter}\n     */\n    QueryParams.prototype.getNodeFilter = function () {\n        if (this.loadsAllData()) {\n            return new IndexedFilter_1.IndexedFilter(this.getIndex());\n        }\n        else if (this.hasLimit()) {\n            return new LimitedFilter_1.LimitedFilter(this);\n        }\n        else {\n            return new RangedFilter_1.RangedFilter(this);\n        }\n    };\n    /**\n     * Returns a set of REST query string parameters representing this query.\n     *\n     * @return {!Object.<string,*>} query string parameters\n     */\n    QueryParams.prototype.toRestQueryStringParameters = function () {\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\n        var qs = {};\n        if (this.isDefault()) {\n            return qs;\n        }\n        var orderBy;\n        if (this.index_ === PriorityIndex_1.PRIORITY_INDEX) {\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\n        }\n        else if (this.index_ === ValueIndex_1.VALUE_INDEX) {\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\n        }\n        else if (this.index_ === KeyIndex_1.KEY_INDEX) {\n            orderBy = REST_CONSTANTS.KEY_INDEX;\n        }\n        else {\n            util_1.assert(this.index_ instanceof PathIndex_1.PathIndex, 'Unrecognized index type!');\n            orderBy = this.index_.toString();\n        }\n        qs[REST_CONSTANTS.ORDER_BY] = util_3.stringify(orderBy);\n        if (this.startSet_) {\n            qs[REST_CONSTANTS.START_AT] = util_3.stringify(this.indexStartValue_);\n            if (this.startNameSet_) {\n                qs[REST_CONSTANTS.START_AT] += ',' + util_3.stringify(this.indexStartName_);\n            }\n        }\n        if (this.endSet_) {\n            qs[REST_CONSTANTS.END_AT] = util_3.stringify(this.indexEndValue_);\n            if (this.endNameSet_) {\n                qs[REST_CONSTANTS.END_AT] += ',' + util_3.stringify(this.indexEndName_);\n            }\n        }\n        if (this.limitSet_) {\n            if (this.isViewFromLeft()) {\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\n            }\n            else {\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\n            }\n        }\n        return qs;\n    };\n    /**\n     * Wire Protocol Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\n        INDEX_START_VALUE: 'sp',\n        INDEX_START_NAME: 'sn',\n        INDEX_END_VALUE: 'ep',\n        INDEX_END_NAME: 'en',\n        LIMIT: 'l',\n        VIEW_FROM: 'vf',\n        VIEW_FROM_LEFT: 'l',\n        VIEW_FROM_RIGHT: 'r',\n        INDEX: 'i'\n    };\n    /**\n     * REST Query Constants\n     * @const\n     * @enum {string}\n     * @private\n     */\n    QueryParams.REST_QUERY_CONSTANTS_ = {\n        ORDER_BY: 'orderBy',\n        PRIORITY_INDEX: '$priority',\n        VALUE_INDEX: '$value',\n        KEY_INDEX: '$key',\n        START_AT: 'startAt',\n        END_AT: 'endAt',\n        LIMIT_TO_FIRST: 'limitToFirst',\n        LIMIT_TO_LAST: 'limitToLast'\n    };\n    /**\n     * Default, empty query parameters\n     * @type {!QueryParams}\n     * @const\n     */\n    QueryParams.DEFAULT = new QueryParams();\n    return QueryParams;\n}());\nexports.QueryParams = QueryParams;\n\n//# sourceMappingURL=QueryParams.js.map\n"]}]