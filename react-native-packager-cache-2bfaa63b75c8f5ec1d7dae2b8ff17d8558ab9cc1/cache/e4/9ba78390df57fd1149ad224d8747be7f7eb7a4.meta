["a881f34b6a7dc85523c46ccc6a51be187cd45020","9682a84146b7c7c8212d58606d4dc2fd8e3d1a07",["./view/CacheNode","./snap/ChildrenNode","@firebase/util","./view/ViewCache","./view/View"],[104,154,199,239,284,326],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/SyncPoint.js"],"names":["Object","defineProperty","exports","value","CacheNode_1","require","ChildrenNode_1","util_1","util_2","ViewCache_1","View_1","__referenceConstructor","SyncPoint","views_","get","assert","set","val","enumerable","configurable","prototype","isEmpty","applyOperation","operation","writesCache","optCompleteServerCache","queryId","source","view","safeGet","events_1","forEach","key","concat","addEventRegistration","query","eventRegistration","serverCache","serverCacheComplete","queryIdentifier","eventCache","calcCompleteEventCache","eventCacheComplete","ChildrenNode","calcCompleteEventChildren","EMPTY_NODE","viewCache","ViewCache","CacheNode","View","getInitialEvents","removeEventRegistration","cancelError","removed","cancelEvents","hadCompleteView","hasCompleteView","self_1","viewQueryId","getQuery","getQueryParams","loadsAllData","push","repo","path","events","getQueryViews","_this","values","keys","map","filter","getCompleteServerCache","viewForQuery","params","getCompleteView","viewExistsForQuery","completeView","findValue"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CacheNode_1 = require(\"./view/CacheNode\");\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar ViewCache_1 = require(\"./view/ViewCache\");\nvar View_1 = require(\"./view/View\");\nvar __referenceConstructor;\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nvar SyncPoint = /** @class */ (function () {\n    function SyncPoint() {\n        /**\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\n         * queryId and the value is the View for that query.\n         *\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n         *\n         * @type {!Object.<!string, !View>}\n         * @private\n         */\n        this.views_ = {};\n    }\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\n        get: function () {\n            util_1.assert(__referenceConstructor, 'Reference.ts has not been loaded');\n            return __referenceConstructor;\n        },\n        set: function (val) {\n            util_1.assert(!__referenceConstructor, '__referenceConstructor has already been defined');\n            __referenceConstructor = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.isEmpty = function () {\n        return util_2.isEmpty(this.views_);\n    };\n    /**\n     *\n     * @param {!Operation} operation\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} optCompleteServerCache\n     * @return {!Array.<!Event>}\n     */\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\n        var queryId = operation.source.queryId;\n        if (queryId !== null) {\n            var view = util_2.safeGet(this.views_, queryId);\n            util_1.assert(view != null, 'SyncTree gave us an op for an invalid query.');\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\n        }\n        else {\n            var events_1 = [];\n            util_2.forEach(this.views_, function (key, view) {\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\n            });\n            return events_1;\n        }\n    };\n    /**\n     * Add an event callback for the specified query.\n     *\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     * @param {!WriteTreeRef} writesCache\n     * @param {?Node} serverCache Complete server cache, if we have it.\n     * @param {boolean} serverCacheComplete\n     * @return {!Array.<!Event>} Events to raise.\n     */\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\n        var queryId = query.queryIdentifier();\n        var view = util_2.safeGet(this.views_, queryId);\n        if (!view) {\n            // TODO: make writesCache take flag for complete server node\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\n            var eventCacheComplete = false;\n            if (eventCache) {\n                eventCacheComplete = true;\n            }\n            else if (serverCache instanceof ChildrenNode_1.ChildrenNode) {\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\n                eventCacheComplete = false;\n            }\n            else {\n                eventCache = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n                eventCacheComplete = false;\n            }\n            var viewCache = new ViewCache_1.ViewCache(new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode_1.CacheNode(\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\n            view = new View_1.View(query, viewCache);\n            this.views_[queryId] = view;\n        }\n        // This is guaranteed to exist now, we just created anything that was missing\n        view.addEventRegistration(eventRegistration);\n        return view.getInitialEvents(eventRegistration);\n    };\n    /**\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n     *\n     * If query is the default query, we'll check all views for the specified eventRegistration.\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n     *\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\n     */\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\n        var queryId = query.queryIdentifier();\n        var removed = [];\n        var cancelEvents = [];\n        var hadCompleteView = this.hasCompleteView();\n        if (queryId === 'default') {\n            // When you do ref.off(...), we search all views for the registration to remove.\n            var self_1 = this;\n            util_2.forEach(this.views_, function (viewQueryId, view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete self_1.views_[viewQueryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            });\n        }\n        else {\n            // remove the callback from the specific view.\n            var view = util_2.safeGet(this.views_, queryId);\n            if (view) {\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\n                if (view.isEmpty()) {\n                    delete this.views_[queryId];\n                    // We'll deal with complete views later.\n                    if (!view\n                        .getQuery()\n                        .getQueryParams()\n                        .loadsAllData()) {\n                        removed.push(view.getQuery());\n                    }\n                }\n            }\n        }\n        if (hadCompleteView && !this.hasCompleteView()) {\n            // We removed our last complete view.\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\n        }\n        return { removed: removed, events: cancelEvents };\n    };\n    /**\n     * @return {!Array.<!View>}\n     */\n    SyncPoint.prototype.getQueryViews = function () {\n        var _this = this;\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\n        return values.filter(function (view) {\n            return !view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n    };\n    /**\n     *\n     * @param {!Path} path The path to the desired complete snapshot\n     * @return {?Node} A complete cache, if it exists\n     */\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\n        var serverCache = null;\n        util_2.forEach(this.views_, function (key, view) {\n            serverCache = serverCache || view.getCompleteServerCache(path);\n        });\n        return serverCache;\n    };\n    /**\n     * @param {!Query} query\n     * @return {?View}\n     */\n    SyncPoint.prototype.viewForQuery = function (query) {\n        var params = query.getQueryParams();\n        if (params.loadsAllData()) {\n            return this.getCompleteView();\n        }\n        else {\n            var queryId = query.queryIdentifier();\n            return util_2.safeGet(this.views_, queryId);\n        }\n    };\n    /**\n     * @param {!Query} query\n     * @return {boolean}\n     */\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\n        return this.viewForQuery(query) != null;\n    };\n    /**\n     * @return {boolean}\n     */\n    SyncPoint.prototype.hasCompleteView = function () {\n        return this.getCompleteView() != null;\n    };\n    /**\n     * @return {?View}\n     */\n    SyncPoint.prototype.getCompleteView = function () {\n        var completeView = util_2.findValue(this.views_, function (view) {\n            return view\n                .getQuery()\n                .getQueryParams()\n                .loadsAllData();\n        });\n        return completeView || null;\n    };\n    return SyncPoint;\n}());\nexports.SyncPoint = SyncPoint;\n\n//# sourceMappingURL=SyncPoint.js.map\n"]}]