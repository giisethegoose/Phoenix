["7640d932daa8563a904976f23cde7180a11fc026","6ed17617dac0e6ac1f6696a9dcecb1999f19ecf3",["defineLazyObjectProperty","Systrace","ExceptionsManager","ErrorUtils","_shouldPolyfillES6Collection","Map","Set","Promise","regenerator-runtime/runtime","JSTimers","XMLHttpRequest","FormData","fetch","WebSocket","Blob","URL","Alert","Geolocation","BatchedBridge","HeapCapture","SamplingProfiler","RCTLog","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","PerformanceLogger","HMRClient","setupDevtools","JSInspector","NetworkAgent"],[442,1577,1699,1805,2171,2273,2403,2516,2590,2704,2888,3341,3422,3495,3572,3651,3731,3813,3885,3951,4032,4340,4389,4491,4592,4696,4808,4915,5027,5157,5283,5428,5486,5541,5595],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native/Libraries/Core/InitializeCore.js"],"names":["global","GLOBAL","undefined","window","defineLazyObjectProperty","require","defineLazyProperty","object","name","getValue","descriptor","Object","getOwnPropertyDescriptor","__DEV__","backupName","toUpperCase","substr","defineProperty","value","enumerable","writable","configurable","console","error","get","polyfillGlobal","process","env","NODE_ENV","__RCTProfileIsProfiling","Systrace","setEnabled","performance","getUserTimingPolyfill","ExceptionsManager","installConsoleErrorReporter","__fbDisableExceptionsManager","handleError","e","isFatal","handleException","ee","log","message","ErrorUtils","setGlobalHandler","_shouldPolyfillCollection","regeneratorRuntime","defineLazyTimer","fetch","Headers","Request","Response","alert","text","navigator","BatchedBridge","registerLazyCallableModule","registerCallableModule","document","JSInspector","registerAgent"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule InitializeCore\n * @flow\n */\n\n/* eslint-disable strict */\n/* globals window: true */\n\n/**\n * Sets up global variables typical in most JavaScript environments.\n *\n *   1. Global timers (via `setTimeout` etc).\n *   2. Global console object.\n *   3. Hooks for printing stack traces with source maps.\n *\n * Leaves enough room in the environment for implementing your own:\n *\n *   1. Require system.\n *   2. Bridged modules.\n *\n */\n'use strict';\n\nif (global.GLOBAL === undefined) {\n  global.GLOBAL = global;\n}\n\nif (global.window === undefined) {\n  global.window = global;\n}\n\nconst defineLazyObjectProperty = require('defineLazyObjectProperty');\n\n/**\n * Sets an object's property. If a property with the same name exists, this will\n * replace it but maintain its descriptor configuration. The property will be\n * replaced with a lazy getter.\n *\n * In DEV mode the original property value will be preserved as `original[PropertyName]`\n * so that, if necessary, it can be restored. For example, if you want to route\n * network requests through DevTools (to trace them):\n *\n *   global.XMLHttpRequest = global.originalXMLHttpRequest;\n *\n * @see https://github.com/facebook/react-native/issues/934\n */\nfunction defineLazyProperty<T>(\n  object: Object,\n  name: string,\n  getValue: () => T,\n): void {\n  const descriptor = Object.getOwnPropertyDescriptor(object, name);\n  if (__DEV__ && descriptor) {\n    const backupName = `original${name[0].toUpperCase()}${name.substr(1)}`;\n    Object.defineProperty(object, backupName, {\n      ...descriptor,\n      value: object[name],\n    });\n  }\n\n  const {enumerable, writable, configurable} = descriptor || {};\n  if (descriptor && !configurable) {\n    console.error('Failed to set polyfill. ' + name + ' is not configurable.');\n    return;\n  }\n\n  defineLazyObjectProperty(object, name, {\n    get: getValue,\n    enumerable: enumerable !== false,\n    writable: writable !== false,\n  });\n}\n\nfunction polyfillGlobal<T>(name: string, getValue: () => T): void {\n  defineLazyProperty(global, name, getValue);\n}\n\n// Set up process\nglobal.process = global.process || {};\nglobal.process.env = global.process.env || {};\nif (!global.process.env.NODE_ENV) {\n  global.process.env.NODE_ENV = __DEV__ ? 'development' : 'production';\n}\n\n// Setup the Systrace profiling hooks if necessary\nif (global.__RCTProfileIsProfiling) {\n  const Systrace = require('Systrace');\n  Systrace.setEnabled(true);\n}\n\nif (__DEV__ && global.performance === undefined) {\n  const Systrace = require('Systrace');\n  global.performance = Systrace.getUserTimingPolyfill();\n}\n\n// Set up console\nconst ExceptionsManager = require('ExceptionsManager');\nExceptionsManager.installConsoleErrorReporter();\n\n// Set up error handler\nif (!global.__fbDisableExceptionsManager) {\n  const handleError = (e, isFatal) => {\n    try {\n      ExceptionsManager.handleException(e, isFatal);\n    } catch (ee) {\n      /* eslint-disable no-console-disallow */\n      console.log('Failed to print error: ', ee.message);\n      /* eslint-enable no-console-disallow */\n      throw e;\n    }\n  };\n\n  const ErrorUtils = require('ErrorUtils');\n  ErrorUtils.setGlobalHandler(handleError);\n}\n\n// Set up collections\nconst _shouldPolyfillCollection = require('_shouldPolyfillES6Collection');\nif (_shouldPolyfillCollection('Map')) {\n  polyfillGlobal('Map', () => require('Map'));\n}\nif (_shouldPolyfillCollection('Set')) {\n  polyfillGlobal('Set', () => require('Set'));\n}\n\n// Set up Promise\n// The native Promise implementation throws the following error:\n// ERROR: Event loop not supported.\npolyfillGlobal('Promise', () => require('Promise'));\n\n// Set up regenerator.\npolyfillGlobal('regeneratorRuntime', () => {\n  // The require just sets up the global, so make sure when we first\n  // invoke it the global does not exist\n  delete global.regeneratorRuntime;\n  require('regenerator-runtime/runtime');\n  return global.regeneratorRuntime;\n});\n\n// Set up timers\nconst defineLazyTimer = name => {\n  polyfillGlobal(name, () => require('JSTimers')[name]);\n};\ndefineLazyTimer('setTimeout');\ndefineLazyTimer('setInterval');\ndefineLazyTimer('setImmediate');\ndefineLazyTimer('clearTimeout');\ndefineLazyTimer('clearInterval');\ndefineLazyTimer('clearImmediate');\ndefineLazyTimer('requestAnimationFrame');\ndefineLazyTimer('cancelAnimationFrame');\ndefineLazyTimer('requestIdleCallback');\ndefineLazyTimer('cancelIdleCallback');\n\n// Set up XHR\n// The native XMLHttpRequest in Chrome dev tools is CORS aware and won't\n// let you fetch anything from the internet\npolyfillGlobal('XMLHttpRequest', () => require('XMLHttpRequest'));\npolyfillGlobal('FormData', () => require('FormData'));\n\npolyfillGlobal('fetch', () => require('fetch').fetch);\npolyfillGlobal('Headers', () => require('fetch').Headers);\npolyfillGlobal('Request', () => require('fetch').Request);\npolyfillGlobal('Response', () => require('fetch').Response);\npolyfillGlobal('WebSocket', () => require('WebSocket'));\npolyfillGlobal('Blob', () => require('Blob'));\npolyfillGlobal('URL', () => require('URL'));\n\n// Set up alert\nif (!global.alert) {\n  global.alert = function(text) {\n    // Require Alert on demand. Requiring it too early can lead to issues\n    // with things like Platform not being fully initialized.\n    require('Alert').alert('Alert', '' + text);\n  };\n}\n\n// Set up Geolocation\nlet navigator = global.navigator;\nif (navigator === undefined) {\n  global.navigator = navigator = {};\n}\n\n// see https://github.com/facebook/react-native/issues/10881\ndefineLazyProperty(navigator, 'product', () => 'ReactNative');\ndefineLazyProperty(navigator, 'geolocation', () => require('Geolocation'));\n\n// Just to make sure the JS gets packaged up. Wait until the JS environment has\n// been initialized before requiring them.\nconst BatchedBridge = require('BatchedBridge');\nBatchedBridge.registerLazyCallableModule('Systrace', () => require('Systrace'));\nBatchedBridge.registerLazyCallableModule('JSTimers', () => require('JSTimers'));\nBatchedBridge.registerLazyCallableModule('HeapCapture', () => require('HeapCapture'));\nBatchedBridge.registerLazyCallableModule('SamplingProfiler', () => require('SamplingProfiler'));\nBatchedBridge.registerLazyCallableModule('RCTLog', () => require('RCTLog'));\nBatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', () => require('RCTDeviceEventEmitter'));\nBatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', () => require('RCTNativeAppEventEmitter'));\nBatchedBridge.registerLazyCallableModule('PerformanceLogger', () => require('PerformanceLogger'));\n\n// Set up devtools\nif (__DEV__) {\n  if (!global.__RCTProfileIsProfiling) {\n    BatchedBridge.registerCallableModule('HMRClient', require('HMRClient'));\n\n    // not when debugging in chrome\n    // TODO(t12832058) This check is broken\n    if (!window.document) {\n      require('setupDevtools');\n    }\n\n    // Set up inspector\n    const JSInspector = require('JSInspector');\n    JSInspector.registerAgent(require('NetworkAgent'));\n  }\n}\n"]}]