["2e47d4f7988b34e615f90742161b77647bd95e05","cdc848068bbb6a72e296a299edc8298c7851b739",["react","./../../react-transform-hmr/lib/index.js","prop-types","react-native","./TabViewPropTypes"],[88,167,1130,1228,1278],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native-tab-view/src/TabViewPagerAndroid.js"],"names":["React","props","_isRequestingAnimationFrame","_isIdle","_currentIndex","_getPageIndex","index","isRTL","navigationState","routes","length","_setPage","_viewPager","_animationFrameCallback","page","animationEnabled","setPage","setPageWithoutAnimation","_handlePageChange","_handlePageScroll","e","position","setValue","nativeEvent","offset","_handlePageScrollStateChanged","jumpToIndex","_handlePageSelected","_setRef","el","_resetListener","subscribe","nextProps","layout","Children","count","children","global","requestAnimationFrame","remove","swipeEnabled","content","map","child","i","key","testID","styles","reverse","initialPage","container","Component","propTypes","bool","node","create","flexGrow","overflow"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, ViewPagerAndroid, StyleSheet, I18nManager } from 'react-native';\nimport { SceneRendererPropType } from './TabViewPropTypes';\nimport type { SceneRendererProps, Route } from './TabViewTypeDefinitions';\n\ntype PageScrollEvent = {\n  nativeEvent: {\n    position: number,\n    offset: number,\n  },\n};\n\ntype PageScrollState = 'dragging' | 'settling' | 'idle';\n\ntype Props<T> = SceneRendererProps<T> & {\n  animationEnabled?: boolean,\n  swipeEnabled?: boolean,\n  children?: React.Node,\n};\n\nexport default class TabViewPagerAndroid<T: Route<*>> extends React.Component<\n  Props<T>\n> {\n  static propTypes = {\n    ...SceneRendererPropType,\n    animationEnabled: PropTypes.bool,\n    swipeEnabled: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n    this._currentIndex = this.props.navigationState.index;\n  }\n\n  componentDidMount() {\n    this._resetListener = this.props.subscribe('reset', this._handlePageChange);\n  }\n\n  componentWillReceiveProps(nextProps: Props<T>) {\n    if (\n      this.props.layout !== nextProps.layout ||\n      React.Children.count(this.props.children) !==\n        React.Children.count(nextProps.children)\n    ) {\n      this._animationFrameCallback = () => {\n        if (this._viewPager) {\n          const { navigationState } = nextProps;\n          const page = I18nManager.isRTL\n            ? navigationState.routes.length - (navigationState.index + 1)\n            : navigationState.index;\n\n          this._viewPager.setPageWithoutAnimation(page);\n        }\n      };\n\n      if (!this._isRequestingAnimationFrame) {\n        this._isRequestingAnimationFrame = true;\n\n        global.requestAnimationFrame(() => {\n          this._isRequestingAnimationFrame = false;\n\n          if (this._animationFrameCallback) {\n            this._animationFrameCallback();\n          }\n        });\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this._handlePageChange(this.props.navigationState.index);\n  }\n\n  componentWillUnmount() {\n    this._resetListener.remove();\n  }\n\n  _animationFrameCallback: ?() => void;\n  _isRequestingAnimationFrame: boolean = false;\n  _resetListener: Object;\n  _viewPager: ?ViewPagerAndroid;\n  _isIdle: boolean = true;\n  _currentIndex = 0;\n\n  _getPageIndex = (index: number) =>\n    I18nManager.isRTL\n      ? this.props.navigationState.routes.length - (index + 1)\n      : index;\n\n  _setPage = (index: number) => {\n    const { _viewPager } = this;\n    if (_viewPager) {\n      this._animationFrameCallback = null;\n\n      const page = this._getPageIndex(index);\n      if (this.props.animationEnabled !== false) {\n        _viewPager.setPage(page);\n      } else {\n        _viewPager.setPageWithoutAnimation(page);\n      }\n    }\n  };\n\n  _handlePageChange = (index: number) => {\n    if (this._isIdle && this._currentIndex !== index) {\n      this._setPage(index);\n      this._currentIndex = index;\n    }\n  };\n\n  _handlePageScroll = (e: PageScrollEvent) => {\n    this.props.position.setValue(\n      this._getPageIndex(e.nativeEvent.position) +\n        e.nativeEvent.offset * (I18nManager.isRTL ? -1 : 1)\n    );\n  };\n\n  _handlePageScrollStateChanged = (e: PageScrollState) => {\n    this._isIdle = e === 'idle';\n    this.props.jumpToIndex(this._currentIndex);\n  };\n\n  _handlePageSelected = (e: PageScrollEvent) => {\n    const index = this._getPageIndex(e.nativeEvent.position);\n    this._currentIndex = index;\n  };\n\n  _setRef = (el: ?ViewPagerAndroid) => (this._viewPager = el);\n\n  render() {\n    const { children, navigationState, swipeEnabled } = this.props;\n    const content = React.Children.map(children, (child, i) => (\n      <View\n        key={navigationState.routes[i].key}\n        testID={navigationState.routes[i].testID}\n        style={styles.page}\n      >\n        {child}\n      </View>\n    ));\n\n    if (I18nManager.isRTL) {\n      content.reverse();\n    }\n\n    const initialPage = this._getPageIndex(navigationState.index);\n\n    return (\n      <ViewPagerAndroid\n        key={navigationState.routes.length}\n        keyboardDismissMode=\"on-drag\"\n        initialPage={initialPage}\n        scrollEnabled={swipeEnabled !== false}\n        onPageScroll={this._handlePageScroll}\n        onPageScrollStateChanged={this._handlePageScrollStateChanged}\n        onPageSelected={this._handlePageSelected}\n        style={styles.container}\n        ref={this._setRef}\n      >\n        {content}\n      </ViewPagerAndroid>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n  },\n\n  page: {\n    overflow: 'hidden',\n  },\n});\n"]}]