["7b0935e22499d107599c594af035c285191f8a29","cd9bc55a85262703fe0ae45e3b8a1ca40fa8e271",["react-native","../../utils/getSceneIndicesForInterpolationInputRange"],[93,168],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-navigation/src/views/CardStack/CardStackStyleInterpolator.js"],"names":["forInitial","props","navigation","scene","focused","state","index","opacity","translate","transform","translateX","translateY","forHorizontal","layout","position","isMeasured","interpolate","first","last","inputRange","outputRange","width","initWidth","isRTL","forVertical","height","initHeight","forFadeFromBottomAndroid","forFade","canUseNativeDriver"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport { I18nManager } from 'react-native';\n\nimport type {\n  NavigationSceneRendererProps,\n  AnimatedViewStyleProp,\n} from '../../TypeDefinition';\n\nimport getSceneIndicesForInterpolationInputRange from '../../utils/getSceneIndicesForInterpolationInputRange';\n\n/**\n * Utility that builds the style for the card in the cards stack.\n *\n *     +------------+\n *   +-+            |\n * +-+ |            |\n * | | |            |\n * | | |  Focused   |\n * | | |   Card     |\n * | | |            |\n * +-+ |            |\n *   +-+            |\n *     +------------+\n */\n\n/**\n * Render the initial style when the initial layout isn't measured yet.\n */\nfunction forInitial(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { navigation, scene } = props;\n\n  const focused = navigation.state.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene far away.\n  const translate = focused ? 0 : 1000000;\n  return {\n    opacity,\n    transform: [{ translateX: translate }, { translateY: translate }],\n  };\n}\n\n/**\n * Standard iOS-style slide in from the right.\n */\nfunction forHorizontal(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: [first, first + 0.01, index, last - 0.01, last],\n    outputRange: ([0, 1, 1, 0.85, 0]: Array<number>),\n  });\n\n  const width = layout.initWidth;\n  const translateX = position.interpolate({\n    inputRange: ([first, index, last]: Array<number>),\n    outputRange: I18nManager.isRTL\n      ? ([-width, 0, width * 0.3]: Array<number>)\n      : ([width, 0, width * -0.3]: Array<number>),\n  });\n  const translateY = 0;\n\n  return {\n    opacity,\n    transform: [{ translateX }, { translateY }],\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nfunction forVertical(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: [first, first + 0.01, index, last - 0.01, last],\n    outputRange: ([0, 1, 1, 0.85, 0]: Array<number>),\n  });\n\n  const height = layout.initHeight;\n  const translateY = position.interpolate({\n    inputRange: ([first, index, last]: Array<number>),\n    outputRange: ([height, 0, 0]: Array<number>),\n  });\n  const translateX = 0;\n\n  return {\n    opacity,\n    transform: [{ translateX }, { translateY }],\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom.\n */\nfunction forFadeFromBottomAndroid(\n  props: NavigationSceneRendererProps\n): AnimatedViewStyleProp {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const inputRange = ([first, index, last - 0.01, last]: Array<number>);\n\n  const opacity = position.interpolate({\n    inputRange,\n    outputRange: ([0, 1, 1, 0]: Array<number>),\n  });\n\n  const translateY = position.interpolate({\n    inputRange,\n    outputRange: ([50, 0, 0, 0]: Array<number>),\n  });\n  const translateX = 0;\n\n  return {\n    opacity,\n    transform: [{ translateX }, { translateY }],\n  };\n}\n\n/**\n *  fadeIn and fadeOut\n */\nfunction forFade(props: NavigationSceneRendererProps): AnimatedViewStyleProp {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: ([first, index, last]: Array<number>),\n    outputRange: ([0, 1, 1]: Array<number>),\n  });\n\n  return {\n    opacity,\n  };\n}\n\nfunction canUseNativeDriver(): boolean {\n  // The native driver can be enabled for this interpolator animating\n  // opacity, translateX, and translateY is supported by the native animation\n  // driver on iOS and Android.\n  return true;\n}\n\nexport default {\n  forHorizontal,\n  forVertical,\n  forFadeFromBottomAndroid,\n  forFade,\n  canUseNativeDriver,\n};\n"]}]