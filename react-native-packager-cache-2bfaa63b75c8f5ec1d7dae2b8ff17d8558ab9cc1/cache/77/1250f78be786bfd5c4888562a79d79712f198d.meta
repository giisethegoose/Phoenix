["03358ba8c903324c6570efbd9b22ab893d7bb732","5b6e2ae308ebb011fa1d5c7e971c239b7248f816",["@firebase/util"],[99],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/util/EventEmitter.js"],"names":["Object","defineProperty","exports","value","util_1","require","EventEmitter","allowedEvents_","listeners_","assert","Array","isArray","length","prototype","trigger","eventType","var_args","_i","arguments","listeners","slice","i","callback","apply","context","on","validateEventType_","push","eventData","getInitialEvent","off","splice","find","et"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,SAASC,OAAT,kBAAJ;;AAKA,IAAIC,eAA8B,YAAY;AAI1C,aAASA,YAAT,CAAsBC,cAAtB,EAAsC;AAClC,aAAKA,cAAL,GAAsBA,cAAtB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACAJ,eAAOK,MAAP,CAAcC,MAAMC,OAAN,CAAcJ,cAAd,KAAiCA,eAAeK,MAAf,GAAwB,CAAvE,EAA0E,4BAA1E;AACH;;AAMDN,iBAAaO,SAAb,CAAuBC,OAAvB,GAAiC,UAAUC,SAAV,EAAqB;AAClD,YAAIC,WAAW,EAAf;AACA,aAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKC,UAAUN,MAAhC,EAAwCK,IAAxC,EAA8C;AAC1CD,qBAASC,KAAK,CAAd,IAAmBC,UAAUD,EAAV,CAAnB;AACH;AACD,YAAIP,MAAMC,OAAN,CAAc,KAAKH,UAAL,CAAgBO,SAAhB,CAAd,CAAJ,EAA+C;AAE3C,gBAAII,YAAY,KAAKX,UAAL,CAAgBO,SAAhB,EAA2BK,KAA3B,EAAhB;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,UAAUP,MAA9B,EAAsCS,GAAtC,EAA2C;AACvCF,0BAAUE,CAAV,EAAaC,QAAb,CAAsBC,KAAtB,CAA4BJ,UAAUE,CAAV,EAAaG,OAAzC,EAAkDR,QAAlD;AACH;AACJ;AACJ,KAZD;AAaAV,iBAAaO,SAAb,CAAuBY,EAAvB,GAA4B,UAAUV,SAAV,EAAqBO,QAArB,EAA+BE,OAA/B,EAAwC;AAChE,aAAKE,kBAAL,CAAwBX,SAAxB;AACA,aAAKP,UAAL,CAAgBO,SAAhB,IAA6B,KAAKP,UAAL,CAAgBO,SAAhB,KAA8B,EAA3D;AACA,aAAKP,UAAL,CAAgBO,SAAhB,EAA2BY,IAA3B,CAAgC,EAAEL,UAAUA,QAAZ,EAAsBE,SAASA,OAA/B,EAAhC;AACA,YAAII,YAAY,KAAKC,eAAL,CAAqBd,SAArB,CAAhB;AACA,YAAIa,SAAJ,EAAe;AACXN,qBAASC,KAAT,CAAeC,OAAf,EAAwBI,SAAxB;AACH;AACJ,KARD;AASAtB,iBAAaO,SAAb,CAAuBiB,GAAvB,GAA6B,UAAUf,SAAV,EAAqBO,QAArB,EAA+BE,OAA/B,EAAwC;AACjE,aAAKE,kBAAL,CAAwBX,SAAxB;AACA,YAAII,YAAY,KAAKX,UAAL,CAAgBO,SAAhB,KAA8B,EAA9C;AACA,aAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAIF,UAAUP,MAA9B,EAAsCS,GAAtC,EAA2C;AACvC,gBAAIF,UAAUE,CAAV,EAAaC,QAAb,KAA0BA,QAA1B,KACC,CAACE,OAAD,IAAYA,YAAYL,UAAUE,CAAV,EAAaG,OADtC,CAAJ,EACoD;AAChDL,0BAAUY,MAAV,CAAiBV,CAAjB,EAAoB,CAApB;AACA;AACH;AACJ;AACJ,KAVD;AAWAf,iBAAaO,SAAb,CAAuBa,kBAAvB,GAA4C,UAAUX,SAAV,EAAqB;AAC7DX,eAAOK,MAAP,CAAc,KAAKF,cAAL,CAAoByB,IAApB,CAAyB,UAAUC,EAAV,EAAc;AACjD,mBAAOA,OAAOlB,SAAd;AACH,SAFa,CAAd,EAEI,oBAAoBA,SAFxB;AAGH,KAJD;AAKA,WAAOT,YAAP;AACH,CArDiC,EAAlC;AAsDAJ,QAAQI,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nvar EventEmitter = /** @class */ (function () {\n    /**\n     * @param {!Array.<string>} allowedEvents_\n     */\n    function EventEmitter(allowedEvents_) {\n        this.allowedEvents_ = allowedEvents_;\n        this.listeners_ = {};\n        util_1.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\n    }\n    /**\n     * To be called by derived classes to trigger events.\n     * @param {!string} eventType\n     * @param {...*} var_args\n     */\n    EventEmitter.prototype.trigger = function (eventType) {\n        var var_args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            var_args[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(this.listeners_[eventType])) {\n            // Clone the list, since callbacks could add/remove listeners.\n            var listeners = this.listeners_[eventType].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                listeners[i].callback.apply(listeners[i].context, var_args);\n            }\n        }\n    };\n    EventEmitter.prototype.on = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\n        this.listeners_[eventType].push({ callback: callback, context: context });\n        var eventData = this.getInitialEvent(eventType);\n        if (eventData) {\n            callback.apply(context, eventData);\n        }\n    };\n    EventEmitter.prototype.off = function (eventType, callback, context) {\n        this.validateEventType_(eventType);\n        var listeners = this.listeners_[eventType] || [];\n        for (var i = 0; i < listeners.length; i++) {\n            if (listeners[i].callback === callback &&\n                (!context || context === listeners[i].context)) {\n                listeners.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\n        util_1.assert(this.allowedEvents_.find(function (et) {\n            return et === eventType;\n        }), 'Unknown event: ' + eventType);\n    };\n    return EventEmitter;\n}());\nexports.EventEmitter = EventEmitter;\n\n//# sourceMappingURL=EventEmitter.js.map\n"]}]