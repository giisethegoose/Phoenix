["c06c7ae1f51c138d85aeb5dabb5efbd23eeafb92","bfd30f24d8ac774e70d7cdcd79c92f313b1537d3",["./error","./metadata","./type"],[107,147,181],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/storage/dist/cjs/src/implementation/args.js"],"names":["Object","defineProperty","exports","value","errorsExports","require","MetadataUtils","type","validate","name","specs","passed","minArgs","length","maxArgs","i","optional","validLength","invalidArgumentCount","validator","e","Error","invalidArgument","message","ArgSpec","opt_optional","self","p","isJustDef","and_","v1","v2","stringSpec","opt_validator","stringValidator","isString","uploadDataSpec","valid","Uint8Array","ArrayBuffer","isNativeBlobDefined","Blob","metadataSpec","metadataValidator","nonNegativeNumberSpec","isNumber","looseObjectSpec","isLooseObject","isDef","undefined","nullFunctionSpec","isFunction"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar errorsExports = require(\"./error\");\nvar MetadataUtils = require(\"./metadata\");\nvar type = require(\"./type\");\n/**\n * @param name Name of the function.\n * @param specs Argument specs.\n * @param passed The actual arguments passed to the function.\n * @throws {fbs.Error} If the arguments are invalid.\n */\nfunction validate(name, specs, passed) {\n    var minArgs = specs.length;\n    var maxArgs = specs.length;\n    for (var i = 0; i < specs.length; i++) {\n        if (specs[i].optional) {\n            minArgs = i;\n            break;\n        }\n    }\n    var validLength = minArgs <= passed.length && passed.length <= maxArgs;\n    if (!validLength) {\n        throw errorsExports.invalidArgumentCount(minArgs, maxArgs, name, passed.length);\n    }\n    for (var i = 0; i < passed.length; i++) {\n        try {\n            specs[i].validator(passed[i]);\n        }\n        catch (e) {\n            if (e instanceof Error) {\n                throw errorsExports.invalidArgument(i, name, e.message);\n            }\n            else {\n                throw errorsExports.invalidArgument(i, name, e);\n            }\n        }\n    }\n}\nexports.validate = validate;\n/**\n * @struct\n */\nvar ArgSpec = /** @class */ (function () {\n    function ArgSpec(validator, opt_optional) {\n        var self = this;\n        this.validator = function (p) {\n            if (self.optional && !type.isJustDef(p)) {\n                return;\n            }\n            validator(p);\n        };\n        this.optional = !!opt_optional;\n    }\n    return ArgSpec;\n}());\nexports.ArgSpec = ArgSpec;\nfunction and_(v1, v2) {\n    return function (p) {\n        v1(p);\n        v2(p);\n    };\n}\nexports.and_ = and_;\nfunction stringSpec(opt_validator, opt_optional) {\n    function stringValidator(p) {\n        if (!type.isString(p)) {\n            throw 'Expected string.';\n        }\n    }\n    var validator;\n    if (opt_validator) {\n        validator = and_(stringValidator, opt_validator);\n    }\n    else {\n        validator = stringValidator;\n    }\n    return new ArgSpec(validator, opt_optional);\n}\nexports.stringSpec = stringSpec;\nfunction uploadDataSpec() {\n    function validator(p) {\n        var valid = p instanceof Uint8Array ||\n            p instanceof ArrayBuffer ||\n            (type.isNativeBlobDefined() && p instanceof Blob);\n        if (!valid) {\n            throw 'Expected Blob or File.';\n        }\n    }\n    return new ArgSpec(validator);\n}\nexports.uploadDataSpec = uploadDataSpec;\nfunction metadataSpec(opt_optional) {\n    return new ArgSpec(MetadataUtils.metadataValidator, opt_optional);\n}\nexports.metadataSpec = metadataSpec;\nfunction nonNegativeNumberSpec() {\n    function validator(p) {\n        var valid = type.isNumber(p) && p >= 0;\n        if (!valid) {\n            throw 'Expected a number 0 or greater.';\n        }\n    }\n    return new ArgSpec(validator);\n}\nexports.nonNegativeNumberSpec = nonNegativeNumberSpec;\nfunction looseObjectSpec(opt_validator, opt_optional) {\n    function validator(p) {\n        var isLooseObject = p === null || (type.isDef(p) && p instanceof Object);\n        if (!isLooseObject) {\n            throw 'Expected an Object.';\n        }\n        if (opt_validator !== undefined && opt_validator !== null) {\n            opt_validator(p);\n        }\n    }\n    return new ArgSpec(validator, opt_optional);\n}\nexports.looseObjectSpec = looseObjectSpec;\nfunction nullFunctionSpec(opt_optional) {\n    function validator(p) {\n        var valid = p === null || type.isFunction(p);\n        if (!valid) {\n            throw 'Expected a Function.';\n        }\n    }\n    return new ArgSpec(validator, opt_optional);\n}\nexports.nullFunctionSpec = nullFunctionSpec;\n\n//# sourceMappingURL=args.js.map\n"]}]