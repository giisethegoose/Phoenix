["31bd0fa716c9340abf0c8c65096b72185c3f3ac4","fe1af65cd694f60791bc76a3ce83344c77daf8a5",["./snap/ChildrenNode"],[107],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/SnapshotHolder.js"],"names":["Object","defineProperty","exports","value","ChildrenNode_1","require","SnapshotHolder","rootNode_","ChildrenNode","EMPTY_NODE","prototype","getNode","path","getChild","updateSnapshot","newSnapshotNode","updateChild"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,iBAAiBC,QAAQ,qBAAR,CAArB;;AAMA,IAAIC,iBAAgC,YAAY;AAC5C,aAASA,cAAT,GAA0B;AACtB,aAAKC,SAAL,GAAiBH,eAAeI,YAAf,CAA4BC,UAA7C;AACH;AACDH,mBAAeI,SAAf,CAAyBC,OAAzB,GAAmC,UAAUC,IAAV,EAAgB;AAC/C,eAAO,KAAKL,SAAL,CAAeM,QAAf,CAAwBD,IAAxB,CAAP;AACH,KAFD;AAGAN,mBAAeI,SAAf,CAAyBI,cAAzB,GAA0C,UAAUF,IAAV,EAAgBG,eAAhB,EAAiC;AACvE,aAAKR,SAAL,GAAiB,KAAKA,SAAL,CAAeS,WAAf,CAA2BJ,IAA3B,EAAiCG,eAAjC,CAAjB;AACH,KAFD;AAGA,WAAOT,cAAP;AACH,CAXmC,EAApC;AAYAJ,QAAQI,cAAR,GAAyBA,cAAzB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChildrenNode_1 = require(\"./snap/ChildrenNode\");\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n *\n * @constructor\n */\nvar SnapshotHolder = /** @class */ (function () {\n    function SnapshotHolder() {\n        this.rootNode_ = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n    }\n    SnapshotHolder.prototype.getNode = function (path) {\n        return this.rootNode_.getChild(path);\n    };\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n    };\n    return SnapshotHolder;\n}());\nexports.SnapshotHolder = SnapshotHolder;\n\n//# sourceMappingURL=SnapshotHolder.js.map\n"]}]