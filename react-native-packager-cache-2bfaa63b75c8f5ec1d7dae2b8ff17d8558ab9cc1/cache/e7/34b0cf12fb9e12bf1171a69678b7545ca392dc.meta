["ffb30a145a4be4b75abe02332bf72a98dab6849b","003169aeefacd17af9505468ee6cb2192a6c6f43",["../Path","../../RepoInfo","../util"],[99,136,176],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/util/libs/parser.js"],"names":["Object","defineProperty","exports","value","Path_1","require","RepoInfo_1","util_1","decodePath","pathString","pathStringDecoded","pieces","split","i","length","piece","decodeURIComponent","replace","e","parseRepoInfo","dataURL","parsedUrl","parseURL","namespace","subdomain","domain","fatal","host","secure","warnIfPageIsSecure","webSocketOnly","scheme","repoInfo","RepoInfo","path","Path","port","colonInd","indexOf","substring","slashInd","parts","toLowerCase","parseInt"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Path_1 = require(\"../Path\");\nvar RepoInfo_1 = require(\"../../RepoInfo\");\nvar util_1 = require(\"../util\");\n/**\n * @param {!string} pathString\n * @return {string}\n */\nfunction decodePath(pathString) {\n    var pathStringDecoded = '';\n    var pieces = pathString.split('/');\n    for (var i = 0; i < pieces.length; i++) {\n        if (pieces[i].length > 0) {\n            var piece = pieces[i];\n            try {\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n            }\n            catch (e) { }\n            pathStringDecoded += '/' + piece;\n        }\n    }\n    return pathStringDecoded;\n}\n/**\n *\n * @param {!string} dataURL\n * @return {{repoInfo: !RepoInfo, path: !Path}}\n */\nexports.parseRepoInfo = function (dataURL) {\n    var parsedUrl = exports.parseURL(dataURL), namespace = parsedUrl.subdomain;\n    if (parsedUrl.domain === 'firebase') {\n        util_1.fatal(parsedUrl.host +\n            ' is no longer supported. ' +\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\n    }\n    // Catch common error of uninitialized namespace value.\n    if (!namespace || namespace == 'undefined') {\n        util_1.fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\n    }\n    if (!parsedUrl.secure) {\n        util_1.warnIfPageIsSecure();\n    }\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n    return {\n        repoInfo: new RepoInfo_1.RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\n        path: new Path_1.Path(parsedUrl.pathString)\n    };\n};\n/**\n *\n * @param {!string} dataURL\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\n */\nexports.parseURL = function (dataURL) {\n    // Default to empty strings in the event of a malformed string.\n    var host = '', domain = '', subdomain = '', pathString = '';\n    // Always default to SSL, unless otherwise specified.\n    var secure = true, scheme = 'https', port = 443;\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\n    if (typeof dataURL === 'string') {\n        // Parse scheme.\n        var colonInd = dataURL.indexOf('//');\n        if (colonInd >= 0) {\n            scheme = dataURL.substring(0, colonInd - 1);\n            dataURL = dataURL.substring(colonInd + 2);\n        }\n        // Parse host and path.\n        var slashInd = dataURL.indexOf('/');\n        if (slashInd === -1) {\n            slashInd = dataURL.length;\n        }\n        host = dataURL.substring(0, slashInd);\n        pathString = decodePath(dataURL.substring(slashInd));\n        var parts = host.split('.');\n        if (parts.length === 3) {\n            // Normalize namespaces to lowercase to share storage / connection.\n            domain = parts[1];\n            subdomain = parts[0].toLowerCase();\n        }\n        else if (parts.length === 2) {\n            domain = parts[0];\n        }\n        // If we have a port, use scheme for determining if it's secure.\n        colonInd = host.indexOf(':');\n        if (colonInd >= 0) {\n            secure = scheme === 'https' || scheme === 'wss';\n            port = parseInt(host.substring(colonInd + 1), 10);\n        }\n    }\n    return {\n        host: host,\n        port: port,\n        domain: domain,\n        subdomain: subdomain,\n        secure: secure,\n        scheme: scheme,\n        pathString: pathString\n    };\n};\n\n//# sourceMappingURL=parser.js.map\n"]}]