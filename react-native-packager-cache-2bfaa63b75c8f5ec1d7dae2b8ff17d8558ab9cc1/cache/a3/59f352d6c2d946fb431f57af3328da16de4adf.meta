["04b5fd9ed24ba79dc18f6377cc3b102bbc66996a","00a0eb588c5e978212fe6581c24ef12ddee848eb",["@firebase/util","./util/util","./ServerActions"],[638,678,715,755,795,844],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/ReadonlyRestClient.js"],"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","util_1","require","util_2","util_3","util_4","util_5","ServerActions_1","ReadonlyRestClient","_super","repoInfo_","onDataUpdate_","authTokenProvider_","_this","call","log_","logWrapper","listens_","reportStats","stats","Error","getListenId_","query","tag","undefined","assert","getQueryParams","isDefault","path","toString","listen","currentHashFn","onComplete","pathString","queryIdentifier","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","error","result","data","safeGet","status_1","unlisten","refreshAuthToken","token","queryStringParameters","callback","getToken","then","authTokenData","authToken","accessToken","url","secure","host","querystring","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","res","jsonEval","e","warn","open","send","ServerActions"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar ServerActions_1 = require(\"./ServerActions\");\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nvar ReadonlyRestClient = /** @class */ (function (_super) {\n    __extends(ReadonlyRestClient, _super);\n    /**\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\n     * @param {AuthTokenProvider} authTokenProvider_\n     * @implements {ServerActions}\n     */\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\n        var _this = _super.call(this) || this;\n        _this.repoInfo_ = repoInfo_;\n        _this.onDataUpdate_ = onDataUpdate_;\n        _this.authTokenProvider_ = authTokenProvider_;\n        /** @private {function(...[*])} */\n        _this.log_ = util_2.logWrapper('p:rest:');\n        /**\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n         * that's been removed. :-/\n         *\n         * @private {!Object.<string, !Object>}\n         */\n        _this.listens_ = {};\n        return _this;\n    }\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\n        throw new Error('Method not implemented.');\n    };\n    /**\n     * @param {!Query} query\n     * @param {?number=} tag\n     * @return {string}\n     * @private\n     */\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\n        if (tag !== undefined) {\n            return 'tag$' + tag;\n        }\n        else {\n            util_1.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\n            return query.path.toString();\n        }\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\n        var _this = this;\n        var pathString = query.path.toString();\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\n        // Mark this listener so we can tell if it's removed.\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        var thisListen = {};\n        this.listens_[listenId] = thisListen;\n        var queryStringParamaters = query\n            .getQueryParams()\n            .toRestQueryStringParameters();\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error, result) {\n            var data = result;\n            if (error === 404) {\n                data = null;\n                error = null;\n            }\n            if (error === null) {\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n            }\n            if (util_4.safeGet(_this.listens_, listenId) === thisListen) {\n                var status_1;\n                if (!error) {\n                    status_1 = 'ok';\n                }\n                else if (error == 401) {\n                    status_1 = 'permission_denied';\n                }\n                else {\n                    status_1 = 'rest_error:' + error;\n                }\n                onComplete(status_1, null);\n            }\n        });\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\n        delete this.listens_[listenId];\n    };\n    /** @inheritDoc */\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\n        // no-op since we just always call getToken.\n    };\n    /**\n     * Performs a REST request to the given path, with the provided query string parameters,\n     * and any auth credentials we have.\n     *\n     * @param {!string} pathString\n     * @param {!Object.<string, *>} queryStringParameters\n     * @param {?function(?number, *=)} callback\n     * @private\n     */\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\n        var _this = this;\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\n        queryStringParameters['format'] = 'export';\n        this.authTokenProvider_\n            .getToken(/*forceRefresh=*/ false)\n            .then(function (authTokenData) {\n            var authToken = authTokenData && authTokenData.accessToken;\n            if (authToken) {\n                queryStringParameters['auth'] = authToken;\n            }\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\n                _this.repoInfo_.host +\n                pathString +\n                '?' +\n                util_5.querystring(queryStringParameters);\n            _this.log_('Sending REST request for ' + url);\n            var xhr = new XMLHttpRequest();\n            xhr.onreadystatechange = function () {\n                if (callback && xhr.readyState === 4) {\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\n                    var res = null;\n                    if (xhr.status >= 200 && xhr.status < 300) {\n                        try {\n                            res = util_3.jsonEval(xhr.responseText);\n                        }\n                        catch (e) {\n                            util_2.warn('Failed to parse JSON response for ' +\n                                url +\n                                ': ' +\n                                xhr.responseText);\n                        }\n                        callback(null, res);\n                    }\n                    else {\n                        // 401 and 404 are expected.\n                        if (xhr.status !== 401 && xhr.status !== 404) {\n                            util_2.warn('Got unsuccessful REST response for ' +\n                                url +\n                                ' Status: ' +\n                                xhr.status);\n                        }\n                        callback(xhr.status);\n                    }\n                    callback = null;\n                }\n            };\n            xhr.open('GET', url, /*asynchronous=*/ true);\n            xhr.send();\n        });\n    };\n    return ReadonlyRestClient;\n}(ServerActions_1.ServerActions));\nexports.ReadonlyRestClient = ReadonlyRestClient;\n\n//# sourceMappingURL=ReadonlyRestClient.js.map\n"]}]