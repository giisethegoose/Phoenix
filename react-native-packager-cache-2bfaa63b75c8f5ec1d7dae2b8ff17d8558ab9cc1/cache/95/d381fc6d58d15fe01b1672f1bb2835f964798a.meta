["7e9359c0d3f455e225ac6dd843b14f11084a1274","9c6e38c2a83f4c64fb69b7951e72875f204afb31",["@firebase/app","@firebase/util","../core/util/util","../core/stats/StatsManager","./Constants","../core/storage/storage"],[98,137,177,228,285,322,365,414,454],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/realtime/WebSocketConnection.js"],"names":["Object","defineProperty","exports","value","app_1","require","util_1","util_2","StatsManager_1","Constants_1","util_3","storage_1","util_4","util_5","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","setWebSocketImpl","impl","WebSocketConnection","connId","repoInfo","transportSessionId","lastSessionId","keepaliveTimer","frames","totalFrames","bytesSent","bytesReceived","log_","logWrapper","stats_","StatsManager","getCollection","connURL","connectionURL_","urlParams","VERSION_PARAM","PROTOCOL_VERSION","isNodeSdk","location","href","indexOf","FORGE_DOMAIN","REFERER_PARAM","FORGE_REF","TRANSPORT_SESSION_PARAM","LAST_SESSION_PARAM","connectionURL","WEBSOCKET","prototype","open","onMessage","onDisconnect","_this","everConnected_","PersistentStorage","set","device","CONSTANTS","NODE_ADMIN","options","headers","default","SDK_VERSION","process","platform","env","proxy","origin","mySock","e","error","message","data","onClosed_","onopen","onclose","onmessage","m","handleIncomingFrame","onerror","start","forceDisallow","forceDisallow_","isAvailable","isOldAndroid","navigator","userAgent","oldAndroidRegex","oldAndroidMatch","match","length","parseFloat","previouslyFailed","isInMemoryStorage","get","markConnectionHealthy","remove","appendFrame_","push","fullMess","join","jsonMess","jsonEval","handleNewFrameCount_","frameCount","extractFrameCount_","assert","Number","isNaN","mess","incrementCounter","resetKeepAlive","remainingData","send","dataStr","stringify","dataSegs","splitStringBySize","sendString_","String","i","shutdown_","isClosed_","clearInterval","close","setInterval","Math","floor","str","setTimeout","bind","responsesRequiredToBeHealthy","healthyTimeout"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar app_1 = require(\"@firebase/app\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"../core/util/util\");\nvar StatsManager_1 = require(\"../core/stats/StatsManager\");\nvar Constants_1 = require(\"./Constants\");\nvar util_3 = require(\"@firebase/util\");\nvar storage_1 = require(\"../core/storage/storage\");\nvar util_4 = require(\"@firebase/util\");\nvar util_5 = require(\"@firebase/util\");\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\nvar WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n    WebSocketImpl = MozWebSocket;\n}\nelse if (typeof WebSocket !== 'undefined') {\n    WebSocketImpl = WebSocket;\n}\nfunction setWebSocketImpl(impl) {\n    WebSocketImpl = impl;\n}\nexports.setWebSocketImpl = setWebSocketImpl;\n/**\n * Create a new websocket connection with the given callbacks.\n * @constructor\n * @implements {Transport}\n */\nvar WebSocketConnection = /** @class */ (function () {\n    /**\n     * @param {string} connId identifier for this transport\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     */\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\n        this.connId = connId;\n        this.keepaliveTimer = null;\n        this.frames = null;\n        this.totalFrames = 0;\n        this.bytesSent = 0;\n        this.bytesReceived = 0;\n        this.log_ = util_2.logWrapper(this.connId);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo);\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\n    }\n    /**\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\n     *                                         session\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\n     * @return {string} connection url\n     * @private\n     */\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\n        var urlParams = {};\n        urlParams[Constants_1.VERSION_PARAM] = Constants_1.PROTOCOL_VERSION;\n        if (!util_5.isNodeSdk() &&\n            typeof location !== 'undefined' &&\n            location.href &&\n            location.href.indexOf(Constants_1.FORGE_DOMAIN) !== -1) {\n            urlParams[Constants_1.REFERER_PARAM] = Constants_1.FORGE_REF;\n        }\n        if (transportSessionId) {\n            urlParams[Constants_1.TRANSPORT_SESSION_PARAM] = transportSessionId;\n        }\n        if (lastSessionId) {\n            urlParams[Constants_1.LAST_SESSION_PARAM] = lastSessionId;\n        }\n        return repoInfo.connectionURL(Constants_1.WEBSOCKET, urlParams);\n    };\n    /**\n     *\n     * @param onMessage Callback when messages arrive\n     * @param onDisconnect Callback with connection lost.\n     */\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\n        var _this = this;\n        this.onDisconnect = onDisconnect;\n        this.onMessage = onMessage;\n        this.log_('Websocket connecting to ' + this.connURL);\n        this.everConnected_ = false;\n        // Assume failure until proven otherwise.\n        storage_1.PersistentStorage.set('previous_websocket_failure', true);\n        try {\n            if (util_5.isNodeSdk()) {\n                var device = util_3.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n                var options = {\n                    headers: {\n                        'User-Agent': \"Firebase/\" + Constants_1.PROTOCOL_VERSION + \"/\" + app_1.default.SDK_VERSION + \"/\" + process.platform + \"/\" + device\n                    }\n                };\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n                var env = process['env'];\n                var proxy = this.connURL.indexOf('wss://') == 0\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\n                    : env['HTTP_PROXY'] || env['http_proxy'];\n                if (proxy) {\n                    options['proxy'] = { origin: proxy };\n                }\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\n            }\n            else {\n                this.mySock = new WebSocketImpl(this.connURL);\n            }\n        }\n        catch (e) {\n            this.log_('Error instantiating WebSocket.');\n            var error = e.message || e.data;\n            if (error) {\n                this.log_(error);\n            }\n            this.onClosed_();\n            return;\n        }\n        this.mySock.onopen = function () {\n            _this.log_('Websocket connected.');\n            _this.everConnected_ = true;\n        };\n        this.mySock.onclose = function () {\n            _this.log_('Websocket connection was disconnected.');\n            _this.mySock = null;\n            _this.onClosed_();\n        };\n        this.mySock.onmessage = function (m) {\n            _this.handleIncomingFrame(m);\n        };\n        this.mySock.onerror = function (e) {\n            _this.log_('WebSocket error.  Closing connection.');\n            var error = e.message || e.data;\n            if (error) {\n                _this.log_(error);\n            }\n            _this.onClosed_();\n        };\n    };\n    /**\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n     */\n    WebSocketConnection.prototype.start = function () { };\n    WebSocketConnection.forceDisallow = function () {\n        WebSocketConnection.forceDisallow_ = true;\n    };\n    WebSocketConnection.isAvailable = function () {\n        var isOldAndroid = false;\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n                    isOldAndroid = true;\n                }\n            }\n        }\n        return (!isOldAndroid &&\n            WebSocketImpl !== null &&\n            !WebSocketConnection.forceDisallow_);\n    };\n    /**\n     * Returns true if we previously failed to connect with this transport.\n     * @return {boolean}\n     */\n    WebSocketConnection.previouslyFailed = function () {\n        // If our persistent storage is actually only in-memory storage,\n        // we default to assuming that it previously failed to be safe.\n        return (storage_1.PersistentStorage.isInMemoryStorage ||\n            storage_1.PersistentStorage.get('previous_websocket_failure') === true);\n    };\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\n        storage_1.PersistentStorage.remove('previous_websocket_failure');\n    };\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\n        this.frames.push(data);\n        if (this.frames.length == this.totalFrames) {\n            var fullMess = this.frames.join('');\n            this.frames = null;\n            var jsonMess = util_4.jsonEval(fullMess);\n            //handle the message\n            this.onMessage(jsonMess);\n        }\n    };\n    /**\n     * @param {number} frameCount The number of frames we are expecting from the server\n     * @private\n     */\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\n        this.totalFrames = frameCount;\n        this.frames = [];\n    };\n    /**\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n     * @param {!String} data\n     * @return {?String} Any remaining data to be process, or null if there is none\n     * @private\n     */\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\n        util_1.assert(this.frames === null, 'We already have a frame buffer');\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n        if (data.length <= 6) {\n            var frameCount = Number(data);\n            if (!isNaN(frameCount)) {\n                this.handleNewFrameCount_(frameCount);\n                return null;\n            }\n        }\n        this.handleNewFrameCount_(1);\n        return data;\n    };\n    /**\n     * Process a websocket frame that has arrived from the server.\n     * @param mess The frame data\n     */\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\n        if (this.mySock === null)\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n        var data = mess['data'];\n        this.bytesReceived += data.length;\n        this.stats_.incrementCounter('bytes_received', data.length);\n        this.resetKeepAlive();\n        if (this.frames !== null) {\n            // we're buffering\n            this.appendFrame_(data);\n        }\n        else {\n            // try to parse out a frame count, otherwise, assume 1 and process it\n            var remainingData = this.extractFrameCount_(data);\n            if (remainingData !== null) {\n                this.appendFrame_(remainingData);\n            }\n        }\n    };\n    /**\n     * Send a message to the server\n     * @param {Object} data The JSON object to transmit\n     */\n    WebSocketConnection.prototype.send = function (data) {\n        this.resetKeepAlive();\n        var dataStr = util_4.stringify(data);\n        this.bytesSent += dataStr.length;\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\n        //up into multiple pieces if it doesn't fit in one request.\n        var dataSegs = util_2.splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n        //Send the length header\n        if (dataSegs.length > 1) {\n            this.sendString_(String(dataSegs.length));\n        }\n        //Send the actual data in segments.\n        for (var i = 0; i < dataSegs.length; i++) {\n            this.sendString_(dataSegs[i]);\n        }\n    };\n    WebSocketConnection.prototype.shutdown_ = function () {\n        this.isClosed_ = true;\n        if (this.keepaliveTimer) {\n            clearInterval(this.keepaliveTimer);\n            this.keepaliveTimer = null;\n        }\n        if (this.mySock) {\n            this.mySock.close();\n            this.mySock = null;\n        }\n    };\n    WebSocketConnection.prototype.onClosed_ = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is closing itself');\n            this.shutdown_();\n            // since this is an internal close, trigger the close listener\n            if (this.onDisconnect) {\n                this.onDisconnect(this.everConnected_);\n                this.onDisconnect = null;\n            }\n        }\n    };\n    /**\n     * External-facing close handler.\n     * Close the websocket and kill the connection.\n     */\n    WebSocketConnection.prototype.close = function () {\n        if (!this.isClosed_) {\n            this.log_('WebSocket is being closed');\n            this.shutdown_();\n        }\n    };\n    /**\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n     * the last activity.\n     */\n    WebSocketConnection.prototype.resetKeepAlive = function () {\n        var _this = this;\n        clearInterval(this.keepaliveTimer);\n        this.keepaliveTimer = setInterval(function () {\n            //If there has been no websocket activity for a while, send a no-op\n            if (_this.mySock) {\n                _this.sendString_('0');\n            }\n            _this.resetKeepAlive();\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\n    };\n    /**\n     * Send a string over the websocket.\n     *\n     * @param {string} str String to send.\n     * @private\n     */\n    WebSocketConnection.prototype.sendString_ = function (str) {\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n        // calls for some unknown reason.  We treat these as an error and disconnect.\n        // See https://app.asana.com/0/58926111402292/68021340250410\n        try {\n            this.mySock.send(str);\n        }\n        catch (e) {\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\n            setTimeout(this.onClosed_.bind(this), 0);\n        }\n    };\n    /**\n     * Number of response before we consider the connection \"healthy.\"\n     * @type {number}\n     */\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\n    /**\n     * Time to wait for the connection te become healthy before giving up.\n     * @type {number}\n     */\n    WebSocketConnection.healthyTimeout = 30000;\n    return WebSocketConnection;\n}());\nexports.WebSocketConnection = WebSocketConnection;\n\n//# sourceMappingURL=WebSocketConnection.js.map\n"]}]