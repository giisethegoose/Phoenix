["b9aa2f59e140f9a3b866c0fd96e41d07e7f57b30","2940ff73bfbd22a30cc2e229f54cfac3b9db0892",["react","./../../../react-transform-hmr/lib/index.js","react-native","hoist-non-react-statics"],[132,211,2823,2877],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-navigation/src/views/withOrientation.js"],"names":["React","WrappedComponent","isLandscape","isOrientationLandscape","get","state","addEventListener","handleOrientationChange","removeEventListener","props","Component","window","setState","withOrientation","width","height"],"mappings":";;;;;;;IAEYA,K;;;;;;;;;;kBAsBG,UACbC,gBADa,EAEb;AAAA;;AAAA;AAAA;;AAEE,+BAAc;AAAA;;AAAA;;AAAA;;AAGZ,UAAMC,cAAcC,uBAAuB,wBAAWC,GAAX,CAAe,QAAf,CAAvB,CAApB;AACA,YAAKC,KAAL,GAAa,EAAEH,wBAAF,EAAb;AAJY;AAKb;;AAPH;AAAA;AAAA,0CASsB;AAClB,gCAAWI,gBAAX,CAA4B,QAA5B,EAAsC,KAAKC,uBAA3C;AACD;AAXH;AAAA;AAAA,6CAayB;AACrB,gCAAWC,mBAAX,CAA+B,QAA/B,EAAyC,KAAKD,uBAA9C;AACD;AAfH;AAAA;AAAA,+BAsBW;AACP,eAAO,oBAAC,gBAAD,eAAsB,KAAKE,KAA3B,EAAsC,KAAKJ,KAA3C,EAAP;AACD;AAxBH;;AAAA;AAAA,IAC8BL,MAAMU,SADpC;AAAA;;AAAA,SAiBEH,uBAjBF,GAiB4B,iBAA8C;AAAA,UAA3CI,MAA2C,SAA3CA,MAA2C;;AACtE,UAAMT,cAAcC,uBAAuBQ,MAAvB,CAApB;AACA,aAAKC,QAAL,CAAc,EAAEV,wBAAF,EAAd;AACD,KApBH;AAAA;;AA2BA,SAAO,oCAAoBW,eAApB,EAAqCZ,gBAArC,CAAP;AACD,C;;AAnDD;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;YAFYD,K;;;;;;;;;AAiBL,IAAMG,0DAAyB,SAAzBA,sBAAyB;AAAA,MACpCW,KADoC,QACpCA,KADoC;AAAA,MAEpCC,MAFoC,QAEpCA,MAFoC;AAAA,SAGLD,QAAQC,MAHH;AAAA,CAA/B","sourcesContent":["// @flow\n\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\ntype WindowDimensions = {\n  width: number,\n  height: number,\n};\n\ntype InjectedProps = {\n  isLandscape: boolean,\n};\n\ntype State = {\n  isLandscape: boolean,\n};\n\nexport const isOrientationLandscape = ({\n  width,\n  height,\n}: WindowDimensions): boolean => width > height;\n\nexport default function<T: {}>(\n  WrappedComponent: React.ComponentType<T & InjectedProps>\n) {\n  class withOrientation extends React.Component<T, State> {\n    constructor() {\n      super();\n\n      const isLandscape = isOrientationLandscape(Dimensions.get('window'));\n      this.state = { isLandscape };\n    }\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }: { window: WindowDimensions }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(withOrientation, WrappedComponent);\n}\n"]}]