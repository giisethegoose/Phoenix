["d4c646b4e951adaf145c0140d91e1157afa1e390","b5a4eab70ec21f6085deb53894d38600af59ed61",[],[],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/view/Change.js"],"names":["Object","defineProperty","exports","value","Change","type","snapshotNode","childName","oldSnap","prevName","valueChange","snapshot","VALUE","childAddedChange","childKey","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;;AAUA,IAAIC,SAAwB,YAAY;AACpC,WAASA,MAAT,CAAgBC,IAAhB,EAAsBC,YAAtB,EAAoCC,SAApC,EAA+CC,OAA/C,EAAwDC,QAAxD,EAAkE;AAC9D,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACH;;AAKDL,SAAOM,WAAP,GAAqB,UAAUC,QAAV,EAAoB;AACrC,WAAO,IAAIP,MAAJ,CAAWA,OAAOQ,KAAlB,EAAyBD,QAAzB,CAAP;AACH,GAFD;;AAQAP,SAAOS,gBAAP,GAA0B,UAAUC,QAAV,EAAoBH,QAApB,EAA8B;AACpD,WAAO,IAAIP,MAAJ,CAAWA,OAAOW,WAAlB,EAA+BJ,QAA/B,EAAyCG,QAAzC,CAAP;AACH,GAFD;;AAQAV,SAAOY,kBAAP,GAA4B,UAAUF,QAAV,EAAoBH,QAApB,EAA8B;AACtD,WAAO,IAAIP,MAAJ,CAAWA,OAAOa,aAAlB,EAAiCN,QAAjC,EAA2CG,QAA3C,CAAP;AACH,GAFD;;AASAV,SAAOc,kBAAP,GAA4B,UAAUJ,QAAV,EAAoBK,WAApB,EAAiCC,WAAjC,EAA8C;AACtE,WAAO,IAAIhB,MAAJ,CAAWA,OAAOiB,aAAlB,EAAiCF,WAAjC,EAA8CL,QAA9C,EAAwDM,WAAxD,CAAP;AACH,GAFD;;AAQAhB,SAAOkB,gBAAP,GAA0B,UAAUR,QAAV,EAAoBH,QAApB,EAA8B;AACpD,WAAO,IAAIP,MAAJ,CAAWA,OAAOmB,WAAlB,EAA+BZ,QAA/B,EAAyCG,QAAzC,CAAP;AACH,GAFD;;AAKAV,SAAOW,WAAP,GAAqB,aAArB;;AAEAX,SAAOa,aAAP,GAAuB,eAAvB;;AAEAb,SAAOiB,aAAP,GAAuB,eAAvB;;AAEAjB,SAAOmB,WAAP,GAAqB,aAArB;;AAEAnB,SAAOQ,KAAP,GAAe,OAAf;AACA,SAAOR,MAAP;AACH,CA5D2B,EAA5B;AA6DAF,QAAQE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @constructor\n * @struct\n * @param {!string} type The event type\n * @param {!Node} snapshotNode The data\n * @param {string=} childName The name for this child, if it's a child event\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\n * @param {string=} prevName The name for the previous child, if applicable\n */\nvar Change = /** @class */ (function () {\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\n        this.type = type;\n        this.snapshotNode = snapshotNode;\n        this.childName = childName;\n        this.oldSnap = oldSnap;\n        this.prevName = prevName;\n    }\n    /**\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.valueChange = function (snapshot) {\n        return new Change(Change.VALUE, snapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childAddedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childRemovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} newSnapshot\n     * @param {!Node} oldSnapshot\n     * @return {!Change}\n     */\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\n    };\n    /**\n     * @param {string} childKey\n     * @param {!Node} snapshot\n     * @return {!Change}\n     */\n    Change.childMovedChange = function (childKey, snapshot) {\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\n    };\n    //event types\n    /** Event type for a child added */\n    Change.CHILD_ADDED = 'child_added';\n    /** Event type for a child removed */\n    Change.CHILD_REMOVED = 'child_removed';\n    /** Event type for a child changed */\n    Change.CHILD_CHANGED = 'child_changed';\n    /** Event type for a child moved */\n    Change.CHILD_MOVED = 'child_moved';\n    /** Event type for a value change */\n    Change.VALUE = 'value';\n    return Change;\n}());\nexports.Change = Change;\n\n//# sourceMappingURL=Change.js.map\n"]}]