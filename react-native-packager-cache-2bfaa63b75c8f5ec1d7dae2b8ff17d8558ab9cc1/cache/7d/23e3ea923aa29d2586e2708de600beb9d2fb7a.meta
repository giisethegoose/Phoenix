["af955cc68b3078ed4a08a49d7d685a2ec8d5eaa1","282efb5179054d21d5d0bcf68e45a05c44ca6443",["./hash"],[638],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/util/dist/cjs/src/sha1.js"],"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","hash_1","require","Sha1","_super","_this","call","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","i","reset","compress_","buf","opt_offset","W","charCodeAt","t","a","c","e","f","k","update","bytes","opt_length","undefined","length","lengthMinusBlock","n","inbuf","digest","totalBits","j","Hash"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_1 = require(\"./hash\");\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {Hash}\n * @final\n * @struct\n */\nvar Sha1 = /** @class */ (function (_super) {\n    __extends(Sha1, _super);\n    function Sha1() {\n        var _this = _super.call(this) || this;\n        /**\n         * Holds the previous values of accumulated variables a-e in the compress_\n         * function.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.chain_ = [];\n        /**\n         * A buffer holding the partially computed hash result.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.buf_ = [];\n        /**\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n         * as the message schedule in the docs.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.W_ = [];\n        /**\n         * Contains data needed to pad messages less than 64 bytes.\n         * @type {!Array<number>}\n         * @private\n         */\n        _this.pad_ = [];\n        /**\n         * @private {number}\n         */\n        _this.inbuf_ = 0;\n        /**\n         * @private {number}\n         */\n        _this.total_ = 0;\n        _this.blockSize = 512 / 8;\n        _this.pad_[0] = 128;\n        for (var i = 1; i < _this.blockSize; ++i) {\n            _this.pad_[i] = 0;\n        }\n        _this.reset();\n        return _this;\n    }\n    Sha1.prototype.reset = function () {\n        this.chain_[0] = 0x67452301;\n        this.chain_[1] = 0xefcdab89;\n        this.chain_[2] = 0x98badcfe;\n        this.chain_[3] = 0x10325476;\n        this.chain_[4] = 0xc3d2e1f0;\n        this.inbuf_ = 0;\n        this.total_ = 0;\n    };\n    /**\n     * Internal compress helper function.\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n     * @param {number=} opt_offset Offset of the block in the buffer.\n     * @private\n     */\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\n        if (!opt_offset) {\n            opt_offset = 0;\n        }\n        var W = this.W_;\n        // get 16 big endian words\n        if (typeof buf === 'string') {\n            for (var i = 0; i < 16; i++) {\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n                // have a bug that turns the post-increment ++ operator into pre-increment\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\n                // correctness and which is affected by this bug, so I've removed all uses\n                // of post-increment ++ in which the result value is used.  We can revert\n                // this change once the Safari bug\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n                // most clients have been updated.\n                W[i] =\n                    (buf.charCodeAt(opt_offset) << 24) |\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\n                        buf.charCodeAt(opt_offset + 3);\n                opt_offset += 4;\n            }\n        }\n        else {\n            for (var i = 0; i < 16; i++) {\n                W[i] =\n                    (buf[opt_offset] << 24) |\n                        (buf[opt_offset + 1] << 16) |\n                        (buf[opt_offset + 2] << 8) |\n                        buf[opt_offset + 3];\n                opt_offset += 4;\n            }\n        }\n        // expand to 80 words\n        for (var i = 16; i < 80; i++) {\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n        }\n        var a = this.chain_[0];\n        var b = this.chain_[1];\n        var c = this.chain_[2];\n        var d = this.chain_[3];\n        var e = this.chain_[4];\n        var f, k;\n        // TODO(user): Try to unroll this loop to speed up the computation.\n        for (var i = 0; i < 80; i++) {\n            if (i < 40) {\n                if (i < 20) {\n                    f = d ^ (b & (c ^ d));\n                    k = 0x5a827999;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0x6ed9eba1;\n                }\n            }\n            else {\n                if (i < 60) {\n                    f = (b & c) | (d & (b | c));\n                    k = 0x8f1bbcdc;\n                }\n                else {\n                    f = b ^ c ^ d;\n                    k = 0xca62c1d6;\n                }\n            }\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n            e = d;\n            d = c;\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n            b = a;\n            a = t;\n        }\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n    };\n    Sha1.prototype.update = function (bytes, opt_length) {\n        // TODO(johnlenz): tighten the function signature and remove this check\n        if (bytes == null) {\n            return;\n        }\n        if (opt_length === undefined) {\n            opt_length = bytes.length;\n        }\n        var lengthMinusBlock = opt_length - this.blockSize;\n        var n = 0;\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\n        var buf = this.buf_;\n        var inbuf = this.inbuf_;\n        // The outer while loop should execute at most twice.\n        while (n < opt_length) {\n            // When we have no data in the block to top up, we can directly process the\n            // input buffer (assuming it contains sufficient data). This gives ~25%\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n            // the data is provided in large chunks (or in multiples of 64 bytes).\n            if (inbuf == 0) {\n                while (n <= lengthMinusBlock) {\n                    this.compress_(bytes, n);\n                    n += this.blockSize;\n                }\n            }\n            if (typeof bytes === 'string') {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes.charCodeAt(n);\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n            else {\n                while (n < opt_length) {\n                    buf[inbuf] = bytes[n];\n                    ++inbuf;\n                    ++n;\n                    if (inbuf == this.blockSize) {\n                        this.compress_(buf);\n                        inbuf = 0;\n                        // Jump to the outer loop so we use the full-block optimization.\n                        break;\n                    }\n                }\n            }\n        }\n        this.inbuf_ = inbuf;\n        this.total_ += opt_length;\n    };\n    /** @override */\n    Sha1.prototype.digest = function () {\n        var digest = [];\n        var totalBits = this.total_ * 8;\n        // Add pad 0x80 0x00*.\n        if (this.inbuf_ < 56) {\n            this.update(this.pad_, 56 - this.inbuf_);\n        }\n        else {\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n        }\n        // Add # bits.\n        for (var i = this.blockSize - 1; i >= 56; i--) {\n            this.buf_[i] = totalBits & 255;\n            totalBits /= 256; // Don't use bit-shifting here!\n        }\n        this.compress_(this.buf_);\n        var n = 0;\n        for (var i = 0; i < 5; i++) {\n            for (var j = 24; j >= 0; j -= 8) {\n                digest[n] = (this.chain_[i] >> j) & 255;\n                ++n;\n            }\n        }\n        return digest;\n    };\n    return Sha1;\n}(hash_1.Hash));\nexports.Sha1 = Sha1;\n\n//# sourceMappingURL=sha1.js.map\n"]}]