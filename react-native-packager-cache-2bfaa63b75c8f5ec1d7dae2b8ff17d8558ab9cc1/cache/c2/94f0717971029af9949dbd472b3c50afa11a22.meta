["7c037d916b37aaf18dac55d78ab602e8c567f679","650bc4065692381fca0a9fab08847feaaed63eb8",["./DOMStorageWrapper","./MemoryStorage"],[112,166],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/storage/storage.js"],"names":["Object","defineProperty","exports","value","DOMStorageWrapper_1","require","MemoryStorage_1","createStoragefor","domStorageName","window","domStorage","setItem","removeItem","DOMStorageWrapper","e","MemoryStorage","PersistentStorage","SessionStorage"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,sBAAsBC,QAAQ,qBAAR,CAA1B;AACA,IAAIC,kBAAkBD,QAAQ,iBAAR,CAAtB;;AAUA,IAAIE,mBAAmB,SAAnBA,gBAAmB,CAAUC,cAAV,EAA0B;AAC7C,QAAI;AAGA,YAAI,OAAOC,MAAP,KAAkB,WAAlB,IACA,OAAOA,OAAOD,cAAP,CAAP,KAAkC,WADtC,EACmD;AAE/C,gBAAIE,aAAaD,OAAOD,cAAP,CAAjB;AACAE,uBAAWC,OAAX,CAAmB,mBAAnB,EAAwC,OAAxC;AACAD,uBAAWE,UAAX,CAAsB,mBAAtB;AACA,mBAAO,IAAIR,oBAAoBS,iBAAxB,CAA0CH,UAA1C,CAAP;AACH;AACJ,KAXD,CAYA,OAAOI,CAAP,EAAU,CAAG;;AAGb,WAAO,IAAIR,gBAAgBS,aAApB,EAAP;AACH,CAjBD;;AAmBAb,QAAQc,iBAAR,GAA4BT,iBAAiB,cAAjB,CAA5B;;AAEAL,QAAQe,cAAR,GAAyBV,iBAAiB,gBAAjB,CAAzB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DOMStorageWrapper_1 = require(\"./DOMStorageWrapper\");\nvar MemoryStorage_1 = require(\"./MemoryStorage\");\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param {string} domStorageName Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @return {?} Turning off type information until a common interface is defined.\n */\nvar createStoragefor = function (domStorageName) {\n    try {\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n        // so it must be inside the try/catch.\n        if (typeof window !== 'undefined' &&\n            typeof window[domStorageName] !== 'undefined') {\n            // Need to test cache. Just because it's here doesn't mean it works\n            var domStorage = window[domStorageName];\n            domStorage.setItem('firebase:sentinel', 'cache');\n            domStorage.removeItem('firebase:sentinel');\n            return new DOMStorageWrapper_1.DOMStorageWrapper(domStorage);\n        }\n    }\n    catch (e) { }\n    // Failed to create wrapper.  Just return in-memory storage.\n    // TODO: log?\n    return new MemoryStorage_1.MemoryStorage();\n};\n/** A storage object that lasts across sessions */\nexports.PersistentStorage = createStoragefor('localStorage');\n/** A storage object that only lasts one session */\nexports.SessionStorage = createStoragefor('sessionStorage');\n\n//# sourceMappingURL=storage.js.map\n"]}]