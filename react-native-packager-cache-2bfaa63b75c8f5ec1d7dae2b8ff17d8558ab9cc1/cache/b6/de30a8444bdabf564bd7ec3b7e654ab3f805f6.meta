["5b8bea64b8b49c77c07acd8a77f5a9510b91a99a","46a31651f07c80a086a87c28fc342a0ec5044026",["@firebase/util","./storage/storage","../realtime/Constants"],[99,139,182,230],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/RepoInfo.js"],"names":["Object","defineProperty","exports","value","util_1","require","util_2","storage_1","Constants_1","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","toLowerCase","domain","substr","indexOf","internalHost","PersistentStorage","get","prototype","needsQueryParam","isCacheableHost","isDemoHost","isCustomHost","updateHost","newHost","set","connectionURL","type","params","assert","connURL","WEBSOCKET","LONG_POLLING","Error","pairs","forEach","key","push","join","toString","str","toURLString"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"@firebase/util\");\nvar storage_1 = require(\"./storage/storage\");\nvar Constants_1 = require(\"../realtime/Constants\");\n/**\n * A class that holds metadata about a Repo object\n *\n * @constructor\n */\nvar RepoInfo = /** @class */ (function () {\n    /**\n     * @param {string} host Hostname portion of the url for the repo\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\n     * @param {string} namespace The namespace represented by the repo\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\n     * @param {string=} persistenceKey Override the default session persistence storage key\n     */\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\n        if (persistenceKey === void 0) { persistenceKey = ''; }\n        this.secure = secure;\n        this.namespace = namespace;\n        this.webSocketOnly = webSocketOnly;\n        this.persistenceKey = persistenceKey;\n        this.host = host.toLowerCase();\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\n        this.internalHost = storage_1.PersistentStorage.get('host:' + host) || this.host;\n    }\n    RepoInfo.prototype.needsQueryParam = function () {\n        return this.host !== this.internalHost;\n    };\n    RepoInfo.prototype.isCacheableHost = function () {\n        return this.internalHost.substr(0, 2) === 's-';\n    };\n    RepoInfo.prototype.isDemoHost = function () {\n        return this.domain === 'firebaseio-demo.com';\n    };\n    RepoInfo.prototype.isCustomHost = function () {\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\n    };\n    RepoInfo.prototype.updateHost = function (newHost) {\n        if (newHost !== this.internalHost) {\n            this.internalHost = newHost;\n            if (this.isCacheableHost()) {\n                storage_1.PersistentStorage.set('host:' + this.host, this.internalHost);\n            }\n        }\n    };\n    /**\n     * Returns the websocket URL for this repo\n     * @param {string} type of connection\n     * @param {Object} params list\n     * @return {string} The URL for this repo\n     */\n    RepoInfo.prototype.connectionURL = function (type, params) {\n        util_1.assert(typeof type === 'string', 'typeof type must == string');\n        util_1.assert(typeof params === 'object', 'typeof params must == object');\n        var connURL;\n        if (type === Constants_1.WEBSOCKET) {\n            connURL =\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\n        }\n        else if (type === Constants_1.LONG_POLLING) {\n            connURL =\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\n        }\n        else {\n            throw new Error('Unknown connection type: ' + type);\n        }\n        if (this.needsQueryParam()) {\n            params['ns'] = this.namespace;\n        }\n        var pairs = [];\n        util_2.forEach(params, function (key, value) {\n            pairs.push(key + '=' + value);\n        });\n        return connURL + pairs.join('&');\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toString = function () {\n        var str = this.toURLString();\n        if (this.persistenceKey) {\n            str += '<' + this.persistenceKey + '>';\n        }\n        return str;\n    };\n    /** @return {string} */\n    RepoInfo.prototype.toURLString = function () {\n        return (this.secure ? 'https://' : 'http://') + this.host;\n    };\n    return RepoInfo;\n}());\nexports.RepoInfo = RepoInfo;\n\n//# sourceMappingURL=RepoInfo.js.map\n"]}]