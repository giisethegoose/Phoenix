["205bf966a0e54002dd10197ddd2810a063f1ec0c","f8e5f50dd93c5c3b55e344f1ee1959d5c9f7d067",["./util/ServerValues","./snap/nodeFromJSON","./util/Path","./SparseSnapshotTree","./SyncTree","./SnapshotHolder","@firebase/util","./util/util","./AuthTokenProvider","./stats/StatsManager","./stats/StatsReporter","./stats/StatsListener","./view/EventQueue","./PersistentConnection","./ReadonlyRestClient","../api/Database"],[107,160,205,256,306,352,394,434,471,524,577,632,688,741,800,862,912],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/Repo.js"],"names":["Object","defineProperty","exports","value","ServerValues_1","require","nodeFromJSON_1","Path_1","SparseSnapshotTree_1","SyncTree_1","SnapshotHolder_1","util_1","util_2","util_3","AuthTokenProvider_1","StatsManager_1","StatsReporter_1","StatsListener_1","EventQueue_1","PersistentConnection_1","ReadonlyRestClient_1","Database_1","INTERRUPT_REASON","Repo","repoInfo_","forceRestClient","app","_this","dataUpdateCount","statsListener_","eventQueue_","EventQueue","nextWriteId_","interceptServerDataCallback_","onDisconnect_","SparseSnapshotTree","persistentConnection_","authTokenProvider","AuthTokenProvider","stats_","StatsManager","getCollection","beingCrawled","server_","ReadonlyRestClient","onDataUpdate_","bind","setTimeout","onConnectStatus_","authOverride","options","Error","stringify","e","PersistentConnection","onServerInfoUpdate_","addTokenChangeListener","token","refreshAuthToken","statsReporter_","getOrCreateReporter","StatsReporter","transactions_init_","infoData_","SnapshotHolder","infoSyncTree_","SyncTree","startListening","query","tag","currentHashFn","onComplete","infoEvents","node","getNode","path","isEmpty","applyServerOverwrite","stopListening","updateInfo_","serverSyncTree_","listen","status","data","events","raiseEventsForChangedPath","unlisten","prototype","toString","secure","host","name","namespace","serverTime","offsetNode","Path","offset","val","Date","getTime","generateServerValues","generateWithValues","timestamp","pathString","isMerge","taggedChildren","map","raw","nodeFromJSON","applyTaggedQueryMerge","taggedSnap","applyTaggedQueryOverwrite","changedChildren","applyServerMerge","snap","affectedPath","length","rerunTransactions_","interceptServerData_","callback","connectStatus","runOnDisconnectEvents_","updates","each","key","newNode","updateSnapshot","getNextWriteId_","setWithPriority","newVal","newPriority","log_","priority","serverValues","newNodeUnresolved","resolveDeferredValueSnapshot","writeId","applyUserOverwrite","queueEvents","put","errorReason","success","warn","clearEvents","ackUserWrite","callOnCompleteCallback","abortTransactions_","update","childrenToMerge","empty","forEach","changedKey","changedValue","writeId_1","applyUserMerge","merge","changedPath","child","log","resolvedOnDisconnectTree","resolveDeferredValueTree","forEachTree","Empty","concat","onDisconnectCancel","forget","onDisconnectSet","onDisconnectPut","remember","onDisconnectSetWithPriority","onDisconnectUpdate","onDisconnectMerge","childName","childNode","newChildNode","addEventCallbackForQuery","eventRegistration","getFront","addEventRegistration","raiseEventsAtPath","removeEventCallbackForQuery","removeEventRegistration","interrupt","resume","stats","showDelta","console","StatsListener","get","longestName","keys","reduce","previousValue","currentValue","Math","max","stat","i","statsIncrementCounter","metric","incrementCounter","includeStat","var_args","_i","arguments","prefix","id","apply","exceptionGuard","code","toUpperCase","message","error","__database","Database","enumerable","configurable"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,iBAAiBC,QAAQ,qBAAR,CAArB;AACA,IAAIC,iBAAiBD,QAAQ,qBAAR,CAArB;AACA,IAAIE,SAASF,QAAQ,aAAR,CAAb;AACA,IAAIG,uBAAuBH,QAAQ,sBAAR,CAA3B;AACA,IAAII,aAAaJ,QAAQ,YAAR,CAAjB;AACA,IAAIK,mBAAmBL,QAAQ,kBAAR,CAAvB;AACA,IAAIM,SAASN,OAAT,kBAAJ;AACA,IAAIO,SAASP,QAAQ,aAAR,CAAb;AACA,IAAIQ,SAASR,OAAT,kBAAJ;AACA,IAAIS,sBAAsBT,QAAQ,qBAAR,CAA1B;AACA,IAAIU,iBAAiBV,QAAQ,sBAAR,CAArB;AACA,IAAIW,kBAAkBX,QAAQ,uBAAR,CAAtB;AACA,IAAIY,kBAAkBZ,QAAQ,uBAAR,CAAtB;AACA,IAAIa,eAAeb,QAAQ,mBAAR,CAAnB;AACA,IAAIc,yBAAyBd,QAAQ,wBAAR,CAA7B;AACA,IAAIe,uBAAuBf,QAAQ,sBAAR,CAA3B;AACA,IAAIgB,aAAahB,QAAQ,iBAAR,CAAjB;AACA,IAAIiB,mBAAmB,gBAAvB;;AAIA,IAAIC,OAAsB,YAAY;AAMlC,aAASA,IAAT,CAAcC,SAAd,EAAyBC,eAAzB,EAA0CC,GAA1C,EAA+C;AAC3C,YAAIC,QAAQ,IAAZ;AACA,aAAKH,SAAL,GAAiBA,SAAjB;AACA,aAAKE,GAAL,GAAWA,GAAX;AACA,aAAKE,eAAL,GAAuB,CAAvB;AACA,aAAKC,cAAL,GAAsB,IAAtB;AACA,aAAKC,WAAL,GAAmB,IAAIZ,aAAaa,UAAjB,EAAnB;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,4BAAL,GAAoC,IAApC;;AAEA,aAAKC,aAAL,GAAqB,IAAI1B,qBAAqB2B,kBAAzB,EAArB;;AAKA,aAAKC,qBAAL,GAA6B,IAA7B;;AAEA,YAAIC,oBAAoB,IAAIvB,oBAAoBwB,iBAAxB,CAA0CZ,GAA1C,CAAxB;AACA,aAAKa,MAAL,GAAcxB,eAAeyB,YAAf,CAA4BC,aAA5B,CAA0CjB,SAA1C,CAAd;AACA,YAAIC,mBAAmBb,OAAO8B,YAAP,EAAvB,EAA8C;AAC1C,iBAAKC,OAAL,GAAe,IAAIvB,qBAAqBwB,kBAAzB,CAA4C,KAAKpB,SAAjD,EAA4D,KAAKqB,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAA5D,EAA2FT,iBAA3F,CAAf;;AAEAU,uBAAW,KAAKC,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,EAAiC,IAAjC,CAAX,EAAmD,CAAnD;AACH,SAJD,MAKK;AACD,gBAAIG,eAAevB,IAAIwB,OAAJ,CAAY,8BAAZ,CAAnB;;AAEA,gBAAI,OAAOD,YAAP,KAAwB,WAAxB,IAAuCA,iBAAiB,IAA5D,EAAkE;AAC9D,oBAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AAClC,0BAAM,IAAIE,KAAJ,CAAU,oEAAV,CAAN;AACH;AACD,oBAAI;AACAxC,2BAAOyC,SAAP,CAAiBH,YAAjB;AACH,iBAFD,CAGA,OAAOI,CAAP,EAAU;AACN,0BAAM,IAAIF,KAAJ,CAAU,oCAAoCE,CAA9C,CAAN;AACH;AACJ;AACD,iBAAKjB,qBAAL,GAA6B,IAAIjB,uBAAuBmC,oBAA3B,CAAgD,KAAK9B,SAArD,EAAgE,KAAKqB,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAhE,EAA+F,KAAKE,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAA/F,EAAiI,KAAKS,mBAAL,CAAyBT,IAAzB,CAA8B,IAA9B,CAAjI,EAAsKT,iBAAtK,EAAyLY,YAAzL,CAA7B;AACA,iBAAKN,OAAL,GAAe,KAAKP,qBAApB;AACH;AACDC,0BAAkBmB,sBAAlB,CAAyC,UAAUC,KAAV,EAAiB;AACtD9B,kBAAMgB,OAAN,CAAce,gBAAd,CAA+BD,KAA/B;AACH,SAFD;;AAKA,aAAKE,cAAL,GAAsB5C,eAAeyB,YAAf,CAA4BoB,mBAA5B,CAAgDpC,SAAhD,EAA2D,YAAY;AAAE,mBAAO,IAAIR,gBAAgB6C,aAApB,CAAkClC,MAAMY,MAAxC,EAAgDZ,MAAMgB,OAAtD,CAAP;AAAwE,SAAjJ,CAAtB;AACA,aAAKmB,kBAAL;;AAEA,aAAKC,SAAL,GAAiB,IAAIrD,iBAAiBsD,cAArB,EAAjB;AACA,aAAKC,aAAL,GAAqB,IAAIxD,WAAWyD,QAAf,CAAwB;AACzCC,4BAAgB,wBAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,aAAtB,EAAqCC,UAArC,EAAiD;AAC7D,oBAAIC,aAAa,EAAjB;AACA,oBAAIC,OAAO9C,MAAMoC,SAAN,CAAgBW,OAAhB,CAAwBN,MAAMO,IAA9B,CAAX;;AAGA,oBAAI,CAACF,KAAKG,OAAL,EAAL,EAAqB;AACjBJ,iCAAa7C,MAAMsC,aAAN,CAAoBY,oBAApB,CAAyCT,MAAMO,IAA/C,EAAqDF,IAArD,CAAb;AACA1B,+BAAW,YAAY;AACnBwB,mCAAW,IAAX;AACH,qBAFD,EAEG,CAFH;AAGH;AACD,uBAAOC,UAAP;AACH,aAbwC;AAczCM,2BAAe,yBAAY,CAAG;AAdW,SAAxB,CAArB;AAgBA,aAAKC,WAAL,CAAiB,WAAjB,EAA8B,KAA9B;AACA,aAAKC,eAAL,GAAuB,IAAIvE,WAAWyD,QAAf,CAAwB;AAC3CC,4BAAgB,wBAAUC,KAAV,EAAiBC,GAAjB,EAAsBC,aAAtB,EAAqCC,UAArC,EAAiD;AAC7D5C,sBAAMgB,OAAN,CAAcsC,MAAd,CAAqBb,KAArB,EAA4BE,aAA5B,EAA2CD,GAA3C,EAAgD,UAAUa,MAAV,EAAkBC,IAAlB,EAAwB;AACpE,wBAAIC,SAASb,WAAWW,MAAX,EAAmBC,IAAnB,CAAb;AACAxD,0BAAMG,WAAN,CAAkBuD,yBAAlB,CAA4CjB,MAAMO,IAAlD,EAAwDS,MAAxD;AACH,iBAHD;;AAKA,uBAAO,EAAP;AACH,aAR0C;AAS3CN,2BAAe,uBAAUV,KAAV,EAAiBC,GAAjB,EAAsB;AACjC1C,sBAAMgB,OAAN,CAAc2C,QAAd,CAAuBlB,KAAvB,EAA8BC,GAA9B;AACH;AAX0C,SAAxB,CAAvB;AAaH;;AAID9C,SAAKgE,SAAL,CAAeC,QAAf,GAA0B,YAAY;AAClC,eAAQ,CAAC,KAAKhE,SAAL,CAAeiE,MAAf,GAAwB,UAAxB,GAAqC,SAAtC,IAAmD,KAAKjE,SAAL,CAAekE,IAA1E;AACH,KAFD;;AAMAnE,SAAKgE,SAAL,CAAeI,IAAf,GAAsB,YAAY;AAC9B,eAAO,KAAKnE,SAAL,CAAeoE,SAAtB;AACH,KAFD;;AAMArE,SAAKgE,SAAL,CAAeM,UAAf,GAA4B,YAAY;AACpC,YAAIC,aAAa,KAAK/B,SAAL,CAAeW,OAAf,CAAuB,IAAInE,OAAOwF,IAAX,CAAgB,wBAAhB,CAAvB,CAAjB;AACA,YAAIC,SAASF,WAAWG,GAAX,MAAoB,CAAjC;AACA,eAAO,IAAIC,IAAJ,GAAWC,OAAX,KAAuBH,MAA9B;AACH,KAJD;;AASAzE,SAAKgE,SAAL,CAAea,oBAAf,GAAsC,YAAY;AAC9C,eAAOhG,eAAeiG,kBAAf,CAAkC;AACrCC,uBAAW,KAAKT,UAAL;AAD0B,SAAlC,CAAP;AAGH,KAJD;;AAcAtE,SAAKgE,SAAL,CAAe1C,aAAf,GAA+B,UAAU0D,UAAV,EAAsBpB,IAAtB,EAA4BqB,OAA5B,EAAqCnC,GAArC,EAA0C;AAErE,aAAKzC,eAAL;AACA,YAAI+C,OAAO,IAAIpE,OAAOwF,IAAX,CAAgBQ,UAAhB,CAAX;AACApB,eAAO,KAAKlD,4BAAL,GACD,KAAKA,4BAAL,CAAkCsE,UAAlC,EAA8CpB,IAA9C,CADC,GAEDA,IAFN;AAGA,YAAIC,SAAS,EAAb;AACA,YAAIf,GAAJ,EAAS;AACL,gBAAImC,OAAJ,EAAa;AACT,oBAAIC,iBAAiB5F,OAAO6F,GAAP,CAAWvB,IAAX,EAAiB,UAAUwB,GAAV,EAAe;AACjD,2BAAOrG,eAAesG,YAAf,CAA4BD,GAA5B,CAAP;AACH,iBAFoB,CAArB;AAGAvB,yBAAS,KAAKJ,eAAL,CAAqB6B,qBAArB,CAA2ClC,IAA3C,EAAiD8B,cAAjD,EAAiEpC,GAAjE,CAAT;AACH,aALD,MAMK;AACD,oBAAIyC,aAAaxG,eAAesG,YAAf,CAA4BzB,IAA5B,CAAjB;AACAC,yBAAS,KAAKJ,eAAL,CAAqB+B,yBAArB,CAA+CpC,IAA/C,EAAqDmC,UAArD,EAAiEzC,GAAjE,CAAT;AACH;AACJ,SAXD,MAYK,IAAImC,OAAJ,EAAa;AACd,gBAAIQ,kBAAkBnG,OAAO6F,GAAP,CAAWvB,IAAX,EAAiB,UAAUwB,GAAV,EAAe;AAClD,uBAAOrG,eAAesG,YAAf,CAA4BD,GAA5B,CAAP;AACH,aAFqB,CAAtB;AAGAvB,qBAAS,KAAKJ,eAAL,CAAqBiC,gBAArB,CAAsCtC,IAAtC,EAA4CqC,eAA5C,CAAT;AACH,SALI,MAMA;AACD,gBAAIE,OAAO5G,eAAesG,YAAf,CAA4BzB,IAA5B,CAAX;AACAC,qBAAS,KAAKJ,eAAL,CAAqBH,oBAArB,CAA0CF,IAA1C,EAAgDuC,IAAhD,CAAT;AACH;AACD,YAAIC,eAAexC,IAAnB;AACA,YAAIS,OAAOgC,MAAP,GAAgB,CAApB,EAAuB;AAGnBD,2BAAe,KAAKE,kBAAL,CAAwB1C,IAAxB,CAAf;AACH;AACD,aAAK7C,WAAL,CAAiBuD,yBAAjB,CAA2C8B,YAA3C,EAAyD/B,MAAzD;AACH,KArCD;;AA2CA7D,SAAKgE,SAAL,CAAe+B,oBAAf,GAAsC,UAAUC,QAAV,EAAoB;AACtD,aAAKtF,4BAAL,GAAoCsF,QAApC;AACH,KAFD;;AAOAhG,SAAKgE,SAAL,CAAevC,gBAAf,GAAkC,UAAUwE,aAAV,EAAyB;AACvD,aAAKzC,WAAL,CAAiB,WAAjB,EAA8ByC,aAA9B;AACA,YAAIA,kBAAkB,KAAtB,EAA6B;AACzB,iBAAKC,sBAAL;AACH;AACJ,KALD;;AAUAlG,SAAKgE,SAAL,CAAehC,mBAAf,GAAqC,UAAUmE,OAAV,EAAmB;AACpD,YAAI/F,QAAQ,IAAZ;AACAf,eAAO+G,IAAP,CAAYD,OAAZ,EAAqB,UAAUvH,KAAV,EAAiByH,GAAjB,EAAsB;AACvCjG,kBAAMoD,WAAN,CAAkB6C,GAAlB,EAAuBzH,KAAvB;AACH,SAFD;AAGH,KALD;;AAYAoB,SAAKgE,SAAL,CAAeR,WAAf,GAA6B,UAAUwB,UAAV,EAAsBpG,KAAtB,EAA6B;AACtD,YAAIwE,OAAO,IAAIpE,OAAOwF,IAAX,CAAgB,YAAYQ,UAA5B,CAAX;AACA,YAAIsB,UAAUvH,eAAesG,YAAf,CAA4BzG,KAA5B,CAAd;AACA,aAAK4D,SAAL,CAAe+D,cAAf,CAA8BnD,IAA9B,EAAoCkD,OAApC;AACA,YAAIzC,SAAS,KAAKnB,aAAL,CAAmBY,oBAAnB,CAAwCF,IAAxC,EAA8CkD,OAA9C,CAAb;AACA,aAAK/F,WAAL,CAAiBuD,yBAAjB,CAA2CV,IAA3C,EAAiDS,MAAjD;AACH,KAND;;AAWA7D,SAAKgE,SAAL,CAAewC,eAAf,GAAiC,YAAY;AACzC,eAAO,KAAK/F,YAAL,EAAP;AACH,KAFD;;AASAT,SAAKgE,SAAL,CAAeyC,eAAf,GAAiC,UAAUrD,IAAV,EAAgBsD,MAAhB,EAAwBC,WAAxB,EAAqC3D,UAArC,EAAiD;AAC9E,YAAI5C,QAAQ,IAAZ;AACA,aAAKwG,IAAL,CAAU,KAAV,EAAiB;AACbxD,kBAAMA,KAAKa,QAAL,EADO;AAEbrF,mBAAO8H,MAFM;AAGbG,sBAAUF;AAHG,SAAjB;;AAOA,YAAIG,eAAe,KAAKjC,oBAAL,EAAnB;AACA,YAAIkC,oBAAoBhI,eAAesG,YAAf,CAA4BqB,MAA5B,EAAoCC,WAApC,CAAxB;AACA,YAAIL,UAAUzH,eAAemI,4BAAf,CAA4CD,iBAA5C,EAA+DD,YAA/D,CAAd;AACA,YAAIG,UAAU,KAAKT,eAAL,EAAd;AACA,YAAI3C,SAAS,KAAKJ,eAAL,CAAqByD,kBAArB,CAAwC9D,IAAxC,EAA8CkD,OAA9C,EAAuDW,OAAvD,EAAgE,IAAhE,CAAb;AACA,aAAK1G,WAAL,CAAiB4G,WAAjB,CAA6BtD,MAA7B;AACA,aAAKzC,OAAL,CAAagG,GAAb,CAAiBhE,KAAKa,QAAL,EAAjB,EAAkC8C,kBAAkBrC,GAAlB,CAAkC,IAAlC,CAAlC,EAA2E,UAAUf,MAAV,EAAkB0D,WAAlB,EAA+B;AACtG,gBAAIC,UAAU3D,WAAW,IAAzB;AACA,gBAAI,CAAC2D,OAAL,EAAc;AACVjI,uBAAOkI,IAAP,CAAY,YAAYnE,IAAZ,GAAmB,WAAnB,GAAiCO,MAA7C;AACH;AACD,gBAAI6D,cAAcpH,MAAMqD,eAAN,CAAsBgE,YAAtB,CAAmCR,OAAnC,EAA4C,CAACK,OAA7C,CAAlB;AACAlH,kBAAMG,WAAN,CAAkBuD,yBAAlB,CAA4CV,IAA5C,EAAkDoE,WAAlD;AACApH,kBAAMsH,sBAAN,CAA6B1E,UAA7B,EAAyCW,MAAzC,EAAiD0D,WAAjD;AACH,SARD;AASA,YAAIzB,eAAe,KAAK+B,kBAAL,CAAwBvE,IAAxB,CAAnB;AACA,aAAK0C,kBAAL,CAAwBF,YAAxB;;AAEA,aAAKrF,WAAL,CAAiBuD,yBAAjB,CAA2C8B,YAA3C,EAAyD,EAAzD;AACH,KA5BD;;AAkCA5F,SAAKgE,SAAL,CAAe4D,MAAf,GAAwB,UAAUxE,IAAV,EAAgByE,eAAhB,EAAiC7E,UAAjC,EAA6C;AACjE,YAAI5C,QAAQ,IAAZ;AACA,aAAKwG,IAAL,CAAU,QAAV,EAAoB,EAAExD,MAAMA,KAAKa,QAAL,EAAR,EAAyBrF,OAAOiJ,eAAhC,EAApB;;AAEA,YAAIC,QAAQ,IAAZ;AACA,YAAIhB,eAAe,KAAKjC,oBAAL,EAAnB;AACA,YAAIY,kBAAkB,EAAtB;AACAnG,eAAOyI,OAAP,CAAeF,eAAf,EAAgC,UAAUG,UAAV,EAAsBC,YAAtB,EAAoC;AAChEH,oBAAQ,KAAR;AACA,gBAAIf,oBAAoBhI,eAAesG,YAAf,CAA4B4C,YAA5B,CAAxB;AACAxC,4BAAgBuC,UAAhB,IAA8BnJ,eAAemI,4BAAf,CAA4CD,iBAA5C,EAA+DD,YAA/D,CAA9B;AACH,SAJD;AAKA,YAAI,CAACgB,KAAL,EAAY;AACR,gBAAII,YAAY,KAAK1B,eAAL,EAAhB;AACA,gBAAI3C,SAAS,KAAKJ,eAAL,CAAqB0E,cAArB,CAAoC/E,IAApC,EAA0CqC,eAA1C,EAA2DyC,SAA3D,CAAb;AACA,iBAAK3H,WAAL,CAAiB4G,WAAjB,CAA6BtD,MAA7B;AACA,iBAAKzC,OAAL,CAAagH,KAAb,CAAmBhF,KAAKa,QAAL,EAAnB,EAAoC4D,eAApC,EAAqD,UAAUlE,MAAV,EAAkB0D,WAAlB,EAA+B;AAChF,oBAAIC,UAAU3D,WAAW,IAAzB;AACA,oBAAI,CAAC2D,OAAL,EAAc;AACVjI,2BAAOkI,IAAP,CAAY,eAAenE,IAAf,GAAsB,WAAtB,GAAoCO,MAAhD;AACH;AACD,oBAAI6D,cAAcpH,MAAMqD,eAAN,CAAsBgE,YAAtB,CAAmCS,SAAnC,EAA8C,CAACZ,OAA/C,CAAlB;AACA,oBAAI1B,eAAe4B,YAAY3B,MAAZ,GAAqB,CAArB,GAAyBzF,MAAM0F,kBAAN,CAAyB1C,IAAzB,CAAzB,GAA0DA,IAA7E;AACAhD,sBAAMG,WAAN,CAAkBuD,yBAAlB,CAA4C8B,YAA5C,EAA0D4B,WAA1D;AACApH,sBAAMsH,sBAAN,CAA6B1E,UAA7B,EAAyCW,MAAzC,EAAiD0D,WAAjD;AACH,aATD;AAUA/H,mBAAOyI,OAAP,CAAeF,eAAf,EAAgC,UAAUQ,WAAV,EAAuB;AACnD,oBAAIzC,eAAexF,MAAMuH,kBAAN,CAAyBvE,KAAKkF,KAAL,CAAWD,WAAX,CAAzB,CAAnB;AACAjI,sBAAM0F,kBAAN,CAAyBF,YAAzB;AACH,aAHD;;AAKA,iBAAKrF,WAAL,CAAiBuD,yBAAjB,CAA2CV,IAA3C,EAAiD,EAAjD;AACH,SApBD,MAqBK;AACD/D,mBAAOkJ,GAAP,CAAW,sDAAX;AACA,iBAAKb,sBAAL,CAA4B1E,UAA5B,EAAwC,IAAxC;AACH;AACJ,KArCD;;AA0CAhD,SAAKgE,SAAL,CAAekC,sBAAf,GAAwC,YAAY;AAChD,YAAI9F,QAAQ,IAAZ;AACA,aAAKwG,IAAL,CAAU,oBAAV;AACA,YAAIE,eAAe,KAAKjC,oBAAL,EAAnB;AACA,YAAI2D,2BAA2B3J,eAAe4J,wBAAf,CAAwC,KAAK9H,aAA7C,EAA4DmG,YAA5D,CAA/B;AACA,YAAIjD,SAAS,EAAb;AACA2E,iCAAyBE,WAAzB,CAAqC1J,OAAOwF,IAAP,CAAYmE,KAAjD,EAAwD,UAAUvF,IAAV,EAAgBuC,IAAhB,EAAsB;AAC1E9B,qBAASA,OAAO+E,MAAP,CAAcxI,MAAMqD,eAAN,CAAsBH,oBAAtB,CAA2CF,IAA3C,EAAiDuC,IAAjD,CAAd,CAAT;AACA,gBAAIC,eAAexF,MAAMuH,kBAAN,CAAyBvE,IAAzB,CAAnB;AACAhD,kBAAM0F,kBAAN,CAAyBF,YAAzB;AACH,SAJD;AAKA,aAAKjF,aAAL,GAAqB,IAAI1B,qBAAqB2B,kBAAzB,EAArB;AACA,aAAKL,WAAL,CAAiBuD,yBAAjB,CAA2C9E,OAAOwF,IAAP,CAAYmE,KAAvD,EAA8D9E,MAA9D;AACH,KAbD;;AAkBA7D,SAAKgE,SAAL,CAAe6E,kBAAf,GAAoC,UAAUzF,IAAV,EAAgBJ,UAAhB,EAA4B;AAC5D,YAAI5C,QAAQ,IAAZ;AACA,aAAKgB,OAAL,CAAayH,kBAAb,CAAgCzF,KAAKa,QAAL,EAAhC,EAAiD,UAAUN,MAAV,EAAkB0D,WAAlB,EAA+B;AAC5E,gBAAI1D,WAAW,IAAf,EAAqB;AACjBvD,sBAAMO,aAAN,CAAoBmI,MAApB,CAA2B1F,IAA3B;AACH;AACDhD,kBAAMsH,sBAAN,CAA6B1E,UAA7B,EAAyCW,MAAzC,EAAiD0D,WAAjD;AACH,SALD;AAMH,KARD;;AAcArH,SAAKgE,SAAL,CAAe+E,eAAf,GAAiC,UAAU3F,IAAV,EAAgBxE,KAAhB,EAAuBoE,UAAvB,EAAmC;AAChE,YAAI5C,QAAQ,IAAZ;AACA,YAAIkG,UAAUvH,eAAesG,YAAf,CAA4BzG,KAA5B,CAAd;AACA,aAAKwC,OAAL,CAAa4H,eAAb,CAA6B5F,KAAKa,QAAL,EAA7B,EAA8CqC,QAAQ5B,GAAR,CAAwB,IAAxB,CAA9C,EAA6E,UAAUf,MAAV,EAAkB0D,WAAlB,EAA+B;AACxG,gBAAI1D,WAAW,IAAf,EAAqB;AACjBvD,sBAAMO,aAAN,CAAoBsI,QAApB,CAA6B7F,IAA7B,EAAmCkD,OAAnC;AACH;AACDlG,kBAAMsH,sBAAN,CAA6B1E,UAA7B,EAAyCW,MAAzC,EAAiD0D,WAAjD;AACH,SALD;AAMH,KATD;;AAgBArH,SAAKgE,SAAL,CAAekF,2BAAf,GAA6C,UAAU9F,IAAV,EAAgBxE,KAAhB,EAAuBiI,QAAvB,EAAiC7D,UAAjC,EAA6C;AACtF,YAAI5C,QAAQ,IAAZ;AACA,YAAIkG,UAAUvH,eAAesG,YAAf,CAA4BzG,KAA5B,EAAmCiI,QAAnC,CAAd;AACA,aAAKzF,OAAL,CAAa4H,eAAb,CAA6B5F,KAAKa,QAAL,EAA7B,EAA8CqC,QAAQ5B,GAAR,CAAwB,IAAxB,CAA9C,EAA6E,UAAUf,MAAV,EAAkB0D,WAAlB,EAA+B;AACxG,gBAAI1D,WAAW,IAAf,EAAqB;AACjBvD,sBAAMO,aAAN,CAAoBsI,QAApB,CAA6B7F,IAA7B,EAAmCkD,OAAnC;AACH;AACDlG,kBAAMsH,sBAAN,CAA6B1E,UAA7B,EAAyCW,MAAzC,EAAiD0D,WAAjD;AACH,SALD;AAMH,KATD;;AAeArH,SAAKgE,SAAL,CAAemF,kBAAf,GAAoC,UAAU/F,IAAV,EAAgByE,eAAhB,EAAiC7E,UAAjC,EAA6C;AAC7E,YAAI5C,QAAQ,IAAZ;AACA,YAAId,OAAO+D,OAAP,CAAewE,eAAf,CAAJ,EAAqC;AACjCxI,mBAAOkJ,GAAP,CAAW,qEAAX;AACA,iBAAKb,sBAAL,CAA4B1E,UAA5B,EAAwC,IAAxC;AACA;AACH;AACD,aAAK5B,OAAL,CAAagI,iBAAb,CAA+BhG,KAAKa,QAAL,EAA/B,EAAgD4D,eAAhD,EAAiE,UAAUlE,MAAV,EAAkB0D,WAAlB,EAA+B;AAC5F,gBAAI1D,WAAW,IAAf,EAAqB;AACjBrE,uBAAOyI,OAAP,CAAeF,eAAf,EAAgC,UAAUwB,SAAV,EAAqBC,SAArB,EAAgC;AAC5D,wBAAIC,eAAexK,eAAesG,YAAf,CAA4BiE,SAA5B,CAAnB;AACAlJ,0BAAMO,aAAN,CAAoBsI,QAApB,CAA6B7F,KAAKkF,KAAL,CAAWe,SAAX,CAA7B,EAAoDE,YAApD;AACH,iBAHD;AAIH;AACDnJ,kBAAMsH,sBAAN,CAA6B1E,UAA7B,EAAyCW,MAAzC,EAAiD0D,WAAjD;AACH,SARD;AASH,KAhBD;;AAqBArH,SAAKgE,SAAL,CAAewF,wBAAf,GAA0C,UAAU3G,KAAV,EAAiB4G,iBAAjB,EAAoC;AAC1E,YAAI5F,MAAJ;AACA,YAAIhB,MAAMO,IAAN,CAAWsG,QAAX,OAA0B,OAA9B,EAAuC;AACnC7F,qBAAS,KAAKnB,aAAL,CAAmBiH,oBAAnB,CAAwC9G,KAAxC,EAA+C4G,iBAA/C,CAAT;AACH,SAFD,MAGK;AACD5F,qBAAS,KAAKJ,eAAL,CAAqBkG,oBAArB,CAA0C9G,KAA1C,EAAiD4G,iBAAjD,CAAT;AACH;AACD,aAAKlJ,WAAL,CAAiBqJ,iBAAjB,CAAmC/G,MAAMO,IAAzC,EAA+CS,MAA/C;AACH,KATD;;AAcA7D,SAAKgE,SAAL,CAAe6F,2BAAf,GAA6C,UAAUhH,KAAV,EAAiB4G,iBAAjB,EAAoC;AAG7E,YAAI5F,MAAJ;AACA,YAAIhB,MAAMO,IAAN,CAAWsG,QAAX,OAA0B,OAA9B,EAAuC;AACnC7F,qBAAS,KAAKnB,aAAL,CAAmBoH,uBAAnB,CAA2CjH,KAA3C,EAAkD4G,iBAAlD,CAAT;AACH,SAFD,MAGK;AACD5F,qBAAS,KAAKJ,eAAL,CAAqBqG,uBAArB,CAA6CjH,KAA7C,EAAoD4G,iBAApD,CAAT;AACH;AACD,aAAKlJ,WAAL,CAAiBqJ,iBAAjB,CAAmC/G,MAAMO,IAAzC,EAA+CS,MAA/C;AACH,KAXD;AAYA7D,SAAKgE,SAAL,CAAe+F,SAAf,GAA2B,YAAY;AACnC,YAAI,KAAKlJ,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,CAA2BkJ,SAA3B,CAAqChK,gBAArC;AACH;AACJ,KAJD;AAKAC,SAAKgE,SAAL,CAAegG,MAAf,GAAwB,YAAY;AAChC,YAAI,KAAKnJ,qBAAT,EAAgC;AAC5B,iBAAKA,qBAAL,CAA2BmJ,MAA3B,CAAkCjK,gBAAlC;AACH;AACJ,KAJD;AAKAC,SAAKgE,SAAL,CAAeiG,KAAf,GAAuB,UAAUC,SAAV,EAAqB;AACxC,YAAIA,cAAc,KAAK,CAAvB,EAA0B;AAAEA,wBAAY,KAAZ;AAAoB;AAChD,YAAI,OAAOC,OAAP,KAAmB,WAAvB,EACI;AACJ,YAAIF,KAAJ;AACA,YAAIC,SAAJ,EAAe;AACX,gBAAI,CAAC,KAAK5J,cAAV,EACI,KAAKA,cAAL,GAAsB,IAAIZ,gBAAgB0K,aAApB,CAAkC,KAAKpJ,MAAvC,CAAtB;AACJiJ,oBAAQ,KAAK3J,cAAL,CAAoB+J,GAApB,EAAR;AACH,SAJD,MAKK;AACDJ,oBAAQ,KAAKjJ,MAAL,CAAYqJ,GAAZ,EAAR;AACH;AACD,YAAIC,cAAc7L,OAAO8L,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,CAA0B,UAAUC,aAAV,EAAyBC,YAAzB,EAAuC;AAC/E,mBAAOC,KAAKC,GAAL,CAASF,aAAa7E,MAAtB,EAA8B4E,aAA9B,CAAP;AACH,SAFiB,EAEf,CAFe,CAAlB;AAGAnL,eAAOyI,OAAP,CAAekC,KAAf,EAAsB,UAAUY,IAAV,EAAgBjM,KAAhB,EAAuB;AAEzC,iBAAK,IAAIkM,IAAID,KAAKhF,MAAlB,EAA0BiF,IAAIR,cAAc,CAA5C,EAA+CQ,GAA/C;AACID,wBAAQ,GAAR;AADJ,aAEAV,QAAQ5B,GAAR,CAAYsC,OAAOjM,KAAnB;AACH,SALD;AAMH,KAtBD;AAuBAoB,SAAKgE,SAAL,CAAe+G,qBAAf,GAAuC,UAAUC,MAAV,EAAkB;AACrD,aAAKhK,MAAL,CAAYiK,gBAAZ,CAA6BD,MAA7B;AACA,aAAK5I,cAAL,CAAoB8I,WAApB,CAAgCF,MAAhC;AACH,KAHD;;AAQAhL,SAAKgE,SAAL,CAAe4C,IAAf,GAAsB,YAAY;AAC9B,YAAIuE,WAAW,EAAf;AACA,aAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKC,UAAUxF,MAAhC,EAAwCuF,IAAxC,EAA8C;AAC1CD,qBAASC,EAAT,IAAeC,UAAUD,EAAV,CAAf;AACH;AACD,YAAIE,SAAS,EAAb;AACA,YAAI,KAAKzK,qBAAT,EAAgC;AAC5ByK,qBAAS,KAAKzK,qBAAL,CAA2B0K,EAA3B,GAAgC,GAAzC;AACH;AACDlM,eAAOkJ,GAAP,CAAWiD,KAAX,CAAiB,KAAK,CAAtB,EAAyB,CAACF,MAAD,EAAS1C,MAAT,CAAgBuC,QAAhB,CAAzB;AACH,KAVD;;AAgBAnL,SAAKgE,SAAL,CAAe0D,sBAAf,GAAwC,UAAU1B,QAAV,EAAoBrC,MAApB,EAA4B0D,WAA5B,EAAyC;AAC7E,YAAIrB,QAAJ,EAAc;AACV3G,mBAAOoM,cAAP,CAAsB,YAAY;AAC9B,oBAAI9H,UAAU,IAAd,EAAoB;AAChBqC,6BAAS,IAAT;AACH,iBAFD,MAGK;AACD,wBAAI0F,OAAO,CAAC/H,UAAU,OAAX,EAAoBgI,WAApB,EAAX;AACA,wBAAIC,UAAUF,IAAd;AACA,wBAAIrE,WAAJ,EACIuE,WAAW,OAAOvE,WAAlB;AACJ,wBAAIwE,QAAQ,IAAIjK,KAAJ,CAAUgK,OAAV,CAAZ;AACAC,0BAAMH,IAAN,GAAaA,IAAb;AACA1F,6BAAS6F,KAAT;AACH;AACJ,aAbD;AAcH;AACJ,KAjBD;AAkBApN,WAAOC,cAAP,CAAsBsB,KAAKgE,SAA3B,EAAsC,UAAtC,EAAkD;AAC9CqG,aAAK,eAAY;AACb,mBAAO,KAAKyB,UAAL,KAAoB,KAAKA,UAAL,GAAkB,IAAIhM,WAAWiM,QAAf,CAAwB,IAAxB,CAAtC,CAAP;AACH,SAH6C;AAI9CC,oBAAY,IAJkC;AAK9CC,sBAAc;AALgC,KAAlD;AAOA,WAAOjM,IAAP;AACH,CAteyB,EAA1B;AAueArB,QAAQqB,IAAR,GAAeA,IAAf","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ServerValues_1 = require(\"./util/ServerValues\");\nvar nodeFromJSON_1 = require(\"./snap/nodeFromJSON\");\nvar Path_1 = require(\"./util/Path\");\nvar SparseSnapshotTree_1 = require(\"./SparseSnapshotTree\");\nvar SyncTree_1 = require(\"./SyncTree\");\nvar SnapshotHolder_1 = require(\"./SnapshotHolder\");\nvar util_1 = require(\"@firebase/util\");\nvar util_2 = require(\"./util/util\");\nvar util_3 = require(\"@firebase/util\");\nvar AuthTokenProvider_1 = require(\"./AuthTokenProvider\");\nvar StatsManager_1 = require(\"./stats/StatsManager\");\nvar StatsReporter_1 = require(\"./stats/StatsReporter\");\nvar StatsListener_1 = require(\"./stats/StatsListener\");\nvar EventQueue_1 = require(\"./view/EventQueue\");\nvar PersistentConnection_1 = require(\"./PersistentConnection\");\nvar ReadonlyRestClient_1 = require(\"./ReadonlyRestClient\");\nvar Database_1 = require(\"../api/Database\");\nvar INTERRUPT_REASON = 'repo_interrupt';\n/**\n * A connection to a single data repository.\n */\nvar Repo = /** @class */ (function () {\n    /**\n     * @param {!RepoInfo} repoInfo_\n     * @param {boolean} forceRestClient\n     * @param {!FirebaseApp} app\n     */\n    function Repo(repoInfo_, forceRestClient, app) {\n        var _this = this;\n        this.repoInfo_ = repoInfo_;\n        this.app = app;\n        this.dataUpdateCount = 0;\n        this.statsListener_ = null;\n        this.eventQueue_ = new EventQueue_1.EventQueue();\n        this.nextWriteId_ = 1;\n        this.interceptServerDataCallback_ = null;\n        // A list of data pieces and paths to be set when this client disconnects.\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        /**\n         * TODO: This should be @private but it's used by test_access.js and internal.js\n         * @type {?PersistentConnection}\n         */\n        this.persistentConnection_ = null;\n        /** @type {!AuthTokenProvider} */\n        var authTokenProvider = new AuthTokenProvider_1.AuthTokenProvider(app);\n        this.stats_ = StatsManager_1.StatsManager.getCollection(repoInfo_);\n        if (forceRestClient || util_2.beingCrawled()) {\n            this.server_ = new ReadonlyRestClient_1.ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\n        }\n        else {\n            var authOverride = app.options['databaseAuthVariableOverride'];\n            // Validate authOverride\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\n                if (typeof authOverride !== 'object') {\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\n                }\n                try {\n                    util_1.stringify(authOverride);\n                }\n                catch (e) {\n                    throw new Error('Invalid authOverride provided: ' + e);\n                }\n            }\n            this.persistentConnection_ = new PersistentConnection_1.PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\n            this.server_ = this.persistentConnection_;\n        }\n        authTokenProvider.addTokenChangeListener(function (token) {\n            _this.server_.refreshAuthToken(token);\n        });\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n        this.statsReporter_ = StatsManager_1.StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter_1.StatsReporter(_this.stats_, _this.server_); });\n        this.transactions_init_();\n        // Used for .info.\n        this.infoData_ = new SnapshotHolder_1.SnapshotHolder();\n        this.infoSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                var infoEvents = [];\n                var node = _this.infoData_.getNode(query.path);\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n                // on initial data...\n                if (!node.isEmpty()) {\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\n                    setTimeout(function () {\n                        onComplete('ok');\n                    }, 0);\n                }\n                return infoEvents;\n            },\n            stopListening: function () { }\n        });\n        this.updateInfo_('connected', false);\n        this.serverSyncTree_ = new SyncTree_1.SyncTree({\n            startListening: function (query, tag, currentHashFn, onComplete) {\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\n                    var events = onComplete(status, data);\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\n                });\n                // No synchronous events for network-backed sync trees\n                return [];\n            },\n            stopListening: function (query, tag) {\n                _this.server_.unlisten(query, tag);\n            }\n        });\n    }\n    /**\n     * @return {string}  The URL corresponding to the root of this Firebase.\n     */\n    Repo.prototype.toString = function () {\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\n    };\n    /**\n     * @return {!string} The namespace represented by the repo.\n     */\n    Repo.prototype.name = function () {\n        return this.repoInfo_.namespace;\n    };\n    /**\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\n     */\n    Repo.prototype.serverTime = function () {\n        var offsetNode = this.infoData_.getNode(new Path_1.Path('.info/serverTimeOffset'));\n        var offset = offsetNode.val() || 0;\n        return new Date().getTime() + offset;\n    };\n    /**\n     * Generate ServerValues using some variables from the repo object.\n     * @return {!Object}\n     */\n    Repo.prototype.generateServerValues = function () {\n        return ServerValues_1.generateWithValues({\n            timestamp: this.serverTime()\n        });\n    };\n    /**\n     * Called by realtime when we get new messages from the server.\n     *\n     * @private\n     * @param {string} pathString\n     * @param {*} data\n     * @param {boolean} isMerge\n     * @param {?number} tag\n     */\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\n        // For testing.\n        this.dataUpdateCount++;\n        var path = new Path_1.Path(pathString);\n        data = this.interceptServerDataCallback_\n            ? this.interceptServerDataCallback_(pathString, data)\n            : data;\n        var events = [];\n        if (tag) {\n            if (isMerge) {\n                var taggedChildren = util_3.map(data, function (raw) {\n                    return nodeFromJSON_1.nodeFromJSON(raw);\n                });\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\n            }\n            else {\n                var taggedSnap = nodeFromJSON_1.nodeFromJSON(data);\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\n            }\n        }\n        else if (isMerge) {\n            var changedChildren = util_3.map(data, function (raw) {\n                return nodeFromJSON_1.nodeFromJSON(raw);\n            });\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\n        }\n        else {\n            var snap = nodeFromJSON_1.nodeFromJSON(data);\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\n        }\n        var affectedPath = path;\n        if (events.length > 0) {\n            // Since we have a listener outstanding for each transaction, receiving any events\n            // is a proxy for some change having occurred.\n            affectedPath = this.rerunTransactions_(path);\n        }\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\n    };\n    /**\n     * TODO: This should be @private but it's used by test_access.js and internal.js\n     * @param {?function(!string, *):*} callback\n     * @private\n     */\n    Repo.prototype.interceptServerData_ = function (callback) {\n        this.interceptServerDataCallback_ = callback;\n    };\n    /**\n     * @param {!boolean} connectStatus\n     * @private\n     */\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\n        this.updateInfo_('connected', connectStatus);\n        if (connectStatus === false) {\n            this.runOnDisconnectEvents_();\n        }\n    };\n    /**\n     * @param {!Object} updates\n     * @private\n     */\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\n        var _this = this;\n        util_2.each(updates, function (value, key) {\n            _this.updateInfo_(key, value);\n        });\n    };\n    /**\n     *\n     * @param {!string} pathString\n     * @param {*} value\n     * @private\n     */\n    Repo.prototype.updateInfo_ = function (pathString, value) {\n        var path = new Path_1.Path('/.info/' + pathString);\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.infoData_.updateSnapshot(path, newNode);\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\n    };\n    /**\n     * @return {!number}\n     * @private\n     */\n    Repo.prototype.getNextWriteId_ = function () {\n        return this.nextWriteId_++;\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} newVal\n     * @param {number|string|null} newPriority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\n        var _this = this;\n        this.log_('set', {\n            path: path.toString(),\n            value: newVal,\n            priority: newPriority\n        });\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n        // (b) store unresolved paths on JSON parse\n        var serverValues = this.generateServerValues();\n        var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(newVal, newPriority);\n        var newNode = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        var writeId = this.getNextWriteId_();\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\n        this.eventQueue_.queueEvents(events);\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\n            var success = status === 'ok';\n            if (!success) {\n                util_2.warn('set at ' + path + ' failed: ' + status);\n            }\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n        var affectedPath = this.abortTransactions_(path);\n        this.rerunTransactions_(affectedPath);\n        // We queued the events above, so just flush the queue here\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\n    };\n    /**\n     * @param {!Path} path\n     * @param {!Object} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\n        // Start with our existing data and merge each child into it.\n        var empty = true;\n        var serverValues = this.generateServerValues();\n        var changedChildren = {};\n        util_3.forEach(childrenToMerge, function (changedKey, changedValue) {\n            empty = false;\n            var newNodeUnresolved = nodeFromJSON_1.nodeFromJSON(changedValue);\n            changedChildren[changedKey] = ServerValues_1.resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\n        });\n        if (!empty) {\n            var writeId_1 = this.getNextWriteId_();\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\n            this.eventQueue_.queueEvents(events);\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\n                var success = status === 'ok';\n                if (!success) {\n                    util_2.warn('update at ' + path + ' failed: ' + status);\n                }\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\n            });\n            util_3.forEach(childrenToMerge, function (changedPath) {\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\n                _this.rerunTransactions_(affectedPath);\n            });\n            // We queued the events above, so just flush the queue here\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\n        }\n        else {\n            util_2.log(\"update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n        }\n    };\n    /**\n     * Applies all of the changes stored up in the onDisconnect_ tree.\n     * @private\n     */\n    Repo.prototype.runOnDisconnectEvents_ = function () {\n        var _this = this;\n        this.log_('onDisconnectEvents');\n        var serverValues = this.generateServerValues();\n        var resolvedOnDisconnectTree = ServerValues_1.resolveDeferredValueTree(this.onDisconnect_, serverValues);\n        var events = [];\n        resolvedOnDisconnectTree.forEachTree(Path_1.Path.Empty, function (path, snap) {\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\n            var affectedPath = _this.abortTransactions_(path);\n            _this.rerunTransactions_(affectedPath);\n        });\n        this.onDisconnect_ = new SparseSnapshotTree_1.SparseSnapshotTree();\n        this.eventQueue_.raiseEventsForChangedPath(Path_1.Path.Empty, events);\n    };\n    /**\n     * @param {!Path} path\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\n        var _this = this;\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.forget(path);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} value\n     * @param {*} priority\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\n        var _this = this;\n        var newNode = nodeFromJSON_1.nodeFromJSON(value, priority);\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\n            if (status === 'ok') {\n                _this.onDisconnect_.remember(path, newNode);\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Path} path\n     * @param {*} childrenToMerge\n     * @param {?function(?Error, *=)} onComplete\n     */\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\n        var _this = this;\n        if (util_3.isEmpty(childrenToMerge)) {\n            util_2.log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n            this.callOnCompleteCallback(onComplete, 'ok');\n            return;\n        }\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\n            if (status === 'ok') {\n                util_3.forEach(childrenToMerge, function (childName, childNode) {\n                    var newChildNode = nodeFromJSON_1.nodeFromJSON(childNode);\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\n                });\n            }\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\n        });\n    };\n    /**\n     * @param {!Query} query\n     * @param {!EventRegistration} eventRegistration\n     */\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    /**\n     * @param {!Query} query\n     * @param {?EventRegistration} eventRegistration\n     */\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n        // a little bit by handling the return values anyways.\n        var events;\n        if (query.path.getFront() === '.info') {\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        else {\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\n        }\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\n    };\n    Repo.prototype.interrupt = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.resume = function () {\n        if (this.persistentConnection_) {\n            this.persistentConnection_.resume(INTERRUPT_REASON);\n        }\n    };\n    Repo.prototype.stats = function (showDelta) {\n        if (showDelta === void 0) { showDelta = false; }\n        if (typeof console === 'undefined')\n            return;\n        var stats;\n        if (showDelta) {\n            if (!this.statsListener_)\n                this.statsListener_ = new StatsListener_1.StatsListener(this.stats_);\n            stats = this.statsListener_.get();\n        }\n        else {\n            stats = this.stats_.get();\n        }\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\n            return Math.max(currentValue.length, previousValue);\n        }, 0);\n        util_3.forEach(stats, function (stat, value) {\n            // pad stat names to be the same length (plus 2 extra spaces).\n            for (var i = stat.length; i < longestName + 2; i++)\n                stat += ' ';\n            console.log(stat + value);\n        });\n    };\n    Repo.prototype.statsIncrementCounter = function (metric) {\n        this.stats_.incrementCounter(metric);\n        this.statsReporter_.includeStat(metric);\n    };\n    /**\n     * @param {...*} var_args\n     * @private\n     */\n    Repo.prototype.log_ = function () {\n        var var_args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            var_args[_i] = arguments[_i];\n        }\n        var prefix = '';\n        if (this.persistentConnection_) {\n            prefix = this.persistentConnection_.id + ':';\n        }\n        util_2.log.apply(void 0, [prefix].concat(var_args));\n    };\n    /**\n     * @param {?function(?Error, *=)} callback\n     * @param {!string} status\n     * @param {?string=} errorReason\n     */\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\n        if (callback) {\n            util_2.exceptionGuard(function () {\n                if (status == 'ok') {\n                    callback(null);\n                }\n                else {\n                    var code = (status || 'error').toUpperCase();\n                    var message = code;\n                    if (errorReason)\n                        message += ': ' + errorReason;\n                    var error = new Error(message);\n                    error.code = code;\n                    callback(error);\n                }\n            });\n        }\n    };\n    Object.defineProperty(Repo.prototype, \"database\", {\n        get: function () {\n            return this.__database || (this.__database = new Database_1.Database(this));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Repo;\n}());\nexports.Repo = Repo;\n\n//# sourceMappingURL=Repo.js.map\n"]}]