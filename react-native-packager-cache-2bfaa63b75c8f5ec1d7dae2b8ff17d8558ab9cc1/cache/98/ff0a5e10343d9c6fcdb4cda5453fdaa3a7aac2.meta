["35770de773c1e348c0f114f3efc29cd6c8fd1f1d","ad41230202dabd267692fa5a107c9a18e529a6e2",["react-native","../../utils/getSceneIndicesForInterpolationInputRange"],[93,168],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-navigation/src/views/Header/HeaderStyleInterpolator.js"],"names":["forLeft","props","position","scene","scenes","interpolate","opacity","first","last","index","inputRange","Math","abs","outputRange","forCenter","transform","translateX","isRTL","forRight"],"mappings":";;;;AAEA;;AAQA;;;;AAaA,SAASA,OAAT,CAAiBC,KAAjB,EAA6E;AAAA,MACnEC,QADmE,GACvCD,KADuC,CACnEC,QADmE;AAAA,MACzDC,KADyD,GACvCF,KADuC,CACzDE,KADyD;AAAA,MAClDC,MADkD,GACvCH,KADuC,CAClDG,MADkD;;AAE3E,MAAMC,cAAc,yDAA0CJ,KAA1C,CAApB;;AAEA,MAAI,CAACI,WAAL,EAAkB,OAAO,EAAEC,SAAS,CAAX,EAAP;;AAJyD,MAMnEC,KANmE,GAMnDF,WANmD,CAMnEE,KANmE;AAAA,MAM5DC,IAN4D,GAMnDH,WANmD,CAM5DG,IAN4D;;AAO3E,MAAMC,QAAQN,MAAMM,KAApB;;AAEA,SAAO;AACLH,aAASJ,SAASG,WAAT,CAAqB;AAC5BK,kBAAY,CACVH,KADU,EAEVA,QAAQI,KAAKC,GAAL,CAASH,QAAQF,KAAjB,IAA0B,CAFxB,EAGVE,KAHU,EAIVD,OAAOG,KAAKC,GAAL,CAASJ,OAAOC,KAAhB,IAAyB,CAJtB,EAKVD,IALU,CADgB;AAQ5BK,mBAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AARc,KAArB;AADJ,GAAP;AAYD;;AAED,SAASC,SAAT,CAAmBb,KAAnB,EAA+E;AAAA,MACrEC,QADqE,GACjDD,KADiD,CACrEC,QADqE;AAAA,MAC3DC,KAD2D,GACjDF,KADiD,CAC3DE,KAD2D;;AAE7E,MAAME,cAAc,yDAA0CJ,KAA1C,CAApB;;AAEA,MAAI,CAACI,WAAL,EAAkB,OAAO,EAAEC,SAAS,CAAX,EAAP;;AAJ2D,MAMrEC,KANqE,GAMrDF,WANqD,CAMrEE,KANqE;AAAA,MAM9DC,IAN8D,GAMrDH,WANqD,CAM9DG,IAN8D;;AAO7E,MAAMC,QAAQN,MAAMM,KAApB;AACA,MAAMC,aAAa,CAACH,KAAD,EAAQE,KAAR,EAAeD,IAAf,CAAnB;;AAEA,SAAO;AACLF,aAASJ,SAASG,WAAT,CAAqB;AAC5BK,4BAD4B;AAE5BG,mBAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFc,KAArB,CADJ;AAKLE,eAAW,CACT;AACEC,kBAAYd,SAASG,WAAT,CAAqB;AAC/BK,8BAD+B;AAE/BG,qBAAa,yBAAYI,KAAZ,GACR,CAAC,CAAC,GAAF,EAAO,CAAP,EAAU,GAAV,CADQ,GAER,CAAC,GAAD,EAAM,CAAN,EAAS,CAAC,GAAV;AAJ0B,OAArB;AADd,KADS;AALN,GAAP;AAgBD;;AAED,SAASC,QAAT,CAAkBjB,KAAlB,EAA8E;AAAA,MACpEC,QADoE,GAChDD,KADgD,CACpEC,QADoE;AAAA,MAC1DC,KAD0D,GAChDF,KADgD,CAC1DE,KAD0D;;AAE5E,MAAME,cAAc,yDAA0CJ,KAA1C,CAApB;;AAEA,MAAI,CAACI,WAAL,EAAkB,OAAO,EAAEC,SAAS,CAAX,EAAP;AAJ0D,MAKpEC,KALoE,GAKpDF,WALoD,CAKpEE,KALoE;AAAA,MAK7DC,IAL6D,GAKpDH,WALoD,CAK7DG,IAL6D;;AAM5E,MAAMC,QAAQN,MAAMM,KAApB;;AAEA,SAAO;AACLH,aAASJ,SAASG,WAAT,CAAqB;AAC5BK,kBAAY,CAACH,KAAD,EAAQE,KAAR,EAAeD,IAAf,CADgB;AAE5BK,mBAAc,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFc,KAArB;AADJ,GAAP;AAMD;;kBAEc;AACbb,kBADa;AAEbc,sBAFa;AAGbI;AAHa,C","sourcesContent":["/* @flow */\n\nimport { I18nManager } from 'react-native';\n\nimport type {\n  NavigationSceneRendererProps,\n  NavigationScene,\n  AnimatedViewStyleProp,\n} from '../../TypeDefinition';\n\nimport getSceneIndicesForInterpolationInputRange from '../../utils/getSceneIndicesForInterpolationInputRange';\n\n/**\n * Utility that builds the style for the navigation header.\n *\n * +-------------+-------------+-------------+\n * |             |             |             |\n * |    Left     |   Title     |   Right     |\n * |  Component  |  Component  | Component   |\n * |             |             |             |\n * +-------------+-------------+-------------+\n */\n\nfunction forLeft(props: NavigationSceneRendererProps): AnimatedViewStyleProp {\n  const { position, scene, scenes } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate({\n      inputRange: [\n        first,\n        first + Math.abs(index - first) / 2,\n        index,\n        last - Math.abs(last - index) / 2,\n        last,\n      ],\n      outputRange: ([0, 0, 1, 0, 0]: Array<number>),\n    }),\n  };\n}\n\nfunction forCenter(props: NavigationSceneRendererProps): AnimatedViewStyleProp {\n  const { position, scene } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const inputRange = [first, index, last];\n\n  return {\n    opacity: position.interpolate({\n      inputRange,\n      outputRange: ([0, 1, 0]: Array<number>),\n    }),\n    transform: [\n      {\n        translateX: position.interpolate({\n          inputRange,\n          outputRange: I18nManager.isRTL\n            ? ([-200, 0, 200]: Array<number>)\n            : ([200, 0, -200]: Array<number>),\n        }),\n      },\n    ],\n  };\n}\n\nfunction forRight(props: NavigationSceneRendererProps): AnimatedViewStyleProp {\n  const { position, scene } = props;\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  return {\n    opacity: position.interpolate({\n      inputRange: [first, index, last],\n      outputRange: ([0, 1, 0]: Array<number>),\n    }),\n  };\n}\n\nexport default {\n  forLeft,\n  forCenter,\n  forRight,\n};\n"]}]