["1dcb61a6fed9a990f986dd2ca9d74975e3b097c0","92dab9aa829b7a83c5d2dde408c896d89354a4a2",["./IndexedFilter","../../snap/indexes/PriorityIndex","../../../core/snap/Node","../../snap/ChildrenNode"],[108,158,216,273],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/view/filter/RangedFilter.js"],"names":["Object","defineProperty","exports","value","IndexedFilter_1","require","PriorityIndex_1","Node_1","ChildrenNode_1","RangedFilter","params","indexedFilter_","IndexedFilter","getIndex","index_","startPost_","getStartPost_","endPost_","getEndPost_","prototype","getStartPost","getEndPost","matches","node","compare","updateChild","snap","key","newChild","affectedPath","source","optChangeAccumulator","NamedNode","ChildrenNode","EMPTY_NODE","updateFullNode","oldSnap","newSnap","isLeafNode","filtered","withIndex","updatePriority","self","forEachChild","PRIORITY_INDEX","childNode","updateImmediateChild","newPriority","filtersNodes","getIndexedFilter","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","minPost","hasEnd","endName","getIndexEndName","getIndexEndValue","maxPost"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IndexedFilter_1 = require(\"./IndexedFilter\");\nvar PriorityIndex_1 = require(\"../../snap/indexes/PriorityIndex\");\nvar Node_1 = require(\"../../../core/snap/Node\");\nvar ChildrenNode_1 = require(\"../../snap/ChildrenNode\");\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n *\n * @constructor\n * @implements {NodeFilter}\n */\nvar RangedFilter = /** @class */ (function () {\n    /**\n     * @param {!QueryParams} params\n     */\n    function RangedFilter(params) {\n        this.indexedFilter_ = new IndexedFilter_1.IndexedFilter(params.getIndex());\n        this.index_ = params.getIndex();\n        this.startPost_ = RangedFilter.getStartPost_(params);\n        this.endPost_ = RangedFilter.getEndPost_(params);\n    }\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getStartPost = function () {\n        return this.startPost_;\n    };\n    /**\n     * @return {!NamedNode}\n     */\n    RangedFilter.prototype.getEndPost = function () {\n        return this.endPost_;\n    };\n    /**\n     * @param {!NamedNode} node\n     * @return {boolean}\n     */\n    RangedFilter.prototype.matches = function (node) {\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\n            this.index_.compare(node, this.getEndPost()) <= 0);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\n        if (!this.matches(new Node_1.NamedNode(key, newChild))) {\n            newChild = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\n        if (newSnap.isLeafNode()) {\n            // Make sure we have a children node with the correct index, not a leaf node;\n            newSnap = ChildrenNode_1.ChildrenNode.EMPTY_NODE;\n        }\n        var filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n        var self = this;\n        newSnap.forEachChild(PriorityIndex_1.PRIORITY_INDEX, function (key, childNode) {\n            if (!self.matches(new Node_1.NamedNode(key, childNode))) {\n                filtered = filtered.updateImmediateChild(key, ChildrenNode_1.ChildrenNode.EMPTY_NODE);\n            }\n        });\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\n        // Don't support priorities on queries\n        return oldSnap;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.filtersNodes = function () {\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndexedFilter = function () {\n        return this.indexedFilter_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RangedFilter.prototype.getIndex = function () {\n        return this.index_;\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getStartPost_ = function (params) {\n        if (params.hasStart()) {\n            var startName = params.getIndexStartName();\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\n        }\n        else {\n            return params.getIndex().minPost();\n        }\n    };\n    /**\n     * @param {!QueryParams} params\n     * @return {!NamedNode}\n     * @private\n     */\n    RangedFilter.getEndPost_ = function (params) {\n        if (params.hasEnd()) {\n            var endName = params.getIndexEndName();\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\n        }\n        else {\n            return params.getIndex().maxPost();\n        }\n    };\n    return RangedFilter;\n}());\nexports.RangedFilter = RangedFilter;\n\n//# sourceMappingURL=RangedFilter.js.map\n"]}]