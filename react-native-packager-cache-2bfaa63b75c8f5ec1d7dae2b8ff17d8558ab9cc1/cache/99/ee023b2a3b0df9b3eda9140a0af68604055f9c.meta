["8ac9e980d056caada1b0234a91807ecf0f5fc000","e437a25a6634216b1297497cb9528752529190d5",["./type"],[97],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/storage/dist/cjs/src/implementation/fs.js"],"names":["Object","defineProperty","exports","value","type","require","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","undefined","getBlob","var_args","_i","arguments","length","bb","i","append","isNativeBlobDefined","Blob","Error","sliceBlob","blob","start","end","webkitSlice","mozSlice","slice"],"mappings":"AAAA;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,OAAOC,QAAQ,QAAR,CAAX;AACA,SAASC,cAAT,GAA0B;AACtB,QAAI,OAAOC,WAAP,KAAuB,WAA3B,EAAwC;AACpC,eAAOA,WAAP;AACH,KAFD,MAGK,IAAI,OAAOC,iBAAP,KAA6B,WAAjC,EAA8C;AAC/C,eAAOA,iBAAP;AACH,KAFI,MAGA;AACD,eAAOC,SAAP;AACH;AACJ;;AAOD,SAASC,OAAT,GAAmB;AACf,QAAIC,WAAW,EAAf;AACA,SAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKC,UAAUC,MAAhC,EAAwCF,IAAxC,EAA8C;AAC1CD,iBAASC,EAAT,IAAeC,UAAUD,EAAV,CAAf;AACH;AACD,QAAIL,cAAcD,gBAAlB;AACA,QAAIC,gBAAgBE,SAApB,EAA+B;AAC3B,YAAIM,KAAK,IAAIR,WAAJ,EAAT;AACA,aAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAIL,SAASG,MAA7B,EAAqCE,GAArC,EAA0C;AACtCD,eAAGE,MAAH,CAAUN,SAASK,CAAT,CAAV;AACH;AACD,eAAOD,GAAGL,OAAH,EAAP;AACH,KAND,MAOK;AACD,YAAIN,KAAKc,mBAAL,EAAJ,EAAgC;AAC5B,mBAAO,IAAIC,IAAJ,CAASR,QAAT,CAAP;AACH,SAFD,MAGK;AACD,kBAAMS,MAAM,qDAAN,CAAN;AACH;AACJ;AACJ;AACDlB,QAAQQ,OAAR,GAAkBA,OAAlB;;AAUA,SAASW,SAAT,CAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,GAAhC,EAAqC;AACjC,QAAIF,KAAKG,WAAT,EAAsB;AAClB,eAAOH,KAAKG,WAAL,CAAiBF,KAAjB,EAAwBC,GAAxB,CAAP;AACH,KAFD,MAGK,IAAIF,KAAKI,QAAT,EAAmB;AACpB,eAAOJ,KAAKI,QAAL,CAAcH,KAAd,EAAqBC,GAArB,CAAP;AACH,KAFI,MAGA,IAAIF,KAAKK,KAAT,EAAgB;AACjB,eAAOL,KAAKK,KAAL,CAAWJ,KAAX,EAAkBC,GAAlB,CAAP;AACH;AACD,WAAO,IAAP;AACH;AACDtB,QAAQmB,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type = require(\"./type\");\nfunction getBlobBuilder() {\n    if (typeof BlobBuilder !== 'undefined') {\n        return BlobBuilder;\n    }\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\n        return WebKitBlobBuilder;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param var_args The values that will make up the resulting blob.\n * @return The blob.\n */\nfunction getBlob() {\n    var var_args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        var_args[_i] = arguments[_i];\n    }\n    var BlobBuilder = getBlobBuilder();\n    if (BlobBuilder !== undefined) {\n        var bb = new BlobBuilder();\n        for (var i = 0; i < var_args.length; i++) {\n            bb.append(var_args[i]);\n        }\n        return bb.getBlob();\n    }\n    else {\n        if (type.isNativeBlobDefined()) {\n            return new Blob(var_args);\n        }\n        else {\n            throw Error(\"This browser doesn't seem to support creating Blobs\");\n        }\n    }\n}\nexports.getBlob = getBlob;\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nfunction sliceBlob(blob, start, end) {\n    if (blob.webkitSlice) {\n        return blob.webkitSlice(start, end);\n    }\n    else if (blob.mozSlice) {\n        return blob.mozSlice(start, end);\n    }\n    else if (blob.slice) {\n        return blob.slice(start, end);\n    }\n    return null;\n}\nexports.sliceBlob = sliceBlob;\n\n//# sourceMappingURL=fs.js.map\n"]}]