["1fae2cad703fd9787623607b866597c585bede51","ef64b385e0e41ac0806e5de2172a64154598bab1",[],[],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/util/dist/cjs/src/deepCopy.js"],"names":["Object","defineProperty","exports","value","deepCopy","deepExtend","undefined","target","source","constructor","Date","dateValue","getTime","Array","prop","hasOwnProperty","patchProperty","obj"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;;AAIA,SAASC,QAAT,CAAkBD,KAAlB,EAAyB;AACrB,WAAOE,WAAWC,SAAX,EAAsBH,KAAtB,CAAP;AACH;AACDD,QAAQE,QAAR,GAAmBA,QAAnB;;AAaA,SAASC,UAAT,CAAoBE,MAApB,EAA4BC,MAA5B,EAAoC;AAChC,QAAI,EAAEA,kBAAkBR,MAApB,CAAJ,EAAiC;AAC7B,eAAOQ,MAAP;AACH;AACD,YAAQA,OAAOC,WAAf;AACI,aAAKC,IAAL;AAGI,gBAAIC,YAAYH,MAAhB;AACA,mBAAO,IAAIE,IAAJ,CAASC,UAAUC,OAAV,EAAT,CAAP;AACJ,aAAKZ,MAAL;AACI,gBAAIO,WAAWD,SAAf,EAA0B;AACtBC,yBAAS,EAAT;AACH;AACD;AACJ,aAAKM,KAAL;AAEIN,qBAAS,EAAT;AACA;AACJ;AAEI,mBAAOC,MAAP;AAjBR;AAmBA,SAAK,IAAIM,IAAT,IAAiBN,MAAjB,EAAyB;AACrB,YAAI,CAACA,OAAOO,cAAP,CAAsBD,IAAtB,CAAL,EAAkC;AAC9B;AACH;AACDP,eAAOO,IAAP,IAAeT,WAAWE,OAAOO,IAAP,CAAX,EAAyBN,OAAOM,IAAP,CAAzB,CAAf;AACH;AACD,WAAOP,MAAP;AACH;AACDL,QAAQG,UAAR,GAAqBA,UAArB;;AAEA,SAASW,aAAT,CAAuBC,GAAvB,EAA4BH,IAA5B,EAAkCX,KAAlC,EAAyC;AACrCc,QAAIH,IAAJ,IAAYX,KAAZ;AACH;AACDD,QAAQc,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nfunction deepCopy(value) {\n    return deepExtend(undefined, value);\n}\nexports.deepCopy = deepCopy;\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n */\nfunction deepExtend(target, source) {\n    if (!(source instanceof Object)) {\n        return source;\n    }\n    switch (source.constructor) {\n        case Date:\n            // Treat Dates like scalars; if the target date object had any child\n            // properties - they will be lost!\n            var dateValue = source;\n            return new Date(dateValue.getTime());\n        case Object:\n            if (target === undefined) {\n                target = {};\n            }\n            break;\n        case Array:\n            // Always copy the array source and overwrite the target.\n            target = [];\n            break;\n        default:\n            // Not a plain Object - treat it as a scalar.\n            return source;\n    }\n    for (var prop in source) {\n        if (!source.hasOwnProperty(prop)) {\n            continue;\n        }\n        target[prop] = deepExtend(target[prop], source[prop]);\n    }\n    return target;\n}\nexports.deepExtend = deepExtend;\n// TODO: Really needed (for JSCompiler type checking)?\nfunction patchProperty(obj, prop, value) {\n    obj[prop] = value;\n}\nexports.patchProperty = patchProperty;\n\n//# sourceMappingURL=deepCopy.js.map\n"]}]