["f20cc90f78b3d3e69c3beb56d2c4b611f150503f","0a3923a3d63015ba3dbe3e9274b906f81f80161c",["react","./../../react-transform-hmr/lib/index.js","prop-types","react-native"],[88,167,1131,1229],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-native-tab-view/src/TouchableItem.js"],"names":["React","LOLLIPOP","_handlePress","global","requestAnimationFrame","props","onPress","style","pressOpacity","pressColor","borderless","rest","OS","Version","Ripple","Children","only","children","Component","propTypes","func","isRequired","delayPressIn","number","bool","string","node","defaultProps"],"mappings":";;;;;;IAEYA,K;;;;;;;;;;;;AACZ;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;YAFYA,K;;;;;;;;;AAUZ,IAAMC,WAAW,EAAjB;;;;;;;;;;;;;;;;oMA0BEC,Y,GAAe,YAAM;AACnBC,aAAOC,qBAAP,CAA6B,MAAKC,KAAL,CAAWC,OAAxC;AACD,K;;;;;6BAEQ;AAAA,mBAE0D,KAAKD,KAF/D;AAAA,UAECE,KAFD,UAECA,KAFD;AAAA,UAEQC,YAFR,UAEQA,YAFR;AAAA,UAEsBC,UAFtB,UAEsBA,UAFtB;AAAA,UAEkCC,UAFlC,UAEkCA,UAFlC;AAAA,UAEiDC,IAFjD;;AAIP,UAAI,sBAASC,EAAT,KAAgB,SAAhB,IAA6B,sBAASC,OAAT,IAAoBZ,QAArD,EAA+D;AAC7D,eACE;AAAA;AAAA,uBACMU,IADN;AAEE,qBAAS,KAAKT,YAFhB;AAGE,wBAAY,qCAAwBY,MAAxB,CAA+BL,UAA/B,EAA2CC,UAA3C;AAHd;AAKE;AAAA;AAAA,cAAM,OAAOH,KAAb;AAAqBP,kBAAMe,QAAN,CAAeC,IAAf,CAAoB,KAAKX,KAAL,CAAWY,QAA/B;AAArB;AALF,SADF;AASD,OAVD,MAUO;AACL,eACE;AAAA;AAAA,uBACMN,IADN;AAEE,qBAAS,KAAKT,YAFhB;AAGE,mBAAOK,KAHT;AAIE,2BAAeC;AAJjB;AAMG,eAAKH,KAAL,CAAWY;AANd,SADF;AAUD;AACF;;;;EA5CwCjB,MAAMkB,S,UACxCC,S,GAAY;AACjBb,WAAS,oBAAUc,IAAV,CAAeC,UADP;AAEjBC,gBAAc,oBAAUC,MAFP;AAGjBb,cAAY,oBAAUc,IAHL;AAIjBf,cAAY,oBAAUgB,MAJL;AAKjBjB,gBAAc,oBAAUe,MALP;AAMjBN,YAAU,oBAAUS,IAAV,CAAeL;AANR,C,SASZM,Y,GAAe;AACpBlB,cAAY;AADQ,C","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n} from 'react-native';\nimport type { Style } from './TabViewTypeDefinitions';\n\nconst LOLLIPOP = 21;\n\ntype Props = {\n  onPress: Function,\n  delayPressIn?: number,\n  borderless?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  children?: React.Node,\n  style?: Style,\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static propTypes = {\n    onPress: PropTypes.func.isRequired,\n    delayPressIn: PropTypes.number,\n    borderless: PropTypes.bool,\n    pressColor: PropTypes.string,\n    pressOpacity: PropTypes.number,\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  _handlePress = () => {\n    global.requestAnimationFrame(this.props.onPress);\n  };\n\n  render() {\n    // eslint-disable-next-line react/prop-types\n    const { style, pressOpacity, pressColor, borderless, ...rest } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          onPress={this._handlePress}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity\n          {...rest}\n          onPress={this._handlePress}\n          style={style}\n          activeOpacity={pressOpacity}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]}]