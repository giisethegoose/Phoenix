["6d1347ab14ce5e9f983add3c3a9f6bd7f51ae1ba","bd9492fcea4832778a018dcf89975f267351a574",["./EventEmitter","@firebase/util"],[646,686],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/util/VisibilityMonitor.js"],"names":["__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","EventEmitter_1","require","util_1","VisibilityMonitor","_super","_this","call","hidden","visibilityChange","document","addEventListener","visible_","visible","trigger","getInstance","getInitialEvent","eventType","assert","EventEmitter"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EventEmitter_1 = require(\"./EventEmitter\");\nvar util_1 = require(\"@firebase/util\");\n/**\n * @extends {EventEmitter}\n */\nvar VisibilityMonitor = /** @class */ (function (_super) {\n    __extends(VisibilityMonitor, _super);\n    function VisibilityMonitor() {\n        var _this = _super.call(this, ['visible']) || this;\n        var hidden;\n        var visibilityChange;\n        if (typeof document !== 'undefined' &&\n            typeof document.addEventListener !== 'undefined') {\n            if (typeof document['hidden'] !== 'undefined') {\n                // Opera 12.10 and Firefox 18 and later support\n                visibilityChange = 'visibilitychange';\n                hidden = 'hidden';\n            }\n            else if (typeof document['mozHidden'] !== 'undefined') {\n                visibilityChange = 'mozvisibilitychange';\n                hidden = 'mozHidden';\n            }\n            else if (typeof document['msHidden'] !== 'undefined') {\n                visibilityChange = 'msvisibilitychange';\n                hidden = 'msHidden';\n            }\n            else if (typeof document['webkitHidden'] !== 'undefined') {\n                visibilityChange = 'webkitvisibilitychange';\n                hidden = 'webkitHidden';\n            }\n        }\n        // Initially, we always assume we are visible. This ensures that in browsers\n        // without page visibility support or in cases where we are never visible\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n        // reconnects\n        _this.visible_ = true;\n        if (visibilityChange) {\n            document.addEventListener(visibilityChange, function () {\n                var visible = !document[hidden];\n                if (visible !== _this.visible_) {\n                    _this.visible_ = visible;\n                    _this.trigger('visible', visible);\n                }\n            }, false);\n        }\n        return _this;\n    }\n    VisibilityMonitor.getInstance = function () {\n        return new VisibilityMonitor();\n    };\n    /**\n     * @param {!string} eventType\n     * @return {Array.<boolean>}\n     */\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\n        util_1.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n        return [this.visible_];\n    };\n    return VisibilityMonitor;\n}(EventEmitter_1.EventEmitter));\nexports.VisibilityMonitor = VisibilityMonitor;\n\n//# sourceMappingURL=VisibilityMonitor.js.map\n"]}]