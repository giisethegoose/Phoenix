["46b0e7355205a074b532ce21828e63466f382eb1","13315be2c0dfbd9e26a59be2d1a0c1afaf7a4bc4",["@firebase/util"],[99],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/operation/Operation.js"],"names":["Object","defineProperty","exports","value","util_1","require","OperationType","OperationSource","fromUser","fromServer","queryId","tagged","assert","User","Server","forServerTaggedQuery"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,SAASC,OAAT,kBAAJ;;AAKA,IAAIC,aAAJ;AACA,CAAC,UAAUA,aAAV,EAAyB;AACtBA,gBAAcA,cAAc,WAAd,IAA6B,CAA3C,IAAgD,WAAhD;AACAA,gBAAcA,cAAc,OAAd,IAAyB,CAAvC,IAA4C,OAA5C;AACAA,gBAAcA,cAAc,gBAAd,IAAkC,CAAhD,IAAqD,gBAArD;AACAA,gBAAcA,cAAc,iBAAd,IAAmC,CAAjD,IAAsD,iBAAtD;AACH,CALD,EAKGA,gBAAgBJ,QAAQI,aAAR,KAA0BJ,QAAQI,aAAR,GAAwB,EAAlD,CALnB;;AAaA,IAAIC,kBAAiC,YAAY;AAC7C,WAASA,eAAT,CAAyBC,QAAzB,EAAmCC,UAAnC,EAA+CC,OAA/C,EAAwDC,MAAxD,EAAgE;AAC5D,SAAKH,QAAL,GAAgBA,QAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,MAAL,GAAcA,MAAd;AACAP,WAAOQ,MAAP,CAAc,CAACD,MAAD,IAAWF,UAAzB,EAAqC,qCAArC;AACH;;AAKDF,kBAAgBM,IAAhB,GAAuB,IAAIN,eAAJ,CACT,IADS,EACH,KADG,EACI,IADJ,EAEX,KAFW,CAAvB;;AAOAA,kBAAgBO,MAAhB,GAAyB,IAAIP,eAAJ,CAAoB,KAApB,EACT,IADS,EACH,IADG,EAEb,KAFa,CAAzB;;AAOAA,kBAAgBQ,oBAAhB,GAAuC,UAAUL,OAAV,EAAmB;AACtD,WAAO,IAAIH,eAAJ,CAAoB,KAApB,EACS,IADT,EACeG,OADf,EAEK,IAFL,CAAP;AAGH,GAJD;AAKA,SAAOH,eAAP;AACH,CAhCoC,EAArC;AAiCAL,QAAQK,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n *\n * @enum\n */\nvar OperationType;\n(function (OperationType) {\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\n})(OperationType = exports.OperationType || (exports.OperationType = {}));\n/**\n * @param {boolean} fromUser\n * @param {boolean} fromServer\n * @param {?string} queryId\n * @param {boolean} tagged\n * @constructor\n */\nvar OperationSource = /** @class */ (function () {\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\n        this.fromUser = fromUser;\n        this.fromServer = fromServer;\n        this.queryId = queryId;\n        this.tagged = tagged;\n        util_1.assert(!tagged || fromServer, 'Tagged queries must be from server.');\n    }\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.User = new OperationSource(\n    /*fromUser=*/ true, false, null, \n    /*tagged=*/ false);\n    /**\n     * @const\n     * @type {!OperationSource}\n     */\n    OperationSource.Server = new OperationSource(false, \n    /*fromServer=*/ true, null, \n    /*tagged=*/ false);\n    /**\n     * @param {string} queryId\n     * @return {!OperationSource}\n     */\n    OperationSource.forServerTaggedQuery = function (queryId) {\n        return new OperationSource(false, \n        /*fromServer=*/ true, queryId, \n        /*tagged=*/ true);\n    };\n    return OperationSource;\n}());\nexports.OperationSource = OperationSource;\n\n//# sourceMappingURL=Operation.js.map\n"]}]