["fdc12b97bfc3d4f7aed44cec32a171cbc7102e66","866c3a63d3d7e12d42580b08f8b73544b6f24fde",["./error","./object","./promise_external","./type","./xhrio"],[107,140,179,221,259],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/storage/dist/cjs/src/implementation/xhrio_network.js"],"names":["Object","defineProperty","exports","value","errorsExports","require","object","promiseimpl","type","XhrIoExports","NetworkXhrIo","_this","sent_","xhr_","XMLHttpRequest","errorCode_","ErrorCode","NO_ERROR","sendPromise_","make","resolve","reject","addEventListener","event","ABORT","NETWORK_ERROR","prototype","send","url","method","opt_body","opt_headers","internalError","open","isDef","headers","forEach","key","val","setRequestHeader","toString","getErrorCode","getStatus","status","e","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar errorsExports = require(\"./error\");\nvar object = require(\"./object\");\nvar promiseimpl = require(\"./promise_external\");\nvar type = require(\"./type\");\nvar XhrIoExports = require(\"./xhrio\");\n/**\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\n * doesn't work in React Native on Android.\n */\nvar NetworkXhrIo = /** @class */ (function () {\n    function NetworkXhrIo() {\n        var _this = this;\n        this.sent_ = false;\n        this.xhr_ = new XMLHttpRequest();\n        this.errorCode_ = XhrIoExports.ErrorCode.NO_ERROR;\n        this.sendPromise_ = promiseimpl.make(function (resolve, reject) {\n            _this.xhr_.addEventListener('abort', function (event) {\n                _this.errorCode_ = XhrIoExports.ErrorCode.ABORT;\n                resolve(_this);\n            });\n            _this.xhr_.addEventListener('error', function (event) {\n                _this.errorCode_ = XhrIoExports.ErrorCode.NETWORK_ERROR;\n                resolve(_this);\n            });\n            _this.xhr_.addEventListener('load', function (event) {\n                resolve(_this);\n            });\n        });\n    }\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.send = function (url, method, opt_body, opt_headers) {\n        var _this = this;\n        if (this.sent_) {\n            throw errorsExports.internalError('cannot .send() more than once');\n        }\n        this.sent_ = true;\n        this.xhr_.open(method, url, true);\n        if (type.isDef(opt_headers)) {\n            var headers = opt_headers;\n            object.forEach(headers, function (key, val) {\n                _this.xhr_.setRequestHeader(key, val.toString());\n            });\n        }\n        if (type.isDef(opt_body)) {\n            this.xhr_.send(opt_body);\n        }\n        else {\n            this.xhr_.send();\n        }\n        return this.sendPromise_;\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getErrorCode = function () {\n        if (!this.sent_) {\n            throw errorsExports.internalError('cannot .getErrorCode() before sending');\n        }\n        return this.errorCode_;\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getStatus = function () {\n        if (!this.sent_) {\n            throw errorsExports.internalError('cannot .getStatus() before sending');\n        }\n        try {\n            return this.xhr_.status;\n        }\n        catch (e) {\n            return -1;\n        }\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getResponseText = function () {\n        if (!this.sent_) {\n            throw errorsExports.internalError('cannot .getResponseText() before sending');\n        }\n        return this.xhr_.responseText;\n    };\n    /**\n     * Aborts the request.\n     * @override\n     */\n    NetworkXhrIo.prototype.abort = function () {\n        this.xhr_.abort();\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\n        return this.xhr_.getResponseHeader(header);\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n        if (type.isDef(this.xhr_.upload)) {\n            this.xhr_.upload.addEventListener('progress', listener);\n        }\n    };\n    /**\n     * @override\n     */\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n        if (type.isDef(this.xhr_.upload)) {\n            this.xhr_.upload.removeEventListener('progress', listener);\n        }\n    };\n    return NetworkXhrIo;\n}());\nexports.NetworkXhrIo = NetworkXhrIo;\n\n//# sourceMappingURL=xhrio_network.js.map\n"]}]