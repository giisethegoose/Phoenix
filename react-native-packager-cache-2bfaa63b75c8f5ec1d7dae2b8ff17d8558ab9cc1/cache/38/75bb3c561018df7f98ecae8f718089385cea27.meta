["5d7f7cfce5c83ab5fe9c6bf5194c2cd349044454","4dd8d0b9e005656d2ad853a00309bb6bf945ef8f",["@firebase/util"],[99],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/core/storage/DOMStorageWrapper.js"],"names":["Object","defineProperty","exports","value","util_1","require","DOMStorageWrapper","domStorage_","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,SAASC,OAAT,kBAAJ;;AAWA,IAAIC,oBAAmC,YAAY;AAI/C,aAASA,iBAAT,CAA2BC,WAA3B,EAAwC;AACpC,aAAKA,WAAL,GAAmBA,WAAnB;;AAEA,aAAKC,OAAL,GAAe,WAAf;AACH;;AAKDF,sBAAkBG,SAAlB,CAA4BC,GAA5B,GAAkC,UAAUC,GAAV,EAAeR,KAAf,EAAsB;AACpD,YAAIA,SAAS,IAAb,EAAmB;AACf,iBAAKI,WAAL,CAAiBK,UAAjB,CAA4B,KAAKC,aAAL,CAAmBF,GAAnB,CAA5B;AACH,SAFD,MAGK;AACD,iBAAKJ,WAAL,CAAiBO,OAAjB,CAAyB,KAAKD,aAAL,CAAmBF,GAAnB,CAAzB,EAAkDP,OAAOW,SAAP,CAAiBZ,KAAjB,CAAlD;AACH;AACJ,KAPD;;AAYAG,sBAAkBG,SAAlB,CAA4BO,GAA5B,GAAkC,UAAUL,GAAV,EAAe;AAC7C,YAAIM,YAAY,KAAKV,WAAL,CAAiBW,OAAjB,CAAyB,KAAKL,aAAL,CAAmBF,GAAnB,CAAzB,CAAhB;AACA,YAAIM,aAAa,IAAjB,EAAuB;AACnB,mBAAO,IAAP;AACH,SAFD,MAGK;AACD,mBAAOb,OAAOe,QAAP,CAAgBF,SAAhB,CAAP;AACH;AACJ,KARD;;AAYAX,sBAAkBG,SAAlB,CAA4BW,MAA5B,GAAqC,UAAUT,GAAV,EAAe;AAChD,aAAKJ,WAAL,CAAiBK,UAAjB,CAA4B,KAAKC,aAAL,CAAmBF,GAAnB,CAA5B;AACH,KAFD;;AAOAL,sBAAkBG,SAAlB,CAA4BI,aAA5B,GAA4C,UAAUQ,IAAV,EAAgB;AACxD,eAAO,KAAKb,OAAL,GAAea,IAAtB;AACH,KAFD;AAGAf,sBAAkBG,SAAlB,CAA4Ba,QAA5B,GAAuC,YAAY;AAC/C,eAAO,KAAKf,WAAL,CAAiBe,QAAjB,EAAP;AACH,KAFD;AAGA,WAAOhB,iBAAP;AACH,CAnDsC,EAAvC;AAoDAJ,QAAQI,iBAAR,GAA4BA,iBAA5B","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@firebase/util\");\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n * @constructor\n */\nvar DOMStorageWrapper = /** @class */ (function () {\n    /**\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\n     */\n    function DOMStorageWrapper(domStorage_) {\n        this.domStorage_ = domStorage_;\n        // Use a prefix to avoid collisions with other stuff saved by the app.\n        this.prefix_ = 'firebase:';\n    }\n    /**\n     * @param {string} key The key to save the value under\n     * @param {?Object} value The value being stored, or null to remove the key.\n     */\n    DOMStorageWrapper.prototype.set = function (key, value) {\n        if (value == null) {\n            this.domStorage_.removeItem(this.prefixedName_(key));\n        }\n        else {\n            this.domStorage_.setItem(this.prefixedName_(key), util_1.stringify(value));\n        }\n    };\n    /**\n     * @param {string} key\n     * @return {*} The value that was stored under this key, or null\n     */\n    DOMStorageWrapper.prototype.get = function (key) {\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n        if (storedVal == null) {\n            return null;\n        }\n        else {\n            return util_1.jsonEval(storedVal);\n        }\n    };\n    /**\n     * @param {string} key\n     */\n    DOMStorageWrapper.prototype.remove = function (key) {\n        this.domStorage_.removeItem(this.prefixedName_(key));\n    };\n    /**\n     * @param {string} name\n     * @return {string}\n     */\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\n        return this.prefix_ + name;\n    };\n    DOMStorageWrapper.prototype.toString = function () {\n        return this.domStorage_.toString();\n    };\n    return DOMStorageWrapper;\n}());\nexports.DOMStorageWrapper = DOMStorageWrapper;\n\n//# sourceMappingURL=DOMStorageWrapper.js.map\n"]}]