["c1ef5b23bd60ec90ea7530b25eaaed37fbb9c508","b83faa947bb1c7bff402e4b1f655fb0af7c03317",["../core/util/util","../core/util/libs/parser","../core/util/Path","./Reference","../core/Repo","../core/RepoManager","@firebase/util","../core/util/validation"],[99,144,194,242,279,324,369,415],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/database/dist/cjs/src/api/Database.js"],"names":["Object","defineProperty","exports","value","util_1","require","parser_1","Path_1","Reference_1","Repo_1","RepoManager_1","util_2","validation_1","Database","repo_","Repo","fatal","root_","Reference","Path","Empty","INTERNAL","DatabaseInternals","prototype","get","app","enumerable","configurable","ref","pathString","checkDeleted_","validateArgCount","arguments","length","undefined","child","refFromURL","url","apiName","parsedURL","parseRepoInfo","validateUrl","repoInfo","host","repoInfo_","path","toString","goOffline","interrupt","goOnline","resume","ServerValue","TIMESTAMP","database","delete","RepoManager","getInstance","deleteRepo","Promise","resolve"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../core/util/util\");\nvar parser_1 = require(\"../core/util/libs/parser\");\nvar Path_1 = require(\"../core/util/Path\");\nvar Reference_1 = require(\"./Reference\");\nvar Repo_1 = require(\"../core/Repo\");\nvar RepoManager_1 = require(\"../core/RepoManager\");\nvar util_2 = require(\"@firebase/util\");\nvar validation_1 = require(\"../core/util/validation\");\n/**\n * Class representing a firebase database.\n * @implements {FirebaseService}\n */\nvar Database = /** @class */ (function () {\n    /**\n     * The constructor should not be called by users of our public API.\n     * @param {!Repo} repo_\n     */\n    function Database(repo_) {\n        this.repo_ = repo_;\n        if (!(repo_ instanceof Repo_1.Repo)) {\n            util_1.fatal(\"Don't call new Database() directly - please use firebase.database().\");\n        }\n        /** @type {Reference} */\n        this.root_ = new Reference_1.Reference(repo_, Path_1.Path.Empty);\n        this.INTERNAL = new DatabaseInternals(this);\n    }\n    Object.defineProperty(Database.prototype, \"app\", {\n        get: function () {\n            return this.repo_.app;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a reference to the root or the path specified in opt_pathString.\n     * @param {string=} pathString\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.ref = function (pathString) {\n        this.checkDeleted_('ref');\n        util_2.validateArgCount('database.ref', 0, 1, arguments.length);\n        return pathString !== undefined ? this.root_.child(pathString) : this.root_;\n    };\n    /**\n     * Returns a reference to the root or the path specified in url.\n     * We throw a exception if the url is not in the same domain as the\n     * current repo.\n     * @param {string} url\n     * @return {!Reference} Firebase reference.\n     */\n    Database.prototype.refFromURL = function (url) {\n        /** @const {string} */\n        var apiName = 'database.refFromURL';\n        this.checkDeleted_(apiName);\n        util_2.validateArgCount(apiName, 1, 1, arguments.length);\n        var parsedURL = parser_1.parseRepoInfo(url);\n        validation_1.validateUrl(apiName, 1, parsedURL);\n        var repoInfo = parsedURL.repoInfo;\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\n            util_1.fatal(apiName +\n                ': Host name does not match the current database: ' +\n                '(found ' +\n                repoInfo.host +\n                ' but expected ' +\n                this.repo_.repoInfo_.host +\n                ')');\n        }\n        return this.ref(parsedURL.path.toString());\n    };\n    /**\n     * @param {string} apiName\n     */\n    Database.prototype.checkDeleted_ = function (apiName) {\n        if (this.repo_ === null) {\n            util_1.fatal('Cannot call ' + apiName + ' on a deleted database.');\n        }\n    };\n    // Make individual repo go offline.\n    Database.prototype.goOffline = function () {\n        util_2.validateArgCount('database.goOffline', 0, 0, arguments.length);\n        this.checkDeleted_('goOffline');\n        this.repo_.interrupt();\n    };\n    Database.prototype.goOnline = function () {\n        util_2.validateArgCount('database.goOnline', 0, 0, arguments.length);\n        this.checkDeleted_('goOnline');\n        this.repo_.resume();\n    };\n    Database.ServerValue = {\n        TIMESTAMP: {\n            '.sv': 'timestamp'\n        }\n    };\n    return Database;\n}());\nexports.Database = Database;\nvar DatabaseInternals = /** @class */ (function () {\n    /** @param {!Database} database */\n    function DatabaseInternals(database) {\n        this.database = database;\n    }\n    /** @return {Promise<void>} */\n    DatabaseInternals.prototype.delete = function () {\n        this.database.checkDeleted_('delete');\n        RepoManager_1.RepoManager.getInstance().deleteRepo(this.database.repo_);\n        this.database.repo_ = null;\n        this.database.root_ = null;\n        this.database.INTERNAL = null;\n        this.database = null;\n        return Promise.resolve();\n    };\n    return DatabaseInternals;\n}());\nexports.DatabaseInternals = DatabaseInternals;\n\n//# sourceMappingURL=Database.js.map\n"]}]