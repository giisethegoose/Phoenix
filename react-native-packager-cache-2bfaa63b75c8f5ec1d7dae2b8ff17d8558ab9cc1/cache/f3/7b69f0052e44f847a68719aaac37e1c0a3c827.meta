["c08a34e372eca9ffef55670d6e647753dec586ac","7cc896bcfed00ef538f152bb276c5b63a883bfd5",[],[],{"version":3,"sources":["/home/giise/candidtwo/node_modules/@firebase/util/dist/cjs/src/deferred.js"],"names":["Object","defineProperty","exports","value","Deferred","_this","promise","Promise","resolve","reject","prototype","wrapCallback","callback","error","catch","length"],"mappings":"AAAA;;AAgBAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAIC,WAA0B,YAAY;AACtC,aAASA,QAAT,GAAoB;AAChB,YAAIC,QAAQ,IAAZ;AACA,aAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAClDJ,kBAAMG,OAAN,GAAgBA,OAAhB;AACAH,kBAAMI,MAAN,GAAeA,MAAf;AACH,SAHc,CAAf;AAIH;;AAQDL,aAASM,SAAT,CAAmBC,YAAnB,GAAkC,UAAUC,QAAV,EAAoB;AAClD,YAAIP,QAAQ,IAAZ;AACA,eAAO,UAAUQ,KAAV,EAAiBV,KAAjB,EAAwB;AAC3B,gBAAIU,KAAJ,EAAW;AACPR,sBAAMI,MAAN,CAAaI,KAAb;AACH,aAFD,MAGK;AACDR,sBAAMG,OAAN,CAAcL,KAAd;AACH;AACD,gBAAI,OAAOS,QAAP,KAAoB,UAAxB,EAAoC;AAGhCP,sBAAMC,OAAN,CAAcQ,KAAd,CAAoB,YAAY,CAAG,CAAnC;;AAGA,oBAAIF,SAASG,MAAT,KAAoB,CAAxB,EAA2B;AACvBH,6BAASC,KAAT;AACH,iBAFD,MAGK;AACDD,6BAASC,KAAT,EAAgBV,KAAhB;AACH;AACJ;AACJ,SApBD;AAqBH,KAvBD;AAwBA,WAAOC,QAAP;AACH,CAxC6B,EAA9B;AAyCAF,QAAQE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n    }\n    /**\n    * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n    * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n    * and returns a node-style callback which will resolve or reject the Deferred's promise.\n    * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\n    * @return {!function(?(Error), ?=)}\n    */\n    Deferred.prototype.wrapCallback = function (callback) {\n        var _this = this;\n        return function (error, value) {\n            if (error) {\n                _this.reject(error);\n            }\n            else {\n                _this.resolve(value);\n            }\n            if (typeof callback === 'function') {\n                // Attaching noop handler just in case developer wasn't expecting\n                // promises\n                _this.promise.catch(function () { });\n                // Some of our callbacks don't expect a value and our own tests\n                // assert that the parameter length is 1\n                if (callback.length === 1) {\n                    callback(error);\n                }\n                else {\n                    callback(error, value);\n                }\n            }\n        };\n    };\n    return Deferred;\n}());\nexports.Deferred = Deferred;\n\n//# sourceMappingURL=deferred.js.map\n"]}]