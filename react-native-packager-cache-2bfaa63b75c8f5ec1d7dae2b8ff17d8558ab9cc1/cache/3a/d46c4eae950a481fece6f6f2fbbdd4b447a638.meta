["d0e5e20862c0ec7afce683b3f2bf482f502d2230","033b31c1f5400e0bbdfaba878356605360f3410d",["../utils/invariant"],[132],{"version":3,"sources":["/home/giise/candidtwo/node_modules/react-navigation/src/routers/getScreenForRouteName.js"],"names":["getScreenForRouteName","routeConfigs","routeName","routeConfig","Error","Object","keys","map","a","join","screen","getScreen"],"mappings":";;;kBAawBA,qB;;AAXxB;;;;;;AAWe,SAASA,qBAAT,CACbC,YADa,EAEbC,SAFa,EAGQ;AACrB,MAAMC,cAAcF,aAAaC,SAAb,CAApB;;AAEA,MAAI,CAACC,WAAL,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CACJ,uCAAqCF,SAArC,iCACqBG,OAAOC,IAAP,CAAYL,YAAZ,EAChBM,GADgB,CACZ,UAACC,CAAD;AAAA,oBAAmBA,CAAnB;AAAA,KADY,EAEhBC,IAFgB,CAEX,GAFW,CADrB,CADI,CAAN;AAMD;;AAED,MAAIN,YAAYO,MAAhB,EAAwB;AACtB,WAAOP,YAAYO,MAAnB;AACD;;AAED,MAAI,OAAOP,YAAYQ,SAAnB,KAAiC,UAArC,EAAiD;AAC/C,QAAMD,SAASP,YAAYQ,SAAZ,EAAf;AACA,6BACE,OAAOD,MAAP,KAAkB,UADpB,EAEE,uCAAoCR,SAApC,gCACE,0BADF,GAEE,6BAFF,IAGKA,SAHL,gEAFF;AAOA,WAAOQ,MAAP;AACD;;AAED,QAAM,IAAIN,KAAJ,YAAmBF,SAAnB,2CAAN;AACD","sourcesContent":["/* @flow */\n\nimport invariant from '../utils/invariant';\n\nimport type {\n  NavigationComponent,\n  NavigationRouteConfigMap,\n} from '../TypeDefinition';\n\n/**\n * Simple helper that gets a single screen (React component or navigator)\n * out of the navigator config.\n */\nexport default function getScreenForRouteName(\n  routeConfigs: NavigationRouteConfigMap,\n  routeName: string\n): NavigationComponent {\n  const routeConfig = routeConfigs[routeName];\n\n  if (!routeConfig) {\n    throw new Error(\n      `There is no route defined for key ${routeName}.\\n` +\n        `Must be one of: ${Object.keys(routeConfigs)\n          .map((a: string) => `'${a}'`)\n          .join(',')}`\n    );\n  }\n\n  if (routeConfig.screen) {\n    return routeConfig.screen;\n  }\n\n  if (typeof routeConfig.getScreen === 'function') {\n    const screen = routeConfig.getScreen();\n    invariant(\n      typeof screen === 'function',\n      `The getScreen defined for route '${routeName} didn't return a valid ` +\n        'screen or navigator.\\n\\n' +\n        'Please pass it like this:\\n' +\n        `${routeName}: {\\n  getScreen: () => require('./MyScreen').default\\n}`\n    );\n    return screen;\n  }\n\n  throw new Error(`Route ${routeName} must define a screen or a getScreen.`);\n}\n"]}]